import { distinctUntilChanged, map, switchMap } from 'rxjs/operators';
import { streamingComponent } from './streamingComponent';
function id(val) {
    return val;
}
// something is a bit off with the TS typings here
function createWithObservable() {
    return streamingComponent(props$ => props$.pipe(distinctUntilChanged((props, prevProps) => props.observable === prevProps.observable), switchMap(props => props.observable.pipe(map(observableValue => props.children
        ? props.children(observableValue)
        : id(observableValue))))));
}
export const WithObservable = createWithObservable();
