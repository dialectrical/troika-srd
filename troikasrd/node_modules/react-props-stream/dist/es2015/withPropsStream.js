import * as React from 'react';
import { map } from 'rxjs/operators';
import { streamingComponent } from './streamingComponent';
export function withPropsStream(observableOrFactory, TargetComponent) {
    const ComposedComponent = streamingComponent(sourceProps$ => {
        const targetProps$ = typeof observableOrFactory === 'function'
            ? observableOrFactory(sourceProps$)
            : observableOrFactory;
        return targetProps$.pipe(map(props => React.createElement(TargetComponent, Object.assign({}, props))));
    });
    const displayName = typeof TargetComponent === 'string'
        ? TargetComponent
        : TargetComponent.displayName || TargetComponent.name || 'Component';
    ComposedComponent.displayName = `withPropsStream(${displayName})`;
    return ComposedComponent;
}
