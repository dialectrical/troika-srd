import { ImmerBaseState, ProxyType, AnySet, Drafted, ImmerState, DRAFT_STATE } from "./internal";
export interface SetState extends ImmerBaseState {
    type: ProxyType.Set;
    copy: AnySet | undefined;
    base: AnySet;
    drafts: Map<any, Drafted>;
    revoked: boolean;
    draft: Drafted<AnySet, SetState>;
}
export declare function proxySet<T extends AnySet>(target: T, parent?: ImmerState): T & {
    [DRAFT_STATE]: SetState;
};
//# sourceMappingURL=set.d.ts.map