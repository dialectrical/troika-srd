"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.traverse = void 0;
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
const OperatorSubscriber_1 = require("../OperatorSubscriber");
const NotificationQueue_1 = require("./NotificationQueue");
function traverse({ concurrency = 1, factory, operator = rxjs_1.identity, notifier, }) {
    return new rxjs_1.Observable((subscriber) => {
        let queue;
        let queueOperator;
        if (notifier) {
            queue = new NotificationQueue_1.NotificationQueue(notifier);
            queueOperator = rxjs_1.identity;
        }
        else {
            const subject = new rxjs_1.Subject();
            queue = new NotificationQueue_1.NotificationQueue(subject);
            queueOperator = (markers) => {
                subject.next();
                return markers;
            };
        }
        const destination = new rxjs_1.Subject();
        destination.subscribe(subscriber);
        subscriber.add(queue.connect());
        rxjs_1.of(undefined)
            .pipe(operators_1.expand((marker) => queue.pipe(operators_1.mergeMap((index) => factory(marker, index).pipe(operators_1.mergeMap(({ markers, values }) => rxjs_1.concat(rxjs_1.from(values).pipe(operator, operators_1.tap((value) => destination.next(value)), operators_1.ignoreElements()), rxjs_1.from(markers))))), queueOperator), concurrency))
            .subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, {
            complete: () => destination.complete(),
            error: (error) => destination.error(error),
            next: rxjs_1.noop,
        }));
    });
}
exports.traverse = traverse;
//# sourceMappingURL=traverse.js.map