import { ConnectableObservable, Observable, OperatorFunction, Subject, UnaryFunction } from "rxjs";
import { CloseKind } from "../kinds";
export declare function multicastWithKind<T>(factory: (kind?: CloseKind, subject?: Subject<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;
export declare function multicastWithKind<T, R>(factory: (kind?: CloseKind, subject?: Subject<T>) => Subject<T>, selector: OperatorFunction<T, R>): OperatorFunction<T, R>;
