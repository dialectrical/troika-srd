import { Subscriber } from "rxjs";
const defaultComplete = Subscriber.prototype._complete;
const defaultError = Subscriber.prototype._error;
const defaultNext = Subscriber.prototype._next;
export class OperatorSubscriber extends Subscriber {
    constructor(destination, handlers) {
        super(destination);
        const { complete, error, next } = handlers;
        this._complete = complete
            ? () => {
                try {
                    complete();
                }
                catch (caught) {
                    destination.error(caught);
                }
                this.unsubscribe();
            }
            : defaultComplete;
        this._error = error
            ? (received) => {
                try {
                    error(received);
                }
                catch (caught) {
                    destination.error(caught);
                }
                this.unsubscribe();
            }
            : defaultError;
        this._next = next
            ? (value) => {
                try {
                    next(value);
                }
                catch (caught) {
                    destination.error(caught);
                }
            }
            : defaultNext;
    }
}
//# sourceMappingURL=OperatorSubscriber.js.map