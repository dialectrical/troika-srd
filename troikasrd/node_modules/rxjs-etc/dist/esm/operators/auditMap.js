import { defer, EMPTY, from } from "rxjs";
import { concat, last, mergeMap, tap } from "rxjs/operators";
export function auditMap(project) {
    return (source) => {
        let pending = false;
        let queued = undefined;
        return source.pipe(mergeMap((value, index) => {
            if (pending) {
                queued = [value, index];
                return EMPTY;
            }
            pending = true;
            return from(project(value, index)).pipe(concat(defer(() => {
                if (!queued) {
                    return EMPTY;
                }
                const projected = project(...queued);
                queued = undefined;
                return from(projected);
            })), last(), tap({
                complete: () => (pending = false),
            }));
        }));
    };
}
//# sourceMappingURL=auditMap.js.map