import { concat, Observable, race, timer, } from "rxjs";
import { mapTo, publish } from "rxjs/operators";
export function startWithTimeout(value, duration, scheduler) {
    if (duration === 0 && !scheduler) {
        return (source) => new Observable((subscriber) => {
            let nexted = false;
            const subscription = source.subscribe((value) => {
                nexted = true;
                subscriber.next(value);
            }, subscriber.error.bind(subscriber), subscriber.complete.bind(subscriber));
            if (!nexted) {
                subscriber.next(value);
            }
            return subscription;
        });
    }
    return (source) => source.pipe(publish((published) => race(published, concat(timer(duration, scheduler).pipe(mapTo(value)), published))));
}
//# sourceMappingURL=startWithTimeout.js.map