import { Observable, Subject, Subscription, } from "rxjs";
import { publish } from "rxjs/operators";
export function prioritize(selector) {
    return (source) => new Observable((observer) => {
        const published = publish()(source);
        const subjects = [];
        const subscription = new Subscription();
        const length = Math.max(selector.length, 2);
        for (let i = 0; i < length; ++i) {
            const subject = new Subject();
            subjects.push(subject);
            subscription.add(published.subscribe(subject));
        }
        const [first, second, ...rest] = subjects;
        subscription.add(selector(first, second, ...rest).subscribe(observer));
        subscription.add(published.connect());
        return subscription;
    });
}
//# sourceMappingURL=prioritize.js.map