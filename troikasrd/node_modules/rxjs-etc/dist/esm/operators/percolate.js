import { from, Observable } from "rxjs";
export function percolate(...sources) {
    const [first, ...remainder] = sources;
    if (sources.length === 1 && Array.isArray(first)) {
        return percolate(...first);
    }
    return new Observable((subscriber) => {
        const subNext = (err) => {
            if (remainder.length === 0) {
                subscriber.error(err);
            }
            else {
                subscriber.add(percolate(...remainder).subscribe(subscriber));
            }
        };
        return from(first).subscribe({
            complete: () => {
                subscriber.complete();
            },
            next(value) {
                subscriber.next(value);
            },
            error: subNext,
        });
    });
}
//# sourceMappingURL=percolate.js.map