import { from, Observable, Subscription, } from "rxjs";
const NO_VAL = {};
export const continueWith = (mapper) => (source$) => new Observable((observer) => {
    let latestValue = NO_VAL;
    const subscription = new Subscription();
    subscription.add(source$.subscribe({
        complete: () => {
            if (latestValue === NO_VAL) {
                observer.complete();
            }
            else {
                const nextObservable$ = from(mapper(latestValue));
                subscription.add(nextObservable$.subscribe(observer));
            }
        },
        error: (e) => {
            observer.error(e);
        },
        next: (val) => {
            observer.next((latestValue = val));
        },
    }));
    return subscription;
});
//# sourceMappingURL=continueWith.js.map