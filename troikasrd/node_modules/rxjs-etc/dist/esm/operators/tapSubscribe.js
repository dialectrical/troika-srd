import { defer, noop } from "rxjs";
import { finalize, tap } from "rxjs/operators";
export function tapSubscribe(configOrSubscribe) {
    const { ignore = {}, subscribe = noop, unsubscribe = noop } = typeof configOrSubscribe === "function"
        ? { subscribe: configOrSubscribe }
        : configOrSubscribe;
    return (source) => defer(() => {
        let completed = false;
        let errored = false;
        subscribe();
        return source.pipe(tap({
            complete: () => (completed = true),
            error: () => (errored = true),
        }), finalize(() => {
            if (completed && ignore.complete) {
                return;
            }
            if (errored && ignore.error) {
                return;
            }
            unsubscribe();
        }));
    });
}
//# sourceMappingURL=tapSubscribe.js.map