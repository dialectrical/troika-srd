import { createResolver } from "memoize-resolver";
import { ReplaySubject } from "rxjs";
import { multicast, refCount } from "rxjs/operators";
export function memo(func, memoize) {
    const resolver = createResolver();
    return (memoize || defaultMemoize)((...args) => func(...args).pipe(multicast(new ReplaySubject(Infinity)), refCount()), resolver);
}
function defaultMemoize(func, resolver) {
    const map = new Map();
    return (...args) => {
        const key = resolver(...args);
        if (map.has(key)) {
            return map.get(key);
        }
        const result = func(...args);
        map.set(key, result);
        return result;
    };
}
//# sourceMappingURL=memo.js.map