import { Observable, Subject, zip, } from "rxjs";
import { first, map, publish } from "rxjs/operators";
export class NotificationQueue extends Observable {
    constructor(notifier) {
        super((observer) => {
            const index = this._count++;
            const subscription = this._notifications
                .pipe(first((value) => value === index))
                .subscribe(observer);
            this._indices.next(index);
            return subscription;
        });
        this._count = 0;
        this._indices = new Subject();
        this._notifications = zip(notifier, this._indices).pipe(map(([, index]) => index), publish());
    }
    connect() {
        return this._notifications.connect();
    }
}
//# sourceMappingURL=NotificationQueue.js.map