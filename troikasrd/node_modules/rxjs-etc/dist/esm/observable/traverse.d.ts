import { Observable, ObservableInput, OperatorFunction } from "rxjs";
export declare type TraverseElement<T, M> = {
    markers: ObservableInput<M>;
    values: ObservableInput<T>;
};
export declare type TraverseFactory<T, M> = (marker: M | undefined, index: number) => Observable<TraverseElement<T, M>>;
export declare function traverse<T, M>(options: {
    concurrency?: number;
    factory: TraverseFactory<T, M>;
    notifier: Observable<any>;
}): Observable<T>;
export declare function traverse<T, M, R>(options: {
    concurrency?: number;
    factory: TraverseFactory<T, M>;
    operator: OperatorFunction<T, R>;
}): Observable<R>;
export declare function traverse<T, M>(options: {
    concurrency?: number;
    factory: TraverseFactory<T, M>;
}): Observable<T>;
