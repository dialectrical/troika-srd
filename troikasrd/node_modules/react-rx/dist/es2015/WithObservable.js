import { distinctUntilChanged, map, switchMap } from 'rxjs/operators';
import { reactiveComponent } from './reactiveComponent';
function createWithObservable() {
    return reactiveComponent((props$) => props$.pipe(distinctUntilChanged((props, prevProps) => props.observable === prevProps.observable), switchMap((props) => props.observable.pipe(map((observableValue) => props.children(observableValue))))));
}
/**
 * @deprecated Use the useObservable hook instead
 */
export const WithObservable = createWithObservable();
