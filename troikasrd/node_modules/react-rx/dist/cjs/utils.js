"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.observeElement = exports.observeContext = exports.observeCallback = exports.observeState = void 0;
var useAsObservable_1 = require("./useAsObservable");
var observable_callback_1 = require("observable-callback");
var operators_1 = require("rxjs/operators");
var react_1 = require("react");
var createState = function (initialState) { return observable_callback_1.observableCallback(operators_1.startWith(initialState)); };
function observeState(initial) {
    var _a = react_1.useState(initial), value = _a[0], update = _a[1];
    return [useAsObservable_1.useAsObservable(value), update];
}
exports.observeState = observeState;
function observeCallback(operator) {
    var ref = react_1.useRef();
    if (!ref.current) {
        ref.current = operator ? observable_callback_1.observableCallback(operator) : observable_callback_1.observableCallback();
    }
    return ref.current;
}
exports.observeCallback = observeCallback;
function observeContext(context) {
    return useAsObservable_1.useAsObservable(react_1.useContext(context));
}
exports.observeContext = observeContext;
function observeElement() {
    var ref = react_1.useRef();
    if (!ref.current) {
        ref.current = createState(null);
    }
    return ref.current;
}
exports.observeElement = observeElement;
