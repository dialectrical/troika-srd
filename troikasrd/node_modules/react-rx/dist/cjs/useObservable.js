"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMemoObservable = exports.useObservable = void 0;
var react_1 = require("react");
var useIsomorphicEffect_1 = require("./useIsomorphicEffect");
function getValue(value) {
    return typeof value === 'function' ? value() : value;
}
function useObservable(observable, initialValue) {
    var subscription = react_1.useRef();
    var isInitial = react_1.useRef(true);
    var _a = react_1.useState(function () {
        var isSync = true;
        var syncVal = getValue(initialValue);
        subscription.current = observable.subscribe(function (nextVal) {
            if (isSync) {
                syncVal = nextVal;
            }
            else {
                setState(nextVal);
            }
        });
        isSync = false;
        return syncVal;
    }), value = _a[0], setState = _a[1];
    useIsomorphicEffect_1.useIsomorphicEffect(function () {
        // when the observable changes after initial (possibly sync render)
        if (!isInitial.current) {
            subscription.current = observable.subscribe(function (nextVal) { return setState(nextVal); });
        }
        isInitial.current = false;
        return function () {
            if (subscription.current) {
                subscription.current.unsubscribe();
                subscription.current = undefined;
            }
        };
    }, [observable]);
    return value;
}
exports.useObservable = useObservable;
function useMemoObservable(observableOrFactory, deps, initialValue) {
    return useObservable(react_1.useMemo(function () { return getValue(observableOrFactory); }, deps), initialValue);
}
exports.useMemoObservable = useMemoObservable;
