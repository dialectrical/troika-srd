import { Observable } from 'rxjs';
import { FunctionComponent, ReactNode, Ref } from 'react';
declare type Component<Props> = (input$: Observable<Props>) => Observable<ReactNode>;
export declare function reactiveComponent<Props>(observable: Observable<Props>): FunctionComponent<{}>;
export declare function reactiveComponent<Props>(component: Component<Props>): FunctionComponent<Props>;
declare type ForwardRefComponent<RefType, Props> = (input$: Observable<Props>, ref: Ref<RefType>) => Observable<ReactNode>;
export declare function forwardRef<RefType, Props = {}>(component: ForwardRefComponent<RefType, Props>): import("react").ForwardRefExoticComponent<import("react").PropsWithoutRef<Props> & import("react").RefAttributes<RefType>>;
export {};
