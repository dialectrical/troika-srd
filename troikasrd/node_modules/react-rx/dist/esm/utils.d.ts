import { Observable, OperatorFunction } from 'rxjs';
import { Dispatch, SetStateAction, Context } from 'react';
export declare function observeState<T>(initial: T | (() => T)): [Observable<T>, Dispatch<SetStateAction<T>>];
export declare function observeCallback<T>(): [Observable<T>, (arg: T) => void];
export declare function observeCallback<T, K>(operator: OperatorFunction<T, K>): [Observable<K>, (arg: T) => void];
export declare function observeContext<T>(context: Context<T>): Observable<T>;
export declare function observeElement<T>(): [Observable<T | null>, (el: T | null) => void];
