<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="9f1530e5-3e67-4ff9-b8bc-a40f03478761" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/../react-repl/src/Editor.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../react-repl/src/Editor.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../react-repl/src/ShowError.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../react-repl/src/ShowError.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../react-repl/src/transformers/babel.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../react-repl/src/transformers/babel.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../react-rx.dev/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/../react-rx.dev/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../react-rx.dev/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/../react-rx.dev/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../react-rx.dev/src/pages/Index/ReactRxReadme.md" beforeDir="false" afterPath="$PROJECT_DIR$/../react-rx.dev/src/pages/Index/ReactRxReadme.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/useObservable.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/useObservable.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="iy052u10" />
  </component>
  <component name="ProjectId" id="1PI8FtTkoa1tFBP8398nQ82nYf0" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="JavaScript" />
    <property name="full.screen.before.presentation.mode" value="true" />
    <property name="last.edited.regexp" value="jsx{1,2}" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/src" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.standard" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.standard" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.standard" value="" />
    <property name="node.js.selected.package.tslint" value="$PROJECT_DIR$/node_modules/tslint" />
    <property name="nodejs.jest.jest_package" value="$PROJECT_DIR$/node_modules/jest" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="prettierjs.PrettierConfiguration.Package" value="$PROJECT_DIR$/node_modules/prettier" />
    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Mappings" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/node_modules/typescript/lib" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/test-concurrent-mode" />
      <recent name="$PROJECT_DIR$/website/src/examples" />
      <recent name="$PROJECT_DIR$/src/__tests__" />
      <recent name="$PROJECT_DIR$/../react-rx.dev" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/website/src/examples" />
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/../react-rx.dev/src" />
      <recent name="$PROJECT_DIR$/../react-rx.dev/webpack" />
      <recent name="$PROJECT_DIR$/../react-rx.dev/webpack-configs" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.useObservable.test.tsx">
    <configuration name="All Tests" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration name="asObservable.test.tsx" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST_FILE" />
      <test-file value="$PROJECT_DIR$/src/__tests__/asObservable.test.tsx" />
      <method v="2" />
    </configuration>
    <configuration name="the returned observable should *not* receive a new value when component is rendered with an unchanged value" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/asObservable.test.tsx" />
      <test-names>
        <test-name value="the returned observable should *not* receive a new value when component is rendered with an unchanged value" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="the returned observable should receive a new value when component is rendered with a new value" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/asObservable.test.tsx" />
      <test-names>
        <test-name value="the returned observable should receive a new value when component is rendered with a new value" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="the returned observable should receive a new value when component is rendered with an unchanged value" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/asObservable.test.tsx" />
      <test-names>
        <test-name value="the returned observable should receive a new value when component is rendered with an unchanged value" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="useAsObservable.test.tsx" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST_FILE" />
      <test-file value="$PROJECT_DIR$/src/__tests__/useAsObservable.test.tsx" />
      <method v="2" />
    </configuration>
    <configuration name="useObservable.test.tsx" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST_FILE" />
      <test-file value="$PROJECT_DIR$/src/__tests__/useObservable.test.tsx" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.All Tests" />
      <item itemvalue="Jest.asObservable.test.tsx" />
      <item itemvalue="Jest.the returned observable should *not* receive a new value when component is rendered with an unchanged value" />
      <item itemvalue="Jest.the returned observable should receive a new value when component is rendered with a new value" />
      <item itemvalue="Jest.the returned observable should receive a new value when component is rendered with an unchanged value" />
      <item itemvalue="Jest.useAsObservable.test.tsx" />
      <item itemvalue="Jest.useObservable.test.tsx" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.useAsObservable.test.tsx" />
        <item itemvalue="Jest.asObservable.test.tsx" />
        <item itemvalue="Jest.the returned observable should receive a new value when component is rendered with a new value" />
        <item itemvalue="Jest.the returned observable should *not* receive a new value when component is rendered with an unchanged value" />
        <item itemvalue="Jest.the returned observable should receive a new value when component is rendered with an unchanged value" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
    <option name="version" value="2" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9f1530e5-3e67-4ff9-b8bc-a40f03478761" name="Default Changelist" comment="" />
      <created>1610996869139</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1610996869139</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/../../_/parcel-plugin-mdx" />
      <path value="$PROJECT_DIR$/test-concurrent-mode" />
      <path value="$PROJECT_DIR$/test-concurrent-mode2" />
      <path value="$PROJECT_DIR$/website" />
    </ignored-roots>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/react_rx$All_Tests.info" NAME="All Tests Coverage Results" MODIFIED="1585859619310" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="JestJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/react_rx$toObservable_test_tsx.info" NAME="toObservable.test.tsx Coverage Results" MODIFIED="1585859575939" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="JestJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>