{"version":3,"sources":["../../src/middleware/debug.js"],"names":["debugIt","require","SENSITIVE_HEADERS","hasOwn","Object","prototype","hasOwnProperty","redactKeys","source","keys","target","key","call","indexOf","module","exports","opts","verbose","namespace","defaultLogger","log","shortCircuit","enabled","requestId","processOptions","options","debug","onRequest","event","method","url","body","headers","redactSensitiveHeaders","JSON","stringify","onResponse","res","context","reqId","statusCode","statusMessage","stringifyBody","onError","err","message","contentType","toLowerCase","isJson","tryFormat","parsed","parse"],"mappings":"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","file":"debug.js","sourcesContent":["const debugIt = require('debug')\n\nconst SENSITIVE_HEADERS = ['Cookie', 'Authorization']\n\nconst hasOwn = Object.prototype.hasOwnProperty\nconst redactKeys = (source, keys) => {\n  const target = {}\n  for (const key in source) {\n    if (hasOwn.call(source, key)) {\n      target[key] = keys.indexOf(key) > -1 ? '<redacted>' : source[key]\n    }\n  }\n  return target\n}\n\nmodule.exports = (opts = {}) => {\n  const verbose = opts.verbose\n  const namespace = opts.namespace || 'get-it'\n  const defaultLogger = debugIt(namespace)\n  const log = opts.log || defaultLogger\n  const shortCircuit = log === defaultLogger && !debugIt.enabled(namespace)\n  let requestId = 0\n\n  return {\n    processOptions: options => {\n      options.debug = log\n      options.requestId = options.requestId || ++requestId\n      return options\n    },\n\n    onRequest: event => {\n      // Short-circuit if not enabled, to save some CPU cycles with formatting stuff\n      if (shortCircuit || !event) {\n        return event\n      }\n\n      const options = event.options\n\n      log('[%s] HTTP %s %s', options.requestId, options.method, options.url)\n\n      if (verbose && options.body && typeof options.body === 'string') {\n        log('[%s] Request body: %s', options.requestId, options.body)\n      }\n\n      if (verbose && options.headers) {\n        const headers =\n          opts.redactSensitiveHeaders === false\n            ? options.headers\n            : redactKeys(options.headers, SENSITIVE_HEADERS)\n\n        log('[%s] Request headers: %s', options.requestId, JSON.stringify(headers, null, 2))\n      }\n\n      return event\n    },\n\n    onResponse: (res, context) => {\n      // Short-circuit if not enabled, to save some CPU cycles with formatting stuff\n      if (shortCircuit || !res) {\n        return res\n      }\n\n      const reqId = context.options.requestId\n\n      log('[%s] Response code: %s %s', reqId, res.statusCode, res.statusMessage)\n\n      if (verbose && res.body) {\n        log('[%s] Response body: %s', reqId, stringifyBody(res))\n      }\n\n      return res\n    },\n\n    onError: (err, context) => {\n      const reqId = context.options.requestId\n      if (!err) {\n        log('[%s] Error encountered, but handled by an earlier middleware', reqId)\n        return err\n      }\n\n      log('[%s] ERROR: %s', reqId, err.message)\n      return err\n    }\n  }\n}\n\nfunction stringifyBody(res) {\n  const contentType = (res.headers['content-type'] || '').toLowerCase()\n  const isJson = contentType.indexOf('application/json') !== -1\n  return isJson ? tryFormat(res.body) : res.body\n}\n\n// Attempt pretty-formatting JSON\nfunction tryFormat(body) {\n  try {\n    const parsed = typeof body === 'string' ? JSON.parse(body) : body\n    return JSON.stringify(parsed, null, 2)\n  } catch (err) {\n    return body\n  }\n}\n"]}