{"version":3,"sources":["../../src/middleware/injectResponse.js"],"names":["objectAssign","require","module","exports","opts","inject","Error","prevValue","event","response","options","context","body","url","method","headers","statusCode","statusMessage","interceptRequest"],"mappings":";;AAAA,IAAMA,eAAeC,QAAQ,eAAR,CAArB;;AAEAC,OAAOC,OAAP,GAAiB,YAAe;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AAC9B,MAAI,OAAOA,KAAKC,MAAZ,KAAuB,UAA3B,EAAuC;AACrC,UAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,WAASD,MAAT,CAAgBE,SAAhB,EAA2BC,KAA3B,EAAkC;AAChC,QAAMC,WAAWL,KAAKC,MAAL,CAAYG,KAAZ,EAAmBD,SAAnB,CAAjB;AACA,QAAI,CAACE,QAAL,EAAe;AACb,aAAOF,SAAP;AACD;;AAED;AACA,QAAMG,UAAUF,MAAMG,OAAN,CAAcD,OAA9B;AACA,WAAOV,aACL,EADK,EAEL;AACEY,YAAM,EADR;AAEEC,WAAKH,QAAQG,GAFf;AAGEC,cAAQJ,QAAQI,MAHlB;AAIEC,eAAS,EAJX;AAKEC,kBAAY,GALd;AAMEC,qBAAe;AANjB,KAFK,EAULR,QAVK,CAAP;AAYD;;AAED,SAAO,EAACS,kBAAkBb,MAAnB,EAAP;AACD,CA5BD","file":"injectResponse.js","sourcesContent":["const objectAssign = require('object-assign')\n\nmodule.exports = (opts = {}) => {\n  if (typeof opts.inject !== 'function') {\n    throw new Error('`injectResponse` middleware requires a `inject` function')\n  }\n\n  function inject(prevValue, event) {\n    const response = opts.inject(event, prevValue)\n    if (!response) {\n      return prevValue\n    }\n\n    // Merge defaults so we don't have to provide the most basic of details unless we want to\n    const options = event.context.options\n    return objectAssign(\n      {},\n      {\n        body: '',\n        url: options.url,\n        method: options.method,\n        headers: {},\n        statusCode: 200,\n        statusMessage: 'OK'\n      },\n      response\n    )\n  }\n\n  return {interceptRequest: inject}\n}\n"]}