import { Path } from './paths';
import { Patch, SanityPatchMutation } from './patches';
export interface KeyedSanityObject {
    [key: string]: unknown;
    _key: string;
}
export declare type SanityObject = KeyedSanityObject | Partial<KeyedSanityObject>;
interface DocumentStub {
    _id?: string;
    _type?: string;
    _rev?: string;
    _createdAt?: string;
    _updatedAt?: string;
    [key: string]: unknown;
}
interface DiffMatchPatchOptions {
    enabled: boolean;
    lengthThresholdAbsolute: number;
    lengthThresholdRelative: number;
}
interface PatchOptions {
    id?: string;
    basePath?: Path;
    ifRevisionID?: string | boolean;
    ifRevisionId?: string | boolean;
    hideWarnings?: boolean;
    diffMatchPatch: DiffMatchPatchOptions;
}
declare type InputOptions = {
    id?: string;
    basePath?: Path;
    ifRevisionID?: string | boolean;
    ifRevisionId?: string | boolean;
    hideWarnings?: boolean;
    diffMatchPatch?: Partial<DiffMatchPatchOptions>;
};
export declare function diffPatch(itemA: DocumentStub, itemB: DocumentStub, opts?: InputOptions): SanityPatchMutation[];
export declare function diffItem(itemA: unknown, itemB: unknown, options?: PatchOptions, path?: Path, patches?: Patch[]): Patch[];
export {};
