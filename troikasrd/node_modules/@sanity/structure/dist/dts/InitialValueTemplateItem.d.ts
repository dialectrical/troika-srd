import { Schema } from './parts/Schema';
import { Serializable, SerializeOptions, SerializePath } from './StructureNodes';
import { MenuItem } from './MenuItem';
export declare type InitialValueTemplateItem = {
    id: string;
    templateId: string;
    title?: string;
    description?: string;
    parameters?: {
        [key: string]: any;
    };
    type: 'initialValueTemplateItem';
};
export declare class InitialValueTemplateItemBuilder implements Serializable {
    protected spec: Partial<InitialValueTemplateItem>;
    constructor(spec?: Partial<InitialValueTemplateItem>);
    id(id: string): InitialValueTemplateItemBuilder;
    getId(): string | undefined;
    title(title: string): InitialValueTemplateItemBuilder;
    getTitle(): string | undefined;
    description(description: string): InitialValueTemplateItemBuilder;
    getDescription(): string | undefined;
    templateId(templateId: string): InitialValueTemplateItemBuilder;
    getTemplateId(): string | undefined;
    parameters(parameters: {
        [key: string]: any;
    }): InitialValueTemplateItemBuilder;
    getParameters(): {
        [key: string]: any;
    } | undefined;
    serialize({ path, index, hint }?: SerializeOptions): InitialValueTemplateItem;
    clone(withSpec?: Partial<InitialValueTemplateItem>): InitialValueTemplateItemBuilder;
}
export declare function defaultInitialValueTemplateItems(schema?: Schema): InitialValueTemplateItemBuilder[];
export declare function maybeSerializeInitialValueTemplateItem(item: InitialValueTemplateItem | InitialValueTemplateItemBuilder, index: number, path: SerializePath): InitialValueTemplateItem;
export declare function menuItemsFromInitialValueTemplateItems(templateItems: InitialValueTemplateItem[]): MenuItem[];
//# sourceMappingURL=InitialValueTemplateItem.d.ts.map