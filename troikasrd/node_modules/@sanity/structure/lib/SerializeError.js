"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HELP_URL = exports.SerializeError = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class SerializeError extends Error {
  constructor(message, parentPath, pathSegment, hint) {
    super(message);

    _defineProperty(this, "path", void 0);

    _defineProperty(this, "helpId", void 0);

    var segment = typeof pathSegment === 'undefined' ? '<unknown>' : "".concat(pathSegment);
    this.path = (parentPath || []).concat(hint ? "".concat(segment, " (").concat(hint, ")") : segment);
  }

  withHelpUrl(id) {
    this.helpId = id;
    return this;
  }

}

exports.SerializeError = SerializeError;
var HELP_URL;
exports.HELP_URL = HELP_URL;

(function (HELP_URL) {
  HELP_URL["ID_REQUIRED"] = "structure-node-id-required";
  HELP_URL["TITLE_REQUIRED"] = "structure-title-required";
  HELP_URL["FILTER_REQUIRED"] = "structure-filter-required";
  HELP_URL["INVALID_LIST_ITEM"] = "structure-invalid-list-item";
  HELP_URL["COMPONENT_REQUIRED"] = "structure-view-component-required";
  HELP_URL["DOCUMENT_ID_REQUIRED"] = "structure-document-id-required";
  HELP_URL["SCHEMA_TYPE_REQUIRED"] = "structure-schema-type-required";
  HELP_URL["SCHEMA_TYPE_NOT_FOUND"] = "structure-schema-type-not-found";
  HELP_URL["LIST_ITEMS_MUST_BE_ARRAY"] = "structure-list-items-must-be-array";
  HELP_URL["QUERY_PROVIDED_FOR_FILTER"] = "structure-query-provided-for-filter";
  HELP_URL["ACTION_OR_INTENT_REQUIRED"] = "structure-action-or-intent-required";
  HELP_URL["LIST_ITEM_IDS_MUST_BE_UNIQUE"] = "structure-list-item-ids-must-be-unique";
  HELP_URL["ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE"] = "structure-action-and-intent-mutually-exclusive";
})(HELP_URL || (exports.HELP_URL = HELP_URL = {}));