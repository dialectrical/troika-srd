export default class HotspotImage extends React.PureComponent<any, any, any> {
    static propTypes: {
        src: PropTypes.Validator<string>;
        srcAspectRatio: PropTypes.Validator<number>;
        srcSet: PropTypes.Requireable<string>;
        hotspot: any;
        crop: any;
        aspectRatio: PropTypes.Requireable<string | number>;
        alignX: PropTypes.Requireable<string>;
        alignY: PropTypes.Requireable<string>;
        className: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        alt: PropTypes.Requireable<string>;
        onError: PropTypes.Requireable<(...args: any[]) => any>;
        onLoad: PropTypes.Requireable<(...args: any[]) => any>;
    };
    static defaultProps: {
        alignX: string;
        alignY: string;
        className: string;
        crop: {
            top: number;
            left: number;
            right: number;
            bottom: number;
        };
        hotspot: {
            x: number;
            y: number;
            height: number;
            width: number;
        };
        aspectRatio: string;
    };
    constructor(props: any);
    constructor(props: any, context: any);
    updateContainerAspect(props: any): void;
    getTargetAspectValue(): any;
    setImageElement: (el: any) => void;
    imageElement: any;
    handleResize: import("lodash").DebouncedFunc<() => void>;
    setContainerElement: (el: any) => void;
    containerElement: any;
}
import React from "react";
import PropTypes from "prop-types";
//# sourceMappingURL=HotspotImage.d.ts.map