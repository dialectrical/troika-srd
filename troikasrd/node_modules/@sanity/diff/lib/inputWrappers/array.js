"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = require("./index");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ArrayWrapper {
  constructor(value, annotation) {
    _defineProperty(this, "type", 'array');

    _defineProperty(this, "length", void 0);

    _defineProperty(this, "value", void 0);

    _defineProperty(this, "annotation", void 0);

    _defineProperty(this, "elements", []);

    this.annotation = annotation;
    this.value = value;
    this.length = value.length;
  }

  at(idx) {
    if (idx >= this.length) throw new Error('out of bounds');
    var input = this.elements[idx];

    if (input) {
      return input;
    }

    return this.elements[idx] = (0, _index.wrap)(this.value[idx], this.annotation);
  }

  annotationAt() {
    return this.annotation;
  }

}

exports.default = ArrayWrapper;