"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrap = wrap;

var _array = _interopRequireDefault(require("./array"));

var _object = _interopRequireDefault(require("./object"));

var _string = _interopRequireDefault(require("./string"));

var _basic = _interopRequireDefault(require("./basic"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function wrap(input, annotation) {
  if (Array.isArray(input)) {
    return new _array.default(input, annotation);
  } else if (input === null) {
    return new _basic.default('null', input, annotation);
  }

  var type = typeof input;

  switch (type) {
    case 'number':
      return new _basic.default(type, input, annotation);

    case 'boolean':
      return new _basic.default(type, input, annotation);

    case 'object':
      return new _object.default(input, annotation);

    case 'string':
      return new _string.default(input, annotation);

    default:
      throw new Error("cannot wrap value of type: ".concat(type));
  }
}