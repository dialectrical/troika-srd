"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Template = require("./Template");

var _Schema = require("./parts/Schema");

function defaultTemplateForType(schemaType, sanitySchema) {
  var type;

  if (typeof schemaType === 'string') {
    var schema = sanitySchema || (0, _Schema.getDefaultSchema)();
    type = schema.get(schemaType);
  } else {
    type = schemaType;
  }

  return new _Template.TemplateBuilder({
    id: type.name,
    schemaType: type.name,
    title: type.title || type.name,
    icon: type.icon,
    value: type.initialValue || {
      _type: type.name
    }
  });
}

function defaults(sanitySchema) {
  var schema = sanitySchema || (0, _Schema.getDefaultSchema)();

  if (!schema) {
    throw new Error('Unable to automatically resolve schema. Pass schema explicitly: `defaults(schema)`');
  }

  return schema.getTypeNames().filter(typeName => !/^sanity\./.test(typeName)).filter(typeName => isDocumentSchemaType(typeName, schema)).map(typeName => defaultTemplateForType(schema.get(typeName), schema));
}

function isDocumentSchemaType(typeName, schema) {
  var schemaType = schema.get(typeName);
  return schemaType.type && schemaType.type.name === 'document';
}

var _default = {
  template: spec => new _Template.TemplateBuilder(spec),
  defaults,
  defaultTemplateForType
};
exports.default = _default;