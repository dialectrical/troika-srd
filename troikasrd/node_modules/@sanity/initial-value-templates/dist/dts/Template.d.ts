/// <reference types="react" />
import { InitialValueProperty, SchemaType } from '@sanity/types';
import { TemplateParameter } from './TemplateParameters';
export interface Template {
    id: string;
    title: string;
    description?: string;
    schemaType: string;
    icon?: SchemaType['icon'];
    value: InitialValueProperty;
    parameters?: TemplateParameter[];
}
export declare class TemplateBuilder {
    spec: Partial<Template>;
    constructor(spec?: Template);
    id(id: string): TemplateBuilder;
    getId(): string | undefined;
    title(title: string): TemplateBuilder;
    description(description: string): TemplateBuilder;
    getDescription(): string | undefined;
    getTitle(): string | undefined;
    schemaType(typeName: string): TemplateBuilder;
    getSchemaType(): string | undefined;
    icon(icon: SchemaType['icon']): TemplateBuilder;
    getIcon(): import("react").ComponentType<{}> | undefined;
    value(value: InitialValueProperty): TemplateBuilder;
    getValue(): unknown;
    parameters(parameters: TemplateParameter[]): TemplateBuilder;
    getParameters(): TemplateParameter[] | undefined;
    serialize(): Template;
    clone(withSpec?: Partial<Template>): TemplateBuilder;
}
//# sourceMappingURL=Template.d.ts.map