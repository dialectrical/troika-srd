import { Subject } from 'rxjs';
import { Editor } from 'slate';
import type { Patch } from '../../types/patch';
import { PortableTextFeatures } from '../../types/portableText';
import { EditorChange, PatchObservable, PortableTextSlateEditor } from '../../types/editor';
declare type PatchFn = (editor: Editor, operation: any, previousChildren: any) => Patch[];
export declare type PatchFunctions = {
    insertNodePatch: PatchFn;
    insertTextPatch: PatchFn;
    mergeNodePatch: PatchFn;
    moveNodePatch: PatchFn;
    removeNodePatch: PatchFn;
    removeTextPatch: PatchFn;
    setNodePatch: PatchFn;
    splitNodePatch: PatchFn;
};
export declare function createWithPatches({ insertNodePatch, insertTextPatch, mergeNodePatch, moveNodePatch, removeNodePatch, removeTextPatch, setNodePatch, splitNodePatch, }: PatchFunctions, change$: Subject<EditorChange>, portableTextFeatures: PortableTextFeatures, incomingPatche$?: PatchObservable): (editor: PortableTextSlateEditor) => PortableTextSlateEditor;
export {};
//# sourceMappingURL=createWithPatches.d.ts.map