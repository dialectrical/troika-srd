import type { ComponentType } from 'react';
import type { Type as SchemaType } from './schema';
export declare type PortableTextBlock = {
    _type: string;
    _key: string;
    [other: string]: any;
};
export declare type TextBlock = {
    _type: string;
    _key: string;
    children: PortableTextChild[];
    markDefs: MarkDef[];
};
export declare type TextSpan = {
    _key: string;
    _type: 'span';
    text: string;
    marks: string[];
};
export declare type PortableTextChild = {
    _key: string;
    _type: string;
    [other: string]: any;
} | TextSpan;
export declare type MarkDef = {
    _key: string;
    _type: string;
};
export declare type PortableTextFeature = {
    title: string;
    value: string;
    blockEditor?: {
        icon?: string | ComponentType<any>;
        render?: ComponentType<any>;
    };
    portableText?: {
        icon?: string | ComponentType<any>;
        render?: ComponentType<any>;
    };
    type: SchemaType;
};
export declare type PortableTextFeatures = {
    decorators: PortableTextFeature[];
    styles: PortableTextFeature[];
    annotations: PortableTextFeature[];
    lists: PortableTextFeature[];
    types: {
        block: SchemaType;
        blockObjects: SchemaType[];
        inlineObjects: SchemaType[];
        portableText: SchemaType;
        span: SchemaType;
        annotations: SchemaType[];
    };
};
//# sourceMappingURL=portableText.d.ts.map