"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _configSanity = _interopRequireDefault(require("config:sanity"));

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _legacyParts = require("./legacyParts");

var _openWindow = require("./util/openWindow");

var _versionedClient = require("./versionedClient");

var _templateObject;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var BrandLogoWrapper = (0, _styledComponents.default)(_ui.Flex)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  height: 3em;\n\n  svg {\n    height: 4em;\n    width: auto;\n    max-width: 70vw;\n  }\n"])));
var projectName = _configSanity.default.project && _configSanity.default.project.name || '';

var checkCookies = () => {
  return _versionedClient.versionedClient.request({
    method: 'POST',
    uri: '/auth/testCookie',
    withCredentials: true,
    tag: 'auth.cookie-test'
  }).then(() => {
    return _versionedClient.versionedClient.request({
      method: 'GET',
      uri: '/auth/testCookie',
      withCredentials: true,
      tag: 'auth.cookie-test'
    }).then(() => true).catch(() => false);
  }).catch(error => ({
    error
  }));
};

var hostname = _versionedClient.versionedClient.clientConfig.url; // const hostname = 'http://localhost:5000/v1'

class CookieTest extends _react.PureComponent {
  constructor(props) {
    super(props);

    _defineProperty(this, "handleAcceptCookieButtonClicked", () => {
      this.openPopup();
    });

    _defineProperty(this, "openPopup", () => {
      (0, _openWindow.openCenteredPopup)(this.popupUrl, {
        height: 380,
        width: 640,
        name
      }).pipe((0, _operators.mapTo)('Successfully performed the cookie allowal routine'), (0, _operators.finalize)(() => window.location.reload()), (0, _operators.catchError)(error => (0, _rxjs.of)(error.message))).subscribe(console.log); // eslint-disable-line no-console
    });

    this.state = {
      isLoading: true
    };
    checkCookies().then(isCookieError => {
      if (!this._isMounted) {
        return;
      }

      this.setState({
        isCookieError: !isCookieError,
        isLoading: false
      });
    });
    this.redirectToUrl = null;
    this.popupSubscription = null;
  }

  componentDidMount() {
    this._isMounted = true;
    this.popupUrl = "".concat(hostname, "/auth/views/cookie/interact?redirectTo=").concat(encodeURIComponent(window.location.toString()));
  }

  componentWillUnmount() {
    this._isMounted = false;

    if (this.popupSubscription) {
      this.popupSubscription.unsubscribe();
    }
  }

  renderCookieAcceptContent() {
    var _this$props = this.props,
        SanityLogo = _this$props.SanityLogo,
        sanityLogo = _this$props.sanityLogo;
    return /*#__PURE__*/_react.default.createElement(_ui.Container, {
      width: 1,
      paddingX: 3,
      paddingY: 6
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 7
    }, SanityLogo && /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      justify: "center"
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, /*#__PURE__*/_react.default.createElement(SanityLogo, null))), sanityLogo && !SanityLogo && /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      justify: "center"
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, /*#__PURE__*/_react.default.createElement(SanityLogo, null))), !_legacyParts.BrandLogo && projectName && /*#__PURE__*/_react.default.createElement(_ui.Heading, {
      align: "center",
      as: "h1",
      size: 4
    }, projectName), _legacyParts.BrandLogo && projectName && /*#__PURE__*/_react.default.createElement(BrandLogoWrapper, {
      justify: "center"
    }, /*#__PURE__*/_react.default.createElement(_legacyParts.BrandLogo, {
      projectName: projectName
    })), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 5
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      align: "center",
      as: "h2",
      size: 3,
      weight: "semibold",
      style: {
        textTransform: 'uppercase'
      }
    }, "We couldn't log you in"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1,
      muted: true,
      align: "center"
    }, "Your browser wouldn't accept our cookie.")), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      justify: "center"
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      text: "Try again",
      tone: "positive",
      mode: "ghost",
      onClick: this.handleAcceptCookieButtonClicked
    })))));
  }

  render() {
    var _this$state = this.state,
        isLoading = _this$state.isLoading,
        isCookieError = _this$state.isCookieError;

    if (isLoading) {
      return /*#__PURE__*/_react.default.createElement(_ui.Container, {
        width: 4,
        padding: 4,
        height: "fill"
      }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
        align: "center",
        justify: "center",
        height: "fill"
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, /*#__PURE__*/_react.default.createElement(_ui.Spinner, null))));
    }

    if (isCookieError) {
      return this.renderCookieAcceptContent();
    }

    return /*#__PURE__*/_react.default.createElement("div", null, this.props.children);
  }

}

_defineProperty(CookieTest, "propTypes", {
  children: _propTypes.default.node.isRequired
});

CookieTest.propTypes = {
  sanityLogo: _propTypes.default.node,
  SanityLogo: _propTypes.default.func
};
var _default = CookieTest;
exports.default = _default;