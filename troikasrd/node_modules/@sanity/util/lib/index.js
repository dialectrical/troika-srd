"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "getConfig", {
  enumerable: true,
  get: function get() {
    return _getConfig.default;
  }
});
Object.defineProperty(exports, "reduceConfig", {
  enumerable: true,
  get: function get() {
    return _reduceConfig.default;
  }
});
Object.defineProperty(exports, "lazyRequire", {
  enumerable: true,
  get: function get() {
    return _lazyRequire.default;
  }
});
Object.defineProperty(exports, "dynamicRequire", {
  enumerable: true,
  get: function get() {
    return _dynamicRequire.default;
  }
});
Object.defineProperty(exports, "getSanityVersions", {
  enumerable: true,
  get: function get() {
    return _getSanityVersions.default;
  }
});
exports.pathTools = exports.safeJson = void 0;

var _getConfig = _interopRequireDefault(require("./getConfig"));

var _reduceConfig = _interopRequireDefault(require("./reduceConfig"));

var _lazyRequire = _interopRequireDefault(require("./lazyRequire"));

var _dynamicRequire = _interopRequireDefault(require("./dynamicRequire"));

var safeJson = _interopRequireWildcard(require("./safeJson"));

exports.safeJson = safeJson;

var _getSanityVersions = _interopRequireDefault(require("./getSanityVersions"));

var pathTools = _interopRequireWildcard(require("./pathTools"));

exports.pathTools = pathTools;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }