"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pathIsEmpty = pathIsEmpty;
exports.expandHome = expandHome;
exports.absolutify = absolutify;

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var path = _interopRequireWildcard(require("path"));

var os = _interopRequireWildcard(require("os"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function pathIsEmpty(_x) {
  return _pathIsEmpty.apply(this, arguments);
}

function _pathIsEmpty() {
  _pathIsEmpty = _asyncToGenerator(function* (dir) {
    try {
      var content = yield _fsExtra.default.readdir(absolutify(dir));
      return content.length === 0;
    } catch (err) {
      if (err.code === 'ENOENT') {
        return true;
      }

      throw err;
    }
  });
  return _pathIsEmpty.apply(this, arguments);
}

function expandHome(filePath) {
  if (filePath.charCodeAt(0) === 126
  /* ~ */
  ) {
    if (filePath.charCodeAt(1) === 43
    /* + */
    ) {
      return path.join(process.cwd(), filePath.slice(2));
    }

    var home = os.homedir();
    return home ? path.join(home, filePath.slice(1)) : filePath;
  }

  return filePath;
}

function absolutify(dir) {
  var pathName = expandHome(dir);
  return path.isAbsolute(pathName) ? pathName : path.resolve(process.cwd(), pathName);
}