import { ValidationMarker, ValidationError, ValidationContext } from '@sanity/types';
declare type ValidationErrorLike = Pick<ValidationError, 'message'> & Partial<ValidationError>;
export declare function isNonNullable<T>(t: T): t is NonNullable<T>;
export default function convertToValidationMarker(validatorResult: true | true[] | string | string[] | ValidationError | ValidationError[] | ValidationErrorLike | ValidationErrorLike[], level: 'error' | 'warning' | undefined, context: ValidationContext): ValidationMarker[];
export {};
//# sourceMappingURL=convertToValidationMarker.d.ts.map