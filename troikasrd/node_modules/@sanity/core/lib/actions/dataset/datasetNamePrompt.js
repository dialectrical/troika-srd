"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = promptForDatasetName;

var _validateDatasetName = _interopRequireDefault(require("./validateDatasetName"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function promptForDatasetName(prompt) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return prompt.single(_objectSpread({
    type: 'input',
    message: 'Dataset name:',
    validate: name => {
      var err = (0, _validateDatasetName.default)(name);

      if (err) {
        return err;
      }

      return true;
    }
  }, options));
}