"use strict";

var pirates = require('pirates');

var jsdomGlobal = require('jsdom-global');

var pluginLoader = require('@sanity/plugin-loader');

var requireContext = require('./requireContext');

var registerBabelLoader = require('./registerBabelLoader');

var getFakeGlobals = () => ({
  __DEV__: false,
  requestAnimationFrame: cb => setTimeout(cb, 0),
  cancelAnimationFrame: timer => clearTimeout(timer),
  InputEvent: global.window && global.window.InputEvent
});

function provideFakeGlobals() {
  var fakeGlobals = getFakeGlobals();
  var stubbedKeys = [];
  Object.keys(fakeGlobals).forEach(key => {
    if (!global[key]) {
      global[key] = fakeGlobals[key];
      stubbedKeys.push(key);
    }
  });
  return () => {
    stubbedKeys.forEach(key => {
      delete global[key];
    });
  };
}

function mockBrowserEnvironment(basePath) {
  var domCleanup = jsdomGlobal();

  var windowCleanup = () => global.window.close();

  var globalCleanup = provideFakeGlobals();
  var contextCleanup = requireContext.register();
  var cleanupFileLoader = pirates.addHook((code, filename) => "module.exports = ".concat(JSON.stringify(filename)), {
    ignoreNodeModules: false,
    exts: getFileExtensions()
  });
  registerBabelLoader(basePath);
  pluginLoader({
    basePath,
    stubCss: true
  });
  return function cleanupBrowserEnvironment() {
    cleanupFileLoader();
    contextCleanup();
    globalCleanup();
    windowCleanup();
    domCleanup();
  };
}

function getFileExtensions() {
  return ['.jpeg', '.jpg', '.png', '.gif', '.svg', '.webp', '.woff', '.woff2', '.ttf', '.eot', '.otf'];
}

module.exports = mockBrowserEnvironment;