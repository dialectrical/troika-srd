"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = exports.warning = exports.error = exports.HELP_IDS = void 0;
// Temporary solution to ensure we have a central registry over used helpIds
var HELP_IDS = {
  TYPE_INVALID: 'schema-type-invalid',
  TYPE_IS_ESM_MODULE: 'schema-type-is-esm-module',
  TYPE_NAME_RESERVED: 'schema-type-name-reserved',
  TYPE_MISSING_NAME: 'schema-type-missing-name-or-type',
  TYPE_MISSING_TYPE: 'schema-type-missing-name-or-type',
  TYPE_TITLE_RECOMMENDED: 'schema-type-title-is-recommended',
  TYPE_TITLE_INVALID: 'schema-type-title-is-recommended',
  OBJECT_FIELDS_INVALID: 'schema-object-fields-invalid',
  OBJECT_FIELD_NOT_UNIQUE: 'schema-object-fields-invalid',
  OBJECT_FIELD_NAME_INVALID: 'schema-object-fields-invalid',
  OBJECT_FIELD_DEFINITION_INVALID_TYPE: 'schema-object-fields-invalid',
  ARRAY_OF_ARRAY: 'schema-array-of-array',
  ARRAY_OF_INVALID: 'schema-array-of-invalid',
  ARRAY_OF_NOT_UNIQUE: 'schema-array-of-invalid',
  REFERENCE_TO_INVALID: 'schema-reference-to-invalid',
  REFERENCE_TO_NOT_UNIQUE: 'schema-reference-to-invalid',
  REFERENCE_INVALID_OPTIONS: 'schema-reference-invalid-options',
  REFERENCE_INVALID_OPTIONS_LOCATION: 'schema-reference-options-nesting',
  REFERENCE_INVALID_FILTER_PARAMS_COMBINATION: 'schema-reference-filter-params-combination',
  SLUG_SLUGIFY_FN_RENAMED: 'slug-slugifyfn-renamed',
  ASSET_METADATA_FIELD_INVALID: 'asset-metadata-field-invalid'
};
exports.HELP_IDS = HELP_IDS;

function createValidationResult(severity, message, helpId) {
  if (helpId && !Object.keys(HELP_IDS).some(id => HELP_IDS[id] === helpId)) {
    throw new Error("Used the unknown helpId \"".concat(helpId, "\", please add it to the array in createValidationResult.js"));
  }

  return {
    severity,
    message,
    helpId
  };
}

var error = (message, helpId) => createValidationResult('error', message, helpId);

exports.error = error;

var warning = (message, helpId) => createValidationResult('warning', message, helpId);

exports.warning = warning;

var info = (message, helpId) => createValidationResult('info', message, helpId);

exports.info = info;