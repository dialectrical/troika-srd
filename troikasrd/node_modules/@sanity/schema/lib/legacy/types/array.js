"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrayType = void 0;

var _pick2 = _interopRequireDefault(require("lodash/pick"));

var _utils = require("./utils");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OVERRIDABLE_FIELDS = [..._constants.DEFAULT_OVERRIDEABLE_FIELDS];
var ARRAY_CORE = {
  name: 'array',
  type: null,
  jsonType: 'array',
  of: []
};
var ArrayType = {
  get() {
    return ARRAY_CORE;
  },

  extend(subTypeDef, createMemberType) {
    var parsed = Object.assign((0, _pick2.default)(ARRAY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {
      type: ARRAY_CORE
    });
    (0, _utils.lazyGetter)(parsed, 'of', () => {
      return subTypeDef.of.map(ofTypeDef => {
        return createMemberType(ofTypeDef);
      });
    });
    return subtype(parsed);

    function subtype(parent) {
      return {
        get() {
          return parent;
        },

        extend: extensionDef => {
          if (extensionDef.of) {
            throw new Error('Cannot override `of` property of subtypes of "array"');
          }

          var current = Object.assign({}, parent, (0, _pick2.default)(extensionDef, OVERRIDABLE_FIELDS), {
            type: parent
          });
          return subtype(current);
        }
      };
    }
  }

};
exports.ArrayType = ArrayType;