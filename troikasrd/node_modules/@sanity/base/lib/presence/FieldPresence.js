"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldPresenceInner = exports.FieldPresence = void 0;

var _uniqBy2 = _interopRequireDefault(require("lodash/uniqBy"));

var _sortBy2 = _interopRequireDefault(require("lodash/sortBy"));

var _react = _interopRequireWildcard(require("react"));

var _avatar = require("part:@sanity/components/avatar");

var _autoId = require("@reach/auto-id");

var _UserAvatar = require("../components/UserAvatar");

var _constants = require("./constants");

var _utils = require("./utils");

var _FieldPresence = _interopRequireDefault(require("./FieldPresence.css"));

var _context = require("./context");

var _PresenceTooltip = require("./PresenceTooltip");

var _tracker = require("./overlay/tracker");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var FieldPresence = _constants.DISABLE_OVERLAY ? FieldPresenceWithoutOverlay : FieldPresenceWithOverlay;
exports.FieldPresence = FieldPresence;

function FieldPresenceWithOverlay(props) {
  var contextPresence = (0, _react.useContext)(_context.FormFieldPresenceContext);
  var _props$presence = props.presence,
      presence = _props$presence === void 0 ? contextPresence : _props$presence,
      _props$maxAvatars = props.maxAvatars,
      maxAvatars = _props$maxAvatars === void 0 ? _constants.DEFAULT_MAX_AVATARS_FIELDS : _props$maxAvatars;

  var ref = _react.default.useRef(null);

  (0, _tracker.useReporter)((0, _autoId.useId)() || '', () => ({
    presence,
    element: ref.current,
    maxAvatars: maxAvatars
  }));
  var minWidth = -_constants.AVATAR_DISTANCE + (_constants.AVATAR_SIZE + _constants.AVATAR_DISTANCE) * props.maxAvatars;
  return /*#__PURE__*/_react.default.createElement("div", {
    ref: ref,
    className: _FieldPresence.default.root,
    style: {
      minWidth: minWidth,
      minHeight: _constants.AVATAR_SIZE
    }
  });
}

function FieldPresenceWithoutOverlay(props) {
  var contextPresence = (0, _react.useContext)(_context.FormFieldPresenceContext);
  var _props$presence2 = props.presence,
      presence = _props$presence2 === void 0 ? contextPresence : _props$presence2,
      _props$maxAvatars2 = props.maxAvatars,
      maxAvatars = _props$maxAvatars2 === void 0 ? _constants.DEFAULT_MAX_AVATARS_FIELDS : _props$maxAvatars2;

  if (!presence.length) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(FieldPresenceInner, {
    presence: presence,
    maxAvatars: maxAvatars
  });
}

function calcAvatarStackWidth(len) {
  return -_constants.AVATAR_DISTANCE + (_constants.AVATAR_SIZE + _constants.AVATAR_DISTANCE) * len;
}

var FieldPresenceInner = /*#__PURE__*/(0, _react.memo)(function FieldPresenceInner(_ref) {
  var presence = _ref.presence,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? 'inside' : _ref$position,
      _ref$animateArrowFrom = _ref.animateArrowFrom,
      animateArrowFrom = _ref$animateArrowFrom === void 0 ? 'inside' : _ref$animateArrowFrom,
      _ref$maxAvatars = _ref.maxAvatars,
      maxAvatars = _ref$maxAvatars === void 0 ? _constants.DEFAULT_MAX_AVATARS_FIELDS : _ref$maxAvatars,
      _ref$stack = _ref.stack,
      stack = _ref$stack === void 0 ? true : _ref$stack;
  var uniquePresence = (0, _uniqBy2.default)(presence || [], item => item.user.id);
  var sorted = (0, _sortBy2.default)(uniquePresence, _presence => _presence.lastActiveAt);

  var _ref2 = stack ? (0, _utils.splitRight)(sorted, maxAvatars) : [[], sorted],
      _ref3 = _slicedToArray(_ref2, 2),
      hidden = _ref3[0],
      visible = _ref3[1];

  var avatars = [...visible.reverse().map(_visible => ({
    key: _visible.user.id,
    element: /*#__PURE__*/_react.default.createElement(_UserAvatar.UserAvatar, {
      animateArrowFrom: animateArrowFrom,
      position: position,
      status: "online",
      user: _visible.user
    })
  })), hidden.length >= 2 ? {
    key: 'counter',
    element: /*#__PURE__*/_react.default.createElement(_avatar.AvatarCounter, {
      count: hidden.length
    })
  } : null].filter(Boolean);
  var maxWidth = calcAvatarStackWidth(maxAvatars);
  var currWidth = Math.min(calcAvatarStackWidth(uniquePresence.length), maxWidth);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _FieldPresence.default.root,
    style: {
      width: maxWidth
    }
  }, /*#__PURE__*/_react.default.createElement("div", null), /*#__PURE__*/_react.default.createElement(_PresenceTooltip.PresenceTooltip, {
    items: uniquePresence,
    placement: "top"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _FieldPresence.default.inner,
    style: {
      width: currWidth
    }
  }, avatars.map((av, i) => av && /*#__PURE__*/_react.default.createElement("div", {
    key: av.key,
    style: {
      position: 'absolute',
      transform: "translate3d(".concat(-i * (_constants.AVATAR_SIZE + _constants.AVATAR_DISTANCE), "px, 0px, 0px)"),
      transitionProperty: 'transform',
      transitionDuration: '200ms',
      transitionTimingFunction: 'cubic-bezier(0.85, 0, 0.15, 1)',
      zIndex: 100 - i
    }
  }, av.element)))));
});
exports.FieldPresenceInner = FieldPresenceInner;