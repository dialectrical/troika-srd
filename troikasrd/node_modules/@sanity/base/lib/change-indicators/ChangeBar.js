"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChangeBar = ChangeBar;

var _classnames = _interopRequireDefault(require("classnames"));

var _tooltip = require("part:@sanity/components/tooltip");

var _react = _interopRequireWildcard(require("react"));

var _ConnectorContext = require("./ConnectorContext");

var _ChangeBar = _interopRequireDefault(require("./ChangeBar.css"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function Shape(props) {
  return /*#__PURE__*/_react.default.createElement("svg", _extends({}, props, {
    viewBox: "0 0 20 27",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M9 0.448608C9 2.49663 7.38382 4.13678 5.57253 5.09261C2.55605 6.68443 0.5 9.8521 0.5 13.5C0.5 17.1479 2.55605 20.3155 5.57253 21.9074C7.38382 22.8632 9 24.5033 9 26.5514V27H11V26.5514C11 24.5033 12.6162 22.8632 14.4275 21.9074C17.4439 20.3155 19.5 17.1479 19.5 13.5C19.5 9.8521 17.4439 6.68443 14.4275 5.09261C12.6162 4.13678 11 2.49663 11 0.448608V0H9V0.448608Z",
    fill: "currentColor"
  }));
}

function EditIconSmall(props) {
  return /*#__PURE__*/_react.default.createElement("svg", _extends({}, props, {
    width: "1em",
    height: "1em",
    viewBox: "0 0 17 17",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M4.5 10.5L4 13L6.5 12.5L14 5L12 3L4.5 10.5Z",
    stroke: "currentColor",
    strokeWidth: "1.2"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M10 5L12 7",
    stroke: "currentColor",
    strokeWidth: "1.2"
  }));
}

function ChangeBar(props) {
  var children = props.children,
      hasFocus = props.hasFocus,
      isChanged = props.isChanged,
      disabled = props.disabled;

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      hover = _useState2[0],
      setHover = _useState2[1];

  var _React$useContext = _react.default.useContext(_ConnectorContext.ConnectorContext),
      onOpenReviewChanges = _React$useContext.onOpenReviewChanges,
      isReviewChangesOpen = _React$useContext.isReviewChangesOpen;

  var handleMouseEnter = (0, _react.useCallback)(() => setHover(true), []);
  var handleMouseLeave = (0, _react.useCallback)(() => setHover(false), []);
  var tooltip = (0, _react.useMemo)(() => disabled ? null : /*#__PURE__*/_react.default.createElement(_tooltip.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement("div", {
      className: _ChangeBar.default.tooltipContent
    }, /*#__PURE__*/_react.default.createElement("span", null, "Review changes")),
    disabled: !isChanged || isReviewChangesOpen,
    placement: "top"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _ChangeBar.default.wrapper
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _ChangeBar.default.bar
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: _ChangeBar.default.badge
  }, /*#__PURE__*/_react.default.createElement(Shape, {
    className: _ChangeBar.default.badge__shape
  }), /*#__PURE__*/_react.default.createElement(EditIconSmall, {
    className: _ChangeBar.default.badge__icon
  })), /*#__PURE__*/_react.default.createElement("button", {
    tabIndex: isReviewChangesOpen || !isChanged ? -1 : 0,
    type: "button",
    "aria-label": "Review changes",
    onClick: isReviewChangesOpen ? undefined : onOpenReviewChanges,
    className: _ChangeBar.default.hitArea,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave
  }))), [handleMouseEnter, handleMouseLeave, isReviewChangesOpen, onOpenReviewChanges, isChanged, disabled]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: disabled ? undefined : (0, _classnames.default)(_ChangeBar.default.root, hover && _ChangeBar.default.hover, hasFocus && _ChangeBar.default.focus, isChanged && _ChangeBar.default.changed, isReviewChangesOpen && _ChangeBar.default.reviewChangesOpen)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _ChangeBar.default.field
  }, children), tooltip);
}