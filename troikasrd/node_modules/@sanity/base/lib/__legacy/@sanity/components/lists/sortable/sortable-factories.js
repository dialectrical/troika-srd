"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createSortableList = createSortableList;
exports.createSortableItem = createSortableItem;
exports.createDragHandle = createDragHandle;

var _react = _interopRequireWildcard(require("react"));

var _reactSortableHoc = require("react-sortable-hoc");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function createSortableList(element) {
  var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var Sortable = (0, _reactSortableHoc.SortableContainer)(element);
  var SortableList = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
    var onSortStart = props.onSortStart;
    var handleSortStart = (0, _react.useCallback)((sort, event) => {
      event.preventDefault();

      if (onSortStart) {
        onSortStart(sort, event);
      }
    }, []);
    return /*#__PURE__*/_react.default.createElement(Sortable, _extends({}, defaultProps, props, {
      onSortStart: handleSortStart,
      ref: ref
    }));
  });
  SortableList.displayName = 'SortableList';
  return SortableList;
}

function createSortableItem(element) {
  var SortableItem = (0, _reactSortableHoc.SortableElement)(element);
  SortableItem.displayName = 'SortableItem';
  return SortableItem;
}

function createDragHandle(element) {
  return (0, _reactSortableHoc.SortableHandle)(element);
}