"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _build = _interopRequireDefault(require("boundless-arrow-key-navigation/build"));

var _classnames = _interopRequireDefault(require("classnames"));

var _dropdownStyle = _interopRequireDefault(require("part:@sanity/components/buttons/dropdown-style"));

var _menuButton = require("part:@sanity/components/menu-button");

var _angleDownIcon = _interopRequireDefault(require("part:@sanity/base/angle-down-icon"));

var _default2 = require("part:@sanity/components/lists/default");

var _react = _interopRequireWildcard(require("react"));

var _excluded = ["children", "className", "items", "onAction", "placement", "portal", "renderItem", "showArrow"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DropdownMenuItem = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
  var item = _ref.item,
      onAction = _ref.onAction,
      onClose = _ref.onClose,
      renderItem = _ref.renderItem;
  var handleItemClick = (0, _react.useCallback)(event => {
    event.stopPropagation();
    onAction(item);
    onClose();
  }, [item, onAction, onClose]);
  var handleItemKeyPress = (0, _react.useCallback)(event => {
    if (event.key === 'Enter') {
      onAction(item);
      onClose();
    }
  }, [item, onAction, onClose]);
  return /*#__PURE__*/_react.default.createElement(_default2.Item, {
    className: _dropdownStyle.default.menuItem,
    onClick: handleItemClick,
    onKeyPress: handleItemKeyPress,
    tabIndex: -1,
    ref: ref
  }, renderItem ? renderItem(item) : /*#__PURE__*/_react.default.createElement("div", {
    className: _dropdownStyle.default.menuItem__inner,
    "data-color": item.color
  }, item.icon && /*#__PURE__*/_react.default.createElement("div", {
    className: _dropdownStyle.default.menuItem__iconContainer
  }, /*#__PURE__*/(0, _react.createElement)(item.icon)), /*#__PURE__*/_react.default.createElement("div", {
    className: _dropdownStyle.default.menuItem__label
  }, item.title)));
});
DropdownMenuItem.displayName = 'DropdownMenuItem';

function DropdownButton(props) {
  var children = props.children,
      className = props.className,
      items = props.items,
      onAction = props.onAction,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? 'bottom' : _props$placement,
      _props$portal = props.portal,
      portal = _props$portal === void 0 ? true : _props$portal,
      renderItem = props.renderItem,
      _props$showArrow = props.showArrow,
      showArrow = _props$showArrow === void 0 ? true : _props$showArrow,
      restProps = _objectWithoutProperties(props, _excluded);

  var firstItemElementRef = (0, _react.useRef)(null);

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var handleClose = (0, _react.useCallback)(() => setOpen(false), []);
  (0, _react.useEffect)(() => {
    if (open) {
      if (firstItemElementRef.current) {
        firstItemElementRef.current.focus();
      }
    }
  }, [open]);

  var menu = /*#__PURE__*/_react.default.createElement(_default2.List, {
    className: _dropdownStyle.default.menu
  }, /*#__PURE__*/_react.default.createElement(_build.default, null, items.map((item, i) => /*#__PURE__*/_react.default.createElement(DropdownMenuItem, {
    key: String(i),
    item: item,
    onAction: onAction,
    onClose: handleClose,
    ref: i === 0 ? firstItemElementRef : undefined,
    renderItem: renderItem
  }))));

  return /*#__PURE__*/_react.default.createElement(_menuButton.MenuButton, {
    buttonContainerClassName: _dropdownStyle.default.buttonContainer,
    buttonProps: _objectSpread(_objectSpread({}, restProps), {}, {
      className: _dropdownStyle.default.button
    }),
    className: (0, _classnames.default)(_dropdownStyle.default.root, className),
    menu: menu,
    open: open,
    placement: placement,
    portal: portal,
    setOpen: setOpen
  }, showArrow ? /*#__PURE__*/_react.default.createElement("div", {
    className: _dropdownStyle.default.inner
  }, children && /*#__PURE__*/_react.default.createElement("span", {
    className: _dropdownStyle.default.label
  }, children), /*#__PURE__*/_react.default.createElement("span", {
    className: _dropdownStyle.default.iconContainer
  }, /*#__PURE__*/_react.default.createElement(_angleDownIcon.default, null))) : children);
}

var _default = DropdownButton;
exports.default = _default;