"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MediaPreviewSortableStory = MediaPreviewSortableStory;

var _random2 = _interopRequireDefault(require("lodash/random"));

var _range2 = _interopRequireDefault(require("lodash/range"));

var _chance = _interopRequireDefault(require("chance"));

var _grid = require("part:@sanity/components/lists/grid");

var _sortableGrid = require("part:@sanity/components/lists/sortable-grid");

var _media = _interopRequireDefault(require("part:@sanity/components/previews/media"));

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _react = _interopRequireDefault(require("react"));

var _reactSortableHoc = require("react-sortable-hoc");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var chance = new _chance.default();

class SortableGridTester extends _react.default.PureComponent {
  constructor(props) {
    super(props);

    _defineProperty(this, "handleOnSort", _ref => {
      var oldIndex = _ref.oldIndex,
          newIndex = _ref.newIndex;
      var items = this.state.items;
      this.setState({
        items: (0, _reactSortableHoc.arrayMove)(items, oldIndex, newIndex)
      });
      if (this.props.onSort) this.props.onSort();
    });

    this.state = {
      items: this.props.items.slice()
    };
  }

  render() {
    var items = this.state.items;
    var Preview = this.props.renderWith;
    return /*#__PURE__*/_react.default.createElement(_sortableGrid.List, {
      onSortEnd: this.handleOnSort
    }, items.map((item, index) => /*#__PURE__*/_react.default.createElement(_sortableGrid.Item, {
      key: item.key,
      index: index
    }, /*#__PURE__*/_react.default.createElement(_sortableGrid.DragHandle, null), /*#__PURE__*/_react.default.createElement(Preview, item))));
  }

}

function MediaPreviewSortableStory() {
  var items = (0, _range2.default)(50).map((item, i) => {
    var width = (0, _random2.default)(10, 80) * 10;
    var height = (0, _random2.default)(10, 50) * 10;
    var randomImage = "http://placekitten.com/".concat(width, "/").concat(height);
    return {
      key: "".concat(i),
      title: chance.name(),
      imageUrl: randomImage,
      aspect: width / height
    };
  });
  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/lists/grid",
    propTables: [_grid.List]
  }, /*#__PURE__*/_react.default.createElement(SortableGridTester, {
    items: items,
    renderWith: _media.default
  }));
}