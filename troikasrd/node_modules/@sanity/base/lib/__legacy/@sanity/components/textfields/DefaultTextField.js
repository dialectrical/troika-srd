"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _react = _interopRequireDefault(require("react"));

var _defaultStyle = _interopRequireDefault(require("part:@sanity/components/textfields/default-style"));

var _default = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/formfields/default"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// @todo: refactor to functional component
class DefaultTextField extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "_inputId", void 0);

    _defineProperty(this, "handleClear", () => {
      if (this.props.onClear) this.props.onClear();
    });
  }

  // eslint-disable-next-line camelcase
  UNSAFE_componentWillMount() {
    this._inputId = this.props.id || (0, _uniqueId2.default)('DefaultTextField');
  }

  render() {
    var _this$props = this.props,
        label = _this$props.label,
        placeholder = _this$props.placeholder,
        hasError = _this$props.hasError,
        isClearable = _this$props.isClearable,
        type = _this$props.type,
        className = _this$props.className,
        _this$props$level = _this$props.level,
        level = _this$props$level === void 0 ? 1 : _this$props$level,
        description = _this$props.description,
        onChange = _this$props.onChange,
        onKeyPress = _this$props.onKeyPress,
        onFocus = _this$props.onFocus,
        onBlur = _this$props.onBlur,
        _this$props$value = _this$props.value,
        value = _this$props$value === void 0 ? '' : _this$props$value;
    return /*#__PURE__*/_react.default.createElement(_default2.default, {
      className: "".concat(hasError ? _defaultStyle.default.hasError : _defaultStyle.default.root, " ").concat(className || ''),
      level: level,
      labelFor: this._inputId,
      label: label,
      description: description
    }, /*#__PURE__*/_react.default.createElement(_default.default, {
      className: _defaultStyle.default.input,
      inputId: this._inputId,
      type: type,
      onChange: onChange,
      value: value,
      placeholder: placeholder,
      onKeyPress: onKeyPress,
      onFocus: onFocus,
      onBlur: onBlur,
      onClear: this.handleClear,
      isClearable: isClearable,
      hasError: hasError
    }));
  }

}

exports.default = DefaultTextField;