"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _reactPopper = require("react-popper");

var _portal = require("part:@sanity/components/portal");

var _hooks = require("../hooks");

var _Poppable = _interopRequireDefault(require("./Poppable.css"));

var _excluded = ["children", "onEscape", "onClickOutside", "popperClassName"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DEFAULT_MODIFIERS = [{
  name: 'preventOverflow',
  options: {
    rootBoundary: 'viewport'
  }
}];
var _default = Poppable;
exports.default = _default;
var PoppableChildren = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  var children = props.children,
      onEscape = props.onEscape,
      onClickOutside = props.onClickOutside,
      popperClassName = props.popperClassName,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useLayer = (0, _ui.useLayer)(),
      isTopLayer = _useLayer.isTopLayer;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      rootElement = _useState2[0],
      setRootElement = _useState2[1];

  var setRef = (0, _react.useCallback)(el => {
    setRootElement(el);
    if (typeof ref === 'function') ref(el);else if (ref) ref.current = el;
  }, [ref]);
  (0, _hooks.useClickOutside)(event => {
    if (!isTopLayer) return;
    if (onClickOutside) onClickOutside(event);
  }, [rootElement]);
  (0, _react.useEffect)(() => {
    if (!isTopLayer) return undefined;

    var handleGlobalKeyDown = event => {
      if (event.key === 'Escape') {
        event.stopPropagation();
        if (onEscape) onEscape();
      }
    };

    window.addEventListener('keydown', handleGlobalKeyDown);
    return () => {
      window.removeEventListener('keydown', handleGlobalKeyDown);
    };
  }, [isTopLayer, onEscape]);
  return /*#__PURE__*/_react.default.createElement("div", _extends({}, restProps, {
    className: (0, _classnames.default)(_Poppable.default.root, popperClassName),
    ref: setRef
  }), children);
});
PoppableChildren.displayName = 'PoppableChildren';

function Poppable(props) {
  var onEscape = props.onEscape,
      onClickOutside = props.onClickOutside,
      children = props.children,
      referenceClassName = props.referenceClassName,
      _props$modifiers = props.modifiers,
      modifiers = _props$modifiers === void 0 ? DEFAULT_MODIFIERS : _props$modifiers,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? 'bottom-start' : _props$placement,
      popperClassName = props.popperClassName,
      referenceElementProp = props.referenceElement;

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      referenceElement = _useState4[0],
      setReferenceElement = _useState4[1];

  var _useState5 = (0, _react.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      popperElement = _useState6[0],
      setPopperElement = _useState6[1];

  var popperReferenceElement = referenceElementProp || referenceElement;
  var popper = (0, _reactPopper.usePopper)(popperReferenceElement, popperElement, {
    placement,
    modifiers
  });
  var forceUpdate = popper.forceUpdate; // Force update when `content` or `referenceElement` changes

  (0, _react.useEffect)(() => {
    if (forceUpdate) forceUpdate();
  }, [forceUpdate, children, popperReferenceElement]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !referenceElementProp && /*#__PURE__*/_react.default.createElement("div", {
    ref: setReferenceElement,
    className: referenceClassName
  }), children && /*#__PURE__*/_react.default.createElement(_portal.Portal, null, /*#__PURE__*/_react.default.createElement(_ui.Layer, {
    className: _Poppable.default.layer
  }, /*#__PURE__*/_react.default.createElement(PoppableChildren, _extends({
    onEscape: onEscape,
    onClickOutside: onClickOutside,
    popperClassName: popperClassName,
    ref: setPopperElement,
    style: _objectSpread({}, popper.styles.popper)
  }, popper.attributes.popper), children))));
}