"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DialogContentStory = DialogContentStory;

var _actions = require("part:@sanity/storybook/addons/actions");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _default = _interopRequireDefault(require("part:@sanity/components/dialogs/default"));

var _content = _interopRequireDefault(require("part:@sanity/components/dialogs/content"));

var _portal = require("part:@sanity/components/portal");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _react = _interopRequireWildcard(require("react"));

var _excluded = ["children"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function DialogContentStory() {
  var actions = [{
    index: '1',
    title: 'Finish',
    color: 'primary',
    autoFocus: true
  }, {
    index: '2',
    title: 'Cancel'
  }, {
    index: '3',
    title: 'Secondary',
    color: 'danger',
    secondary: true
  }];
  var dialogActions = (0, _knobs.boolean)('Show actions', false, 'test') ? actions : [];
  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/dialogs/default",
    propTables: [_default.default]
  }, /*#__PURE__*/_react.default.createElement(DialogExample, {
    title: (0, _knobs.text)('title', undefined, 'dialog props'),
    color: (0, _knobs.select)('color', ['default', 'danger', 'success', 'info', 'warning'], undefined, 'dialog props'),
    onAction: (0, _actions.action)('onAction'),
    actions: dialogActions
  }, /*#__PURE__*/_react.default.createElement(_content.default, {
    size: (0, _knobs.select)('size', ['default', 'small', 'medium', 'large', 'auto'], 'default', 'dialogcontent props'),
    padding: (0, _knobs.select)('padding', ['none', 'small', 'medium', 'large'], 'medium', 'dialogcontent props')
  }, (0, _knobs.text)('content', 'This is the raw content. use DialogContent to size it', 'props'))));
}

function DialogExample(props) {
  var children = props.children,
      restProps = _objectWithoutProperties(props, _excluded);

  var portalRef = (0, _react.useRef)(document.createElement('div'));
  (0, _react.useEffect)(() => {
    portalRef.current.setAttribute('data-portal', '');
    document.body.appendChild(portalRef.current);
    return () => {
      document.body.removeChild(portalRef.current);
    };
  }, []);
  return /*#__PURE__*/_react.default.createElement(_portal.PortalProvider, {
    element: portalRef.current
  }, /*#__PURE__*/_react.default.createElement(_default.default, restProps, children));
}