"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultStory = DefaultStory;

var _range2 = _interopRequireDefault(require("lodash/range"));

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _default = _interopRequireDefault(require("part:@sanity/components/selects/default"));

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _chance = _interopRequireDefault(require("chance"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var chance = new _chance.default();
var items = (0, _range2.default)(20).map((_, i) => {
  return {
    title: chance.name(),
    key: "".concat(i)
  };
});
var centerStyle = {
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  height: '100%',
  width: '100%',
  position: 'absolute',
  top: 0,
  left: 0
};

function DefaultStory() {
  var options = {
    range: true,
    min: 0,
    max: items.length,
    step: 1
  };
  var valueIndex = (0, _knobs.number)('Selected item', -1, options);
  return /*#__PURE__*/_react.default.createElement("div", {
    style: _objectSpread(_objectSpread({}, centerStyle), {}, {
      color: (0, _knobs.color)('color', undefined, 'test'),
      backgroundColor: (0, _knobs.color)('background color', undefined, 'test')
    })
  }, /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/selects/default",
    propTables: [_default.default]
  }, /*#__PURE__*/_react.default.createElement(_default.default, {
    label: (0, _knobs.text)('label', 'This is the label', 'props'),
    placeholder: (0, _knobs.text)('placeholder', 'This is the placeholder', 'props'),
    onChange: (0, _storybook.action)('onChange'),
    onFocus: (0, _storybook.action)('onFocus'),
    onBlur: (0, _storybook.action)('onBlur'),
    items: items,
    value: items[valueIndex],
    disabled: (0, _knobs.boolean)('disabled', false, 'props')
  })));
}