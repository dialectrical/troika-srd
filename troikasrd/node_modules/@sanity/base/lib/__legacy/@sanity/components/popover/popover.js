"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Popover = void 0;

var _ui = require("@sanity/ui");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _reactPopper = require("react-popper");

var _popperMaxSizeModifier = _interopRequireDefault(require("popper-max-size-modifier"));

var _boundaryElement = require("../boundaryElement");

var _components = require("../../../../components");

var _popoverArrow = require("./popoverArrow");

var _popover = _interopRequireDefault(require("./popover.css"));

var _excluded = ["allowedAutoPlacements", "arrowClassName", "boundaryElement", "cardClassName", "children", "className", "content", "disabled", "fallbackPlacements", "open", "layer", "placement", "portal", "style", "targetElement"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function setRef(ref, val) {
  if (typeof ref === 'object' && ref !== null) ref.current = val;
  if (typeof ref === 'function') ref(val);
}

var PopoverChildren = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  var allowedAutoPlacements = props.allowedAutoPlacements,
      arrowClassName = props.arrowClassName,
      boundaryElementProp = props.boundaryElement,
      cardClassName = props.cardClassName,
      children = props.children,
      className = props.className,
      content = props.content,
      disabled = props.disabled,
      fallbackPlacements = props.fallbackPlacements,
      open = props.open,
      _ = props.layer,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? 'bottom' : _props$placement,
      portal = props.portal,
      style = props.style,
      targetElement = props.targetElement,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useLayer = (0, _ui.useLayer)(),
      zIndex = _useLayer.zIndex;

  var boundaryElementCtx = (0, _boundaryElement.useBoundaryElement)();
  var boundaryElement = boundaryElementProp || boundaryElementCtx;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      referenceElement = _useState2[0],
      setReferenceElement = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      popperElement = _useState4[0],
      setPopperElement = _useState4[1];

  var _useState5 = (0, _react.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      arrowElement = _useState6[0],
      setArrowElement = _useState6[1];

  var popperReferenceElement = targetElement || referenceElement;
  var popper = (0, _reactPopper.usePopper)(popperReferenceElement, popperElement, {
    placement,
    modifiers: [{
      name: 'arrow',
      options: {
        element: arrowElement,
        padding: 4
      }
    }, {
      name: 'preventOverflow',
      options: {
        rootBoundary: boundaryElement ? undefined : 'viewport',
        boundary: boundaryElement || 'clippingParents',
        padding: 8
      }
    }, {
      name: 'offset',
      options: {
        offset: [0, 4]
      }
    }, {
      name: 'flip',
      options: {
        rootBoundary: boundaryElement ? undefined : 'viewport',
        boundary: boundaryElement || 'clippingParents',
        allowedAutoPlacements,
        fallbackPlacements
      }
    }, _objectSpread(_objectSpread({}, _popperMaxSizeModifier.default), {}, {
      options: {
        padding: 8
      }
    })]
  });
  var forceUpdate = popper.forceUpdate; // Force update when `content` or `referenceElement` changes

  (0, _react.useEffect)(() => {
    if (forceUpdate) forceUpdate();
  }, [forceUpdate, content, popperReferenceElement]);
  var setReference = (0, _react.useCallback)(el => {
    setPopperElement(el);
    setRef(ref, el);
  }, [ref]);

  if (disabled) {
    return children || /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);
  }

  var popperNode = null;

  if (open) {
    popperNode = /*#__PURE__*/_react.default.createElement("div", _extends({}, restProps, {
      className: (0, _classnames.default)(_popover.default.root, className),
      ref: setReference,
      style: _objectSpread(_objectSpread(_objectSpread({}, popper.styles.popper), style || {}), {}, {
        zIndex
      })
    }, popper.attributes.popper), /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)(_popover.default.card, cardClassName)
    }, content), /*#__PURE__*/_react.default.createElement(_popoverArrow.PopoverArrow, {
      className: arrowClassName,
      ref: setArrowElement,
      style: popper.styles.arrow
    }));

    if (portal) {
      popperNode = /*#__PURE__*/_react.default.createElement(_ui.Portal, null, popperNode);
    }
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children && !targetElement ? /*#__PURE__*/(0, _react.cloneElement)(children, {
    ref: setReferenceElement
  }) : children || /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null), popperNode);
});
PopoverChildren.displayName = 'Popover';
var Popover = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  if (!props.open) {
    return /*#__PURE__*/_react.default.createElement(PopoverChildren, _extends({}, props, {
      ref: ref
    }));
  }

  return /*#__PURE__*/_react.default.createElement(_components.LegacyLayerProvider, {
    zOffset: "popover"
  }, /*#__PURE__*/_react.default.createElement(PopoverChildren, _extends({}, props, {
    ref: ref
  })));
});
exports.Popover = Popover;
Popover.displayName = 'Popover';