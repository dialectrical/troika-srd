"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _customStyle = _interopRequireDefault(require("part:@sanity/components/selects/custom-style"));

var _classnames = _interopRequireDefault(require("classnames"));

var _angleDownIcon = _interopRequireDefault(require("part:@sanity/base/angle-down-icon"));

var _excluded = ["items", "value", "renderItem"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class CustomSelect extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      isOpen: false,
      activeIndex: -1
    });

    _defineProperty(this, "handleItemClick", event => {
      this.selectIndex(Number(event.currentTarget.getAttribute('data-item-index')));
      this.setState({
        isOpen: false
      });
    });

    _defineProperty(this, "handleInnerClick", () => {
      this.setState({
        isOpen: true
      });
    });

    _defineProperty(this, "handleKeyDown", event => {
      var _this$state = this.state,
          isOpen = _this$state.isOpen,
          activeIndex = _this$state.activeIndex;

      if (event.key === 'Enter') {
        if (isOpen && activeIndex > -1) {
          this.selectIndex(activeIndex);
          this.setState({
            isOpen: false
          });
        } else {
          this.setState({
            isOpen: true
          });
        }
      }

      if (event.key === 'Escape') {
        this.setState({
          isOpen: false
        });
      }

      var items = this.props.items;
      var lastIndex = items.length - 1;

      if (['ArrowUp', 'ArrowDown'].includes(event.key)) {
        event.preventDefault();

        if (!isOpen) {
          this.setState({
            isOpen: true
          });
          return;
        }

        var nextIndex = activeIndex + (event.key === 'ArrowUp' ? -1 : 1);
        if (nextIndex < 0) nextIndex = lastIndex;
        if (nextIndex > lastIndex) nextIndex = 0;
        this.setState({
          activeIndex: nextIndex
        });
      }
    });
  }

  selectIndex(index) {
    var item = this.props.items[index];
    this.props.onChange(item);
  }

  render() {
    var _this$props = this.props,
        items = _this$props.items,
        value = _this$props.value,
        renderItem = _this$props.renderItem,
        rest = _objectWithoutProperties(_this$props, _excluded);

    var _this$state2 = this.state,
        isOpen = _this$state2.isOpen,
        activeIndex = _this$state2.activeIndex;
    return /*#__PURE__*/_react.default.createElement("div", _extends({
      className: _customStyle.default.root
    }, rest), /*#__PURE__*/_react.default.createElement("div", {
      className: _customStyle.default.inner,
      onClick: this.handleInnerClick,
      onKeyDown: this.handleKeyDown,
      tabIndex: 0
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: _customStyle.default.selectContainer
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: _customStyle.default.text
    }, renderItem(value)), /*#__PURE__*/_react.default.createElement("div", {
      className: _customStyle.default.arrow
    }, /*#__PURE__*/_react.default.createElement(_angleDownIcon.default, null)))), isOpen && /*#__PURE__*/_react.default.createElement("div", {
      className: _customStyle.default.listContainer
    }, /*#__PURE__*/_react.default.createElement("ul", {
      className: _customStyle.default.items,
      onKeyDown: this.handleKeyDown
    }, items.map((item, index) => {
      var isActive = index === activeIndex;
      var isSelected = item === value;
      var className = (0, _classnames.default)(_customStyle.default.item, isSelected && _customStyle.default.selectedItem, isActive && _customStyle.default.activeItem);
      return /*#__PURE__*/_react.default.createElement("li", {
        key: index,
        className: className,
        onClick: this.handleItemClick,
        "data-item-index": index
      }, renderItem(item, {
        index,
        isActive,
        isSelected
      }));
    }))));
  }

}

exports.default = CustomSelect;

_defineProperty(CustomSelect, "defaultProps", {
  onChange: () => undefined
});