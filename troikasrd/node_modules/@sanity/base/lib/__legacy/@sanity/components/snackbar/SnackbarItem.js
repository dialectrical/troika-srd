"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _circleCheckIcon = _interopRequireDefault(require("part:@sanity/base/circle-check-icon"));

var _warningIcon = _interopRequireDefault(require("part:@sanity/base/warning-icon"));

var _errorIcon = _interopRequireDefault(require("part:@sanity/base/error-icon"));

var _infoIcon = _interopRequireDefault(require("part:@sanity/base/info-icon"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _SnackbarItem = _interopRequireDefault(require("./SnackbarItem.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DEFAULT_ICONS = {
  info: /*#__PURE__*/_react.default.createElement(_infoIcon.default, null),
  success: /*#__PURE__*/_react.default.createElement(_circleCheckIcon.default, null),
  warning: /*#__PURE__*/_react.default.createElement(_warningIcon.default, null),
  error: /*#__PURE__*/_react.default.createElement(_errorIcon.default, null)
};

class SnackbarItem extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "_dismissTimer", void 0);

    _defineProperty(this, "_enterTimer", void 0);

    _defineProperty(this, "_snackRef", /*#__PURE__*/_react.default.createRef());

    _defineProperty(this, "state", {
      isEntering: true
    });

    _defineProperty(this, "snackIcon", () => {
      var _this$props = this.props,
          icon = _this$props.icon,
          _this$props$kind = _this$props.kind,
          kind = _this$props$kind === void 0 ? 'info' : _this$props$kind;
      if (typeof icon === 'boolean' && icon) return DEFAULT_ICONS[kind];
      if (typeof icon === 'object' || typeof icon === 'string') return icon;
      return undefined;
    });

    _defineProperty(this, "handleAutoDismissSnack", () => {
      var _this$props2 = this.props,
          _this$props2$autoDism = _this$props2.autoDismissTimeout,
          autoDismissTimeout = _this$props2$autoDism === void 0 ? 5000 : _this$props2$autoDism,
          isPersisted = _this$props2.isPersisted,
          id = _this$props2.id,
          onDismiss = _this$props2.onDismiss,
          onClose = _this$props2.onClose;

      if (!isPersisted) {
        this._dismissTimer = setTimeout(() => {
          if (onClose) onClose();
          onDismiss(id);
        }, autoDismissTimeout);
      }
    });

    _defineProperty(this, "handleMouseOver", () => {
      this.cancelAutoDismissSnack();
    });

    _defineProperty(this, "handleMouseLeave", () => {
      var isPersisted = this.props.isPersisted;

      if (!isPersisted) {
        this.handleAutoDismissSnack();
      }
    });

    _defineProperty(this, "handleFocus", () => {
      this.cancelAutoDismissSnack();
    });

    _defineProperty(this, "handleBlur", () => {
      var isPersisted = this.props.isPersisted;

      if (!isPersisted) {
        this.handleAutoDismissSnack();
      }
    });

    _defineProperty(this, "handleAction", () => {
      var _this$props3 = this.props,
          action = _this$props3.action,
          id = _this$props3.id,
          onDismiss = _this$props3.onDismiss;
      if (action && action.callback) action.callback();
      if (onDismiss) onDismiss(id);
    });

    _defineProperty(this, "handleClose", () => {
      var _this$props4 = this.props,
          id = _this$props4.id,
          onClose = _this$props4.onClose,
          onDismiss = _this$props4.onDismiss;
      if (onClose) onClose();
      if (onDismiss) onDismiss(id);
    });

    _defineProperty(this, "cancelAutoDismissSnack", () => {
      if (this._dismissTimer) {
        clearTimeout(this._dismissTimer);
        this._dismissTimer = undefined;
      }
    });
  }

  componentDidMount() {
    var _this$props5 = this.props,
        onSetHeight = _this$props5.onSetHeight,
        id = _this$props5.id,
        isPersisted = _this$props5.isPersisted,
        setAutoFocus = _this$props5.setAutoFocus;

    if (setAutoFocus) {
      if (this._snackRef.current) {
        this._snackRef.current.focus();
      }

      this.cancelAutoDismissSnack();
    }

    var height = this._snackRef.current && this._snackRef.current.clientHeight;
    onSetHeight(id, height || 0);
    if (isPersisted) this.cancelAutoDismissSnack();else this.handleAutoDismissSnack();
    this._enterTimer = setTimeout(() => {
      this.setState({
        isEntering: false
      });
    }, 100);
  }

  componentWillUnmount() {
    if (this._dismissTimer) {
      clearTimeout(this._dismissTimer);
      this._dismissTimer = undefined;
    }

    if (this._enterTimer) {
      clearTimeout(this._enterTimer);
      this._enterTimer = undefined;
    }
  }

  render() {
    var _this$props6 = this.props,
        action = _this$props6.action,
        children = _this$props6.children,
        icon = _this$props6.icon,
        id = _this$props6.id,
        _this$props6$isClosea = _this$props6.isCloseable,
        isCloseable = _this$props6$isClosea === void 0 ? true : _this$props6$isClosea,
        isOpen = _this$props6.isOpen,
        _this$props6$kind = _this$props6.kind,
        kind = _this$props6$kind === void 0 ? 'info' : _this$props6$kind,
        title = _this$props6.title,
        subtitle = _this$props6.subtitle,
        offset = _this$props6.offset;
    var rootStyles = this.state.isEntering ? "".concat(_SnackbarItem.default.root) : "".concat(_SnackbarItem.default.root, " ").concat(isOpen ? _SnackbarItem.default.showSnack : _SnackbarItem.default.dismissSnack);
    var transition = "all 200ms ease-in-out";

    var role = () => {
      if (kind === 'success') return 'status';
      if (kind === 'info') return 'log';
      return 'alert';
    };

    return /*#__PURE__*/_react.default.createElement("div", {
      "aria-label": kind,
      "aria-describedby": "snackbarTitle-".concat(kind, "-").concat(id),
      role: role(),
      ref: this._snackRef,
      tabIndex: -1,
      className: rootStyles,
      style: {
        bottom: offset,
        transition: transition
      },
      onMouseOver: () => this.handleMouseOver(),
      onMouseLeave: () => this.handleMouseLeave(),
      onFocus: () => this.handleFocus(),
      onBlur: () => this.handleBlur(),
      onKeyDown: e => e.key === 'escape' && this.handleAction(),
      "data-kind": kind
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: _SnackbarItem.default.inner
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: _SnackbarItem.default.buttonsWrapper
    }, action && /*#__PURE__*/_react.default.createElement("div", {
      className: _SnackbarItem.default.actionButtonContainer
    }, /*#__PURE__*/_react.default.createElement(_default.default, {
      onClick: () => this.handleAction(),
      bleed: true,
      color: "white",
      kind: "simple",
      padding: "none"
    }, action.title)), isCloseable && /*#__PURE__*/_react.default.createElement("div", {
      className: _SnackbarItem.default.closeButtonContainer
    }, /*#__PURE__*/_react.default.createElement(_default.default, {
      "aria-label": "Close",
      onClick: this.handleClose,
      bleed: true,
      color: "white",
      icon: _closeIcon.default,
      kind: "simple",
      padding: "none"
    }))), icon && /*#__PURE__*/_react.default.createElement("div", {
      role: "img",
      "aria-hidden": true,
      className: _SnackbarItem.default.icon
    }, this.snackIcon()), /*#__PURE__*/_react.default.createElement("div", {
      className: _SnackbarItem.default.content
    }, /*#__PURE__*/_react.default.createElement("div", {
      id: "snackbarTitle-".concat(kind, "-").concat(id),
      className: _SnackbarItem.default.title
    }, title), subtitle && /*#__PURE__*/_react.default.createElement("div", {
      className: _SnackbarItem.default.subtitle
    }, subtitle), children && /*#__PURE__*/_react.default.createElement("div", {
      className: _SnackbarItem.default.children
    }, children))));
  }

}

exports.default = SnackbarItem;