"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _partition4 = _interopRequireDefault(require("lodash/partition"));

var _ui = require("@sanity/ui");

var _classnames = _interopRequireDefault(require("classnames"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _popoverStyle = _interopRequireDefault(require("part:@sanity/components/dialogs/popover-style"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _buttonGrid = _interopRequireDefault(require("part:@sanity/components/buttons/button-grid"));

var _popover = require("part:@sanity/components/popover");

var _react = _interopRequireWildcard(require("react"));

var _scroll = require("../../../../components/scroll");

var _hooks = require("../hooks");

var _excluded = ["boundaryElement", "children", "color", "fallbackPlacements", "hasAnimation", "padding", "placement", "referenceElement", "size", "useOverlay"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function PopoverDialog(props) {
  var boundaryElement = props.boundaryElement,
      children = props.children,
      color = props.color,
      fallbackPlacements = props.fallbackPlacements,
      hasAnimation = props.hasAnimation,
      _props$padding = props.padding,
      padding = _props$padding === void 0 ? 'medium' : _props$padding,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? 'auto' : _props$placement,
      referenceElementProp = props.referenceElement,
      _props$size = props.size,
      size = _props$size === void 0 ? 'medium' : _props$size,
      _props$useOverlay = props.useOverlay,
      useOverlay = _props$useOverlay === void 0 ? false : _props$useOverlay,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      targetElement = _useState2[0],
      setTargetElement = _useState2[1];

  var referenceElement = referenceElementProp || targetElement;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !referenceElementProp && /*#__PURE__*/_react.default.createElement("div", {
    ref: setTargetElement
  }), useOverlay && /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.overlay
  }), referenceElement && /*#__PURE__*/_react.default.createElement(_popover.Popover, {
    arrowClassName: (0, _classnames.default)(_popoverStyle.default.arrow, hasAnimation && _popoverStyle.default.popperAnimation),
    boundaryElement: boundaryElement,
    cardClassName: (0, _classnames.default)(_popoverStyle.default.card, hasAnimation && _popoverStyle.default.popperAnimation),
    className: _popoverStyle.default.root,
    content: /*#__PURE__*/_react.default.createElement(PopoverDialogChildren, restProps, children),
    "data-color": color,
    "data-padding": padding,
    "data-size": size,
    fallbackPlacements: fallbackPlacements,
    layer: true,
    open: true,
    placement: placement,
    portal: true,
    targetElement: referenceElement
  }));
}

var _default = PopoverDialog;
exports.default = _default;

function PopoverDialogChildren(props) {
  var _props$actions = props.actions,
      actions = _props$actions === void 0 ? [] : _props$actions,
      children = props.children,
      onAction = props.onAction,
      onClickOutside = props.onClickOutside,
      onClose = props.onClose,
      onEscape = props.onEscape,
      title = props.title;

  var _useLayer = (0, _ui.useLayer)(),
      isTopLayer = _useLayer.isTopLayer;

  var _partition2 = (0, _partition4.default)(actions, action => action.primary),
      _partition3 = _slicedToArray(_partition2, 2),
      primary = _partition3[0],
      secondary = _partition3[1];

  var secondaryActionButtons = secondary.map((action, actionIndex) =>
  /*#__PURE__*/
  // eslint-disable-next-line react/no-array-index-key
  _react.default.createElement(PopoverDialogActionButton, {
    action: action,
    key: actionIndex,
    onAction: onAction
  }));
  var primaryActionButtons = primary.map((action, actionIndex) =>
  /*#__PURE__*/
  // eslint-disable-next-line react/no-array-index-key
  _react.default.createElement(PopoverDialogActionButton, {
    action: action,
    key: actionIndex,
    onAction: onAction
  }));
  (0, _react.useEffect)(() => {
    if (!isTopLayer) return undefined;

    var handleGlobalKeyDown = event => {
      if (event.key === 'Escape') {
        event.stopPropagation();
        if (onEscape) onEscape(event);
      }
    };

    window.addEventListener('keydown', handleGlobalKeyDown);
    return () => {
      window.removeEventListener('keydown', handleGlobalKeyDown);
    };
  }, [isTopLayer, onEscape]);

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      rootElement = _useState4[0],
      setRootElement = _useState4[1];

  (0, _hooks.useClickOutside)((0, _react.useCallback)(() => {
    if (isTopLayer) {
      if (onClickOutside) onClickOutside();
    }
  }, [isTopLayer, onClickOutside]), [rootElement]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.root,
    ref: setRootElement
  }, title && /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.header
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.title
  }, /*#__PURE__*/_react.default.createElement("h3", null, title)), onClose && /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.closeButtonContainer
  }, /*#__PURE__*/_react.default.createElement(_default2.default, {
    className: _popoverStyle.default.closeButton,
    icon: _closeIcon.default,
    kind: "simple",
    onClick: onClose,
    padding: "small",
    title: "Close"
  }))), !title && onClose && /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.floatingCloseButtonContainer
  }, /*#__PURE__*/_react.default.createElement(_default2.default, {
    icon: _closeIcon.default,
    kind: "simple",
    onClick: onClose,
    padding: "small",
    title: "Close"
  })), /*#__PURE__*/_react.default.createElement(_scroll.ScrollContainer, {
    className: _popoverStyle.default.content
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.contentWrapper
  }, children)), actions.length > 0 && /*#__PURE__*/_react.default.createElement("div", {
    className: _popoverStyle.default.footer
  }, /*#__PURE__*/_react.default.createElement(_buttonGrid.default, {
    align: "end",
    secondary: primaryActionButtons
  }, secondaryActionButtons)));
}

function PopoverDialogActionButton(_ref) {
  var action = _ref.action,
      onAction = _ref.onAction;
  var handleAction = (0, _react.useCallback)(() => {
    if (onAction) onAction(action);
  }, [action, onAction]);
  return /*#__PURE__*/_react.default.createElement(_default2.default, {
    onClick: handleAction,
    color: action.color,
    disabled: action.disabled,
    kind: action.kind,
    autoFocus: action.autoFocus,
    className: action.secondary ? _popoverStyle.default.actionSecondary : '',
    inverted: action.inverted
  }, action.title);
}