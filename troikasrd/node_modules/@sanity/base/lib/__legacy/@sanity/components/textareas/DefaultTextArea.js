"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _defaultStyle = _interopRequireDefault(require("part:@sanity/components/textareas/default-style"));

var _excluded = ["isClearable", "onClear", "customValidity", "inputId", "hasFocus", "rows"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// @todo: refactor to functional component
class DefaultTextArea extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "_input", null);

    _defineProperty(this, "handleClear", event => {
      if (this.props.onClear) {
        this.props.onClear(event);
      }
    });

    _defineProperty(this, "setInput", element => {
      this._input = element;
    });
  }

  select() {
    if (this._input) {
      this._input.select();
    }
  }

  focus() {
    if (this._input) {
      this._input.focus();
    }
  }

  componentDidMount() {
    if (this._input) {
      this._input.setCustomValidity(this.props.customValidity || '');
    }
  } // eslint-disable-next-line camelcase


  UNSAFE_componentWillReceiveProps(nextProps) {
    if (this._input) {
      if (nextProps.customValidity !== this.props.customValidity) {
        this._input.setCustomValidity(nextProps.customValidity || '');
      }
    }
  }

  render() {
    var _this$props = this.props,
        isClearable = _this$props.isClearable,
        onClear = _this$props.onClear,
        _this$props$customVal = _this$props.customValidity,
        customValidity = _this$props$customVal === void 0 ? '' : _this$props$customVal,
        inputId = _this$props.inputId,
        hasFocus = _this$props.hasFocus,
        _this$props$rows = _this$props.rows,
        rows = _this$props$rows === void 0 ? 10 : _this$props$rows,
        rest = _objectWithoutProperties(_this$props, _excluded);

    return /*#__PURE__*/_react.default.createElement("div", {
      className: _defaultStyle.default.root
    }, /*#__PURE__*/_react.default.createElement("textarea", _extends({
      id: inputId,
      className: _defaultStyle.default.textarea,
      autoComplete: "off",
      ref: this.setInput,
      rows: rows
    }, rest)), isClearable && !this.props.disabled && /*#__PURE__*/_react.default.createElement("button", {
      type: "button",
      className: _defaultStyle.default.clearButton,
      onClick: onClear
    }, /*#__PURE__*/_react.default.createElement(_closeIcon.default, null)));
  }

}

exports.default = DefaultTextArea;