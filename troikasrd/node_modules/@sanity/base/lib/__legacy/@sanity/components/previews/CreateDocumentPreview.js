"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CreateDocumentPreview;

var _router = require("part:@sanity/base/router");

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _components = require("../../../../components");

var _hooks = require("../../../../datastores/user/hooks");

var _hooks2 = require("../../../../datastores/grants/hooks");

var _CreateDocumentPreview = _interopRequireDefault(require("./CreateDocumentPreview.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @todo: remove the following line when part imports has been removed from this file
///<reference types="@sanity/types/parts" />
// eslint-disable-next-line camelcase
var DEFAULT_MEDIA_DIMENSION = {
  width: 80,
  height: 80,
  aspect: 1,
  fit: 'crop'
};

function CreateDocumentPreview(props) {
  var _props$title = props.title,
      title = _props$title === void 0 ? 'Untitled' : _props$title,
      subtitle = props.subtitle,
      _props$media = props.media,
      media = _props$media === void 0 ? props.icon : _props$media,
      isPlaceholder = props.isPlaceholder,
      _props$mediaDimension = props.mediaDimensions,
      mediaDimensions = _props$mediaDimension === void 0 ? DEFAULT_MEDIA_DIMENSION : _props$mediaDimension,
      description = props.description,
      params = props.params,
      templateParams = props.templateParams;

  var _useCurrentUser = (0, _hooks.useCurrentUser)(),
      currentUser = _useCurrentUser.value;

  var createPermission = (0, _hooks2.unstable_useCheckDocumentPermission)('dummy-id', params.type, 'create');

  if (isPlaceholder || !params) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: _CreateDocumentPreview.default.placeholder
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: _CreateDocumentPreview.default.heading
    }, /*#__PURE__*/_react.default.createElement("h2", {
      className: _CreateDocumentPreview.default.title
    }, "Loading\u2026"), /*#__PURE__*/_react.default.createElement("h3", {
      className: _CreateDocumentPreview.default.subtitle
    }, "Loading\u2026")), media !== false && /*#__PURE__*/_react.default.createElement("div", {
      className: _CreateDocumentPreview.default.media
    }));
  }

  var content = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, media !== false && /*#__PURE__*/_react.default.createElement("div", {
    className: _CreateDocumentPreview.default.media
  }, typeof media === 'function' && media({
    dimensions: mediaDimensions,
    layout: 'default'
  }), typeof media === 'string' && /*#__PURE__*/_react.default.createElement("div", {
    className: _CreateDocumentPreview.default.mediaString
  }, media), /*#__PURE__*/_react.default.isValidElement(media) && media), /*#__PURE__*/_react.default.createElement("div", {
    className: _CreateDocumentPreview.default.heading
  }, /*#__PURE__*/_react.default.createElement("h2", {
    className: _CreateDocumentPreview.default.title
  }, typeof title !== 'function' && title, typeof title === 'function' && title({
    layout: 'default'
  })), subtitle && /*#__PURE__*/_react.default.createElement("h3", {
    className: _CreateDocumentPreview.default.subtitle
  }, typeof subtitle === 'function' && subtitle({
    layout: 'default'
  }) || subtitle)), description && /*#__PURE__*/_react.default.createElement("p", {
    className: _CreateDocumentPreview.default.description
  }, description));

  return createPermission.granted ? /*#__PURE__*/_react.default.createElement(_router.IntentLink, {
    intent: "create",
    params: [params, templateParams],
    className: _CreateDocumentPreview.default.enabledRoot,
    title: subtitle ? "Create new ".concat(title, " (").concat(subtitle, ")") : "Create new ".concat(title),
    onClick: props.onClick
  }, content) : /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 2,
      style: {
        maxWidth: 300
      }
    }, /*#__PURE__*/_react.default.createElement(_components.InsufficientPermissionsMessage, {
      currentUser: currentUser,
      operationLabel: "create this document"
    }))
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _CreateDocumentPreview.default.disabledRoot
  }, content));
}