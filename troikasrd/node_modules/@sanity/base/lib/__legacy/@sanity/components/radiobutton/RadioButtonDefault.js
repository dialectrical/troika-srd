"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = RadioButton;

var _react = _interopRequireWildcard(require("react"));

var _autoId = require("@reach/auto-id");

var _shared = _interopRequireDefault(require("../toggles/shared.css"));

var _RadioButtonDefault = _interopRequireDefault(require("./RadioButtonDefault.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function RadioButton(_ref) {
  var item = _ref.item,
      disabled = _ref.disabled,
      checked = _ref.checked,
      label = _ref.label,
      name = _ref.name,
      onChange = _ref.onChange,
      onFocus = _ref.onFocus;
  var elementId = (0, _autoId.useId)();
  var handleChange = (0, _react.useCallback)(() => {
    if (onChange) onChange(item);
  }, [item, onChange]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _RadioButtonDefault.default.root
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "radio-".concat(elementId, "-input"),
    "aria-describedby": "radio-".concat(elementId, "-description"),
    className: _RadioButtonDefault.default.input,
    name: name,
    type: "checkbox",
    disabled: disabled,
    checked: checked,
    onFocus: onFocus,
    onChange: handleChange
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: _RadioButtonDefault.default.radio
  }), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", {
    className: _shared.default.titleWrapper
  }, /*#__PURE__*/_react.default.createElement("label", {
    className: _shared.default.title,
    htmlFor: "radio-".concat(elementId, "-input")
  }, label))));
}