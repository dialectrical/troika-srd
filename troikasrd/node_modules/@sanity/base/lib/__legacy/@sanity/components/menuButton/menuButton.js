"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuButton = void 0;

var _ui = require("@sanity/ui");

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _popover = require("part:@sanity/components/popover");

var _react = _interopRequireWildcard(require("react"));

var _hooks = require("../hooks");

var _excluded = ["children", "onClose"],
    _excluded2 = ["boundaryElement", "buttonContainerClassName", "buttonProps", "children", "menu", "open", "placement", "portal", "setOpen"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var MenuButtonChildren = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  var children = props.children,
      onClose = props.onClose,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useLayer = (0, _ui.useLayer)(),
      isTopLayer = _useLayer.isTopLayer;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      rootElement = _useState2[0],
      setRootElement = _useState2[1];

  var setRef = (0, _react.useCallback)(el => {
    setRootElement(el);
    if (typeof ref === 'function') ref(el);else if (ref) ref.current = el;
  }, [ref]);
  (0, _hooks.useClickOutside)((0, _react.useCallback)(() => {
    if (!isTopLayer) return;
    onClose();
  }, [isTopLayer, onClose]), [rootElement]);
  (0, _react.useEffect)(() => {
    if (!isTopLayer) return undefined;

    var handleGlobalKeyDown = event => {
      if (event.key === 'Escape') {
        event.stopPropagation();
        onClose();
      }
    };

    window.addEventListener('keydown', handleGlobalKeyDown);
    return () => {
      window.removeEventListener('keydown', handleGlobalKeyDown);
    };
  }, [isTopLayer, onClose]);
  return /*#__PURE__*/_react.default.createElement("div", _extends({}, restProps, {
    ref: setRef
  }), children);
});
MenuButtonChildren.displayName = 'MenuButtonChildren';
var MenuButton = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  var boundaryElement = props.boundaryElement,
      buttonContainerClassName = props.buttonContainerClassName,
      buttonProps = props.buttonProps,
      children = props.children,
      menu = props.menu,
      open = props.open,
      placement = props.placement,
      portal = props.portal,
      setOpen = props.setOpen,
      restProps = _objectWithoutProperties(props, _excluded2);

  var handleClose = (0, _react.useCallback)(() => setOpen(false), [setOpen]);
  var handleButtonClick = (0, _react.useCallback)(() => setOpen(!open), [open, setOpen]);
  return /*#__PURE__*/_react.default.createElement("div", _extends({}, restProps, {
    ref: ref
  }), /*#__PURE__*/_react.default.createElement(_popover.Popover, {
    boundaryElement: boundaryElement,
    content: /*#__PURE__*/_react.default.createElement(MenuButtonChildren, {
      onClose: handleClose
    }, menu),
    open: open,
    placement: placement,
    layer: portal,
    portal: portal
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: buttonContainerClassName
  }, /*#__PURE__*/_react.default.createElement(_default.default, _extends({}, buttonProps, {
    onClick: handleButtonClick
  }), children))));
});
exports.MenuButton = MenuButton;
MenuButton.displayName = 'MenuButton';