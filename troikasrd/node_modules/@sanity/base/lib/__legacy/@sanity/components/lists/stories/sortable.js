"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SortableStory = SortableStory;

var _range2 = _interopRequireDefault(require("lodash/range"));

var _react = _interopRequireDefault(require("react"));

var _sortable = require("part:@sanity/components/lists/sortable");

var _reactSortableHoc = require("react-sortable-hoc");

var _chance = _interopRequireDefault(require("chance"));

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var chance = new _chance.default();
var defaultItems = (0, _range2.default)(100).map((_, i) => {
  return {
    key: "".concat(i),
    title: chance.name()
  };
});

function SortableStory() {
  return /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/lists/sortable",
    propTables: [_sortable.List]
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      padding: '2em',
      maxWidth: 350,
      margin: 'auto'
    }
  }, /*#__PURE__*/_react.default.createElement(SortableTester, {
    items: defaultItems
  })));
}

class SortableTester extends _react.default.PureComponent {
  constructor(props) {
    super(props);

    _defineProperty(this, "handleOnSort", _ref => {
      var oldIndex = _ref.oldIndex,
          newIndex = _ref.newIndex;
      var items = this.state.items;
      this.setState({
        items: (0, _reactSortableHoc.arrayMove)(items, oldIndex, newIndex)
      });
      if (this.props.onSort) this.props.onSort({
        oldIndex,
        newIndex
      });
    });

    this.state = {
      items: this.props.items.slice()
    };
  }

  render() {
    var items = this.state.items;
    return /*#__PURE__*/_react.default.createElement(_sortable.List, {
      onSortEnd: this.handleOnSort
    }, items.map((item, index) => /*#__PURE__*/_react.default.createElement(_sortable.Item, {
      index: index,
      key: item.key
    }, /*#__PURE__*/_react.default.createElement("div", {
      style: {
        background: 'var(--card-bg-color)',
        padding: '1em',
        display: 'flex',
        alignItems: 'center',
        boxShadow: '0 0 0 1px var(--card-hairline-soft-color)'
      }
    }, /*#__PURE__*/_react.default.createElement(_sortable.DragHandle, {
      style: {
        fontSize: 25,
        marginRight: 16
      }
    }), /*#__PURE__*/_react.default.createElement("div", {
      style: {
        flex: 1,
        marginTop: -1
      }
    }, item.title)))));
  }

}