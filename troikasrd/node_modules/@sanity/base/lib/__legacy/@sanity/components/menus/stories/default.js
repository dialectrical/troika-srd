"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultStory = DefaultStory;

var _range2 = _interopRequireDefault(require("lodash/range"));

var _chance = _interopRequireDefault(require("chance"));

var _react = _interopRequireDefault(require("react"));

var _sanityLogoIcon = _interopRequireDefault(require("part:@sanity/base/sanity-logo-icon"));

var _default = _interopRequireDefault(require("part:@sanity/components/menus/default"));

var _storybook = require("part:@sanity/storybook");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _components = require("part:@sanity/storybook/components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @todo: remove the following line when part imports has been removed from this file
///<reference types="@sanity/types/parts" />
var chance = new _chance.default();

function DefaultStory() {
  var icon = (0, _knobs.boolean)('icons', false) ? _sanityLogoIcon.default : false;
  var items = (0, _range2.default)((0, _knobs.number)('#items', 30)).map((item, i) => {
    return {
      title: chance.name(),
      icon: icon || undefined,
      key: String(i)
    };
  });
  var scrollStyle = {
    width: '70vw',
    height: '70vh',
    border: '1px dotted #ccc',
    position: 'relative',
    overflow: 'scroll'
  };
  return /*#__PURE__*/_react.default.createElement(_components.DebugRouterProvider, null, /*#__PURE__*/_react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/menus/default",
    propTables: [_default.default]
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: (0, _knobs.boolean)('is inside scroll', false) ? scrollStyle : {}
  }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_default.default, {
    onAction: (0, _storybook.action)('onAction'),
    onClose: (0, _storybook.action)('onClose') // onClickOutside={action('prop:onClickOutside')}
    ,
    items: items
  })))));
}