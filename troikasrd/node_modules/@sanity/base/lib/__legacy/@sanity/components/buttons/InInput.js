"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _omit3 = _interopRequireDefault(require("lodash/omit"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _inInputStyle = _interopRequireDefault(require("part:@sanity/components/buttons/in-input-style"));

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

var _excluded = ["kind", "inverted", "colored", "icon", "loading", "className"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// @todo: refactor to functional component
class InInputButton extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleClick", event => {
      if (this.props.onClick) this.props.onClick(event);
    });
  }

  render() {
    var _omit2 = (0, _omit3.default)(this.props, 'onAction'),
        kind = _omit2.kind,
        inverted = _omit2.inverted,
        colored = _omit2.colored,
        icon = _omit2.icon,
        loading = _omit2.loading,
        classNameProp = _omit2.className,
        restProps = _objectWithoutProperties(_omit2, _excluded);

    var Icon = icon;

    if (kind && !_inInputStyle.default[kind]) {
      // eslint-disable-next-line no-console
      console.warn("There is no ".concat(kind, " button"));
    }

    var className = (0, _classnames.default)(classNameProp, inverted && _inInputStyle.default.inverted, kind && _inInputStyle.default[kind], colored && _inInputStyle.default.colored, Icon && _inInputStyle.default.hasIcon);
    return /*#__PURE__*/_react.default.createElement("button", _extends({}, restProps, {
      className: className,
      type: "button",
      onClick: this.handleClick
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: _inInputStyle.default.content
    }, loading && /*#__PURE__*/_react.default.createElement(_spinner.default, null), Icon && /*#__PURE__*/_react.default.createElement("span", {
      className: _inInputStyle.default.iconContainer
    }, /*#__PURE__*/_react.default.createElement(Icon, {
      className: _inInputStyle.default.icon
    })), /*#__PURE__*/_react.default.createElement("span", {
      className: _inInputStyle.default.text
    }, this.props.children)));
  }

}

exports.default = InInputButton;