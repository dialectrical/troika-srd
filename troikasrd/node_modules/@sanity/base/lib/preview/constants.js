"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INSUFFICIENT_PERMISSIONS_FALLBACK = exports.INVALID_PREVIEW_FALLBACK = exports.InsufficientPermissionsError = exports.INCLUDE_FIELDS = exports.INCLUDE_FIELDS_QUERY = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var INCLUDE_FIELDS_QUERY = ['_id', '_rev', '_type'];
exports.INCLUDE_FIELDS_QUERY = INCLUDE_FIELDS_QUERY;
var INCLUDE_FIELDS = [...INCLUDE_FIELDS_QUERY, '_key']; // NOTE: have to use color inherit to make it work correctly with the
// `isSelected` state in the list pane

exports.INCLUDE_FIELDS = INCLUDE_FIELDS;
var IconSizer = (0, _styledComponents.default)(_ui.Text)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  color: inherit;\n"])));

function IconWrapper(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/_react.default.createElement(_ui.Flex, null, /*#__PURE__*/_react.default.createElement(IconSizer, {
    size: 3
  }, children));
}

class InsufficientPermissionsError extends Error {}

exports.InsufficientPermissionsError = InsufficientPermissionsError;
var INVALID_PREVIEW_FALLBACK = {
  // The `<small>` element is used for more compatibility
  // with the different downstream preview components.
  title: /*#__PURE__*/_react.default.createElement("small", null, "Invalid preview config"),
  subtitle: /*#__PURE__*/_react.default.createElement("small", null, "Check the error log in the console"),
  media: /*#__PURE__*/_react.default.createElement(IconWrapper, null, /*#__PURE__*/_react.default.createElement(_icons.WarningOutlineIcon, null)),
  _internalMeta: {
    type: 'invalid_preview'
  }
};
exports.INVALID_PREVIEW_FALLBACK = INVALID_PREVIEW_FALLBACK;
var INSUFFICIENT_PERMISSIONS_FALLBACK = {
  // The `<small>` element is used for more compatibility
  // with the different downstream preview components.
  title: /*#__PURE__*/_react.default.createElement("small", null, "Insufficient permissions to access this reference"),
  media: /*#__PURE__*/_react.default.createElement(IconWrapper, null, /*#__PURE__*/_react.default.createElement(_icons.AccessDeniedIcon, null)),
  _internalMeta: {
    type: 'insufficient_permissions'
  }
};
exports.INSUFFICIENT_PERMISSIONS_FALLBACK = INSUFFICIENT_PERMISSIONS_FALLBACK;