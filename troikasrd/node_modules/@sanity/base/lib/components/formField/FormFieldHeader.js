"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormFieldHeader = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _presence = require("../../presence");

var _FormFieldHeaderText = require("./FormFieldHeaderText");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable camelcase */
var FormFieldHeader = /*#__PURE__*/(0, _react.memo)(function FormFieldHeader(props) {
  var markers = props.__unstable_markers,
      presence = props.__unstable_presence,
      description = props.description,
      inputId = props.inputId,
      title = props.title;
  return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "flex-end"
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingY: 2
  }, /*#__PURE__*/_react.default.createElement(_FormFieldHeaderText.FormFieldHeaderText, {
    __unstable_markers: markers,
    description: description,
    inputId: inputId,
    title: title
  })), presence && presence.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_presence.FieldPresence, {
    maxAvatars: 4,
    presence: presence
  })));
});
exports.FormFieldHeader = FormFieldHeader;