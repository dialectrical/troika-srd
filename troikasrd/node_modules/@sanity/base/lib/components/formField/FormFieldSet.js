"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormFieldSet = void 0;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _changeIndicators = require("../../change-indicators");

var _presence = require("../../presence");

var _FormFieldValidationStatus = require("./FormFieldValidationStatus");

var _FormFieldSetLegend = require("./FormFieldSetLegend");

var _helpers = require("./helpers");

var _styles = require("./styles");

var _excluded = ["__unstable_changeIndicator", "__unstable_markers", "__unstable_presence", "children", "collapsed", "collapsible", "columns", "description", "level", "onFocus", "onToggle", "tabIndex", "title"];

var _templateObject, _templateObject2;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function getChildren(children) {
  return typeof children === 'function' ? children() : children;
}

var Root = (0, _styledComponents.default)(_ui.Box).attrs({
  forwardedAs: 'fieldset'
})(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  border: none;\n\n  /* See: https://thatemil.com/blog/2015/01/03/reset-your-fieldset/ */\n  body:not(:-moz-handler-blocked) & {\n    display: table-cell;\n  }\n"])));
var Content = (0, _styledComponents.default)(_ui.Box)(props => {
  var $borderLeft = props.$borderLeft,
      theme = props.theme;
  var _theme$sanity = theme.sanity,
      focusRing = _theme$sanity.focusRing,
      radius = _theme$sanity.radius;
  var base = theme.sanity.color.base;
  return (0, _styledComponents.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    outline: none;\n    border-left: ", ";\n    border-radius: ", ";\n\n    &:focus {\n      box-shadow: ", ";\n    }\n\n    &:focus:not(:focus-visible) {\n      box-shadow: none;\n    }\n  "])), $borderLeft ? '1px solid var(--card-border-color)' : undefined, (0, _ui.rem)(radius[1]), (0, _styles.focusRingStyle)({
    base,
    focusRing: _objectSpread(_objectSpread({}, focusRing), {}, {
      offset: 2
    })
  }));
});
var EMPTY_ARRAY = [];
var FormFieldSet = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  var _props$__unstable_cha = props.__unstable_changeIndicator,
      changeIndicator = _props$__unstable_cha === void 0 ? false : _props$__unstable_cha,
      _props$__unstable_mar = props.__unstable_markers,
      markers = _props$__unstable_mar === void 0 ? EMPTY_ARRAY : _props$__unstable_mar,
      _props$__unstable_pre = props.__unstable_presence,
      presence = _props$__unstable_pre === void 0 ? EMPTY_ARRAY : _props$__unstable_pre,
      children = props.children,
      _props$collapsed = props.collapsed,
      collapsedProp = _props$collapsed === void 0 ? false : _props$collapsed,
      collapsible = props.collapsible,
      columns = props.columns,
      description = props.description,
      _props$level = props.level,
      level = _props$level === void 0 ? 0 : _props$level,
      onFocus = props.onFocus,
      onToggle = props.onToggle,
      tabIndex = props.tabIndex,
      title = props.title,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useState = (0, _react.useState)(collapsedProp),
      _useState2 = _slicedToArray(_useState, 2),
      collapsed = _useState2[0],
      setCollapsed = _useState2[1];

  var validation = (0, _helpers.markersToValidationList)(markers);
  var hasValidations = validation.length > 0;
  var forwardedRef = (0, _ui.useForwardedRef)(ref);
  var handleToggleCollapse = (0, _react.useCallback)(() => {
    setCollapsed(!collapsed);
    if (onToggle) onToggle(!collapsed);
  }, [collapsed, onToggle]);
  var handleFocus = (0, _react.useCallback)(event => {
    var element = forwardedRef.current;

    if (element === event.target) {
      if (onFocus) onFocus(event);
    }
  }, [forwardedRef, onFocus]);
  var content = (0, _react.useMemo)(() => {
    if (collapsed) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement(_ui.Grid, {
      columns: columns,
      gapX: 4,
      gapY: 5
    }, changeIndicator ? /*#__PURE__*/_react.default.createElement(_changeIndicators.ChangeIndicator, changeIndicator === true ? {} : changeIndicator, getChildren(children)) : getChildren(children));
  }, [changeIndicator, children, collapsed, columns]);
  (0, _react.useEffect)(() => {
    setCollapsed(collapsedProp);
  }, [collapsedProp]);
  return /*#__PURE__*/_react.default.createElement(Root, _extends({
    "data-level": level
  }, restProps), title && /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "flex-end"
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingY: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, null, /*#__PURE__*/_react.default.createElement(_FormFieldSetLegend.FormFieldSetLegend, {
    collapsed: collapsed,
    collapsible: collapsible,
    onClick: collapsible ? handleToggleCollapse : undefined,
    title: title
  }), hasValidations && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginLeft: 2
  }, /*#__PURE__*/_react.default.createElement(_FormFieldValidationStatus.FormFieldValidationStatus, {
    fontSize: 1,
    __unstable_markers: markers
  }))), description && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1
  }, description))), presence.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_presence.FieldPresence, {
    maxAvatars: 4,
    presence: presence
  }))), /*#__PURE__*/_react.default.createElement(Content, {
    $borderLeft: level > 0,
    hidden: collapsed,
    marginTop: 1,
    paddingLeft: level === 0 ? 0 : 3,
    onFocus: typeof tabIndex === 'number' && tabIndex > -1 ? handleFocus : undefined,
    ref: forwardedRef,
    tabIndex: tabIndex
  }, !collapsed && content));
});
exports.FormFieldSet = FormFieldSet;
FormFieldSet.displayName = 'FormFieldSet';