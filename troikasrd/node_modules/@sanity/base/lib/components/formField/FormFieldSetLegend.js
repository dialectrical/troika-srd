"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormFieldSetLegend = void 0;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@sanity/icons");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styles = require("./styles");

var _templateObject, _templateObject2, _templateObject3;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Root = _styledComponents.default.legend(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  /* See: https://thatemil.com/blog/2015/01/03/reset-your-fieldset/ */\n  padding: 0;\n  display: table;\n"])));

var ToggleButton = (0, _styledComponents.default)(_ui.Flex).attrs({
  forwardedAs: 'button'
})(props => {
  var theme = props.theme;
  var _theme$sanity = theme.sanity,
      focusRing = _theme$sanity.focusRing,
      radius = _theme$sanity.radius;
  var base = theme.sanity.color.base;
  return (0, _styledComponents.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    appearance: none;\n    border: 0;\n    background: none;\n    color: inherit;\n    -webkit-font-smoothing: inherit;\n    font: inherit;\n    outline: none;\n    border-radius: ", ";\n\n    &:not([hidden]) {\n      display: flex;\n    }\n\n    &:focus {\n      box-shadow: ", ";\n    }\n\n    &:focus:not(:focus-visible) {\n      box-shadow: none;\n    }\n  "])), (0, _ui.rem)(radius[1]), (0, _styles.focusRingStyle)({
    base,
    focusRing
  }));
});
var ToggleIconBox = (0, _styledComponents.default)(_ui.Box)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  width: 9px;\n  height: 9px;\n  margin-right: 3px;\n\n  & svg {\n    transition: transform 100ms;\n  }\n"])));
var FormFieldSetLegend = /*#__PURE__*/(0, _react.memo)(function FormFieldSetLegend(props) {
  var collapsed = props.collapsed,
      collapsible = props.collapsible,
      onClick = props.onClick,
      title = props.title;

  var text = /*#__PURE__*/_react.default.createElement(_ui.Text, {
    weight: "semibold",
    size: 1
  }, title || /*#__PURE__*/_react.default.createElement("em", null, "Untitled"));

  if (!collapsible) {
    return /*#__PURE__*/_react.default.createElement(Root, null, text);
  }

  return /*#__PURE__*/_react.default.createElement(Root, null, /*#__PURE__*/_react.default.createElement(ToggleButton, {
    type: "button",
    onClick: onClick
  }, /*#__PURE__*/_react.default.createElement(ToggleIconBox, null, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1
  }, /*#__PURE__*/_react.default.createElement(_icons.ToggleArrowRightIcon, {
    style: {
      transform: "rotate(".concat(collapsed ? '0' : '90deg', ") translate3d(0, 0, 0)")
    }
  }))), text));
});
exports.FormFieldSetLegend = FormFieldSetLegend;