"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GlobalStyle = void 0;

var _styledComponents = require("styled-components");

var _sanityCssCustomProperties = _interopRequireDefault(require("sanity:css-custom-properties"));

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var GlobalStyle = (0, _styledComponents.createGlobalStyle)(_ref => {
  var theme = _ref.theme;
  var color = theme.sanity.color.base;
  var font = theme.sanity.fonts.text;
  return (0, _styledComponents.css)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    html,\n    #sanityBody,\n    #sanity {\n      height: 100%;\n    }\n\n    html {\n      background-color: ", ";\n    }\n\n    ::selection {\n      background: ", ";\n    }\n\n    #sanityBody {\n      background-color: ", ";\n      color: ", ";\n      font-family: ", ";\n      font-size: 100%;\n      line-height: ", ";\n      -webkit-font-smoothing: antialiased;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      margin: 0;\n    }\n  "])), color.bg, _sanityCssCustomProperties.default['--text-selection-color'], color.bg, color.fg, font.family, font.sizes[2].lineHeight / font.sizes[2].fontSize);
});
exports.GlobalStyle = GlobalStyle;