"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unstable_useCanCreateAnyOf = unstable_useCanCreateAnyOf;
exports.unstable_useCheckDocumentPermission = unstable_useCheckDocumentPermission;

var _operators = require("rxjs/operators");

var _shallowEquals = _interopRequireDefault(require("shallow-equals"));

var _rxjs = require("rxjs");

var _reactRx = require("react-rx");

var _highlevel = require("./highlevel");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var INITIAL = {
  granted: true,
  reason: '<pending>'
}; // eslint-disable-next-line camelcase

function unstable_useCanCreateAnyOf(typeNames) {
  // eslint-disable-next-line react-hooks/rules-of-hooks
  return (0, _reactRx.useObservable)( // eslint-disable-next-line react-hooks/rules-of-hooks
  (0, _reactRx.useAsObservable)(typeNames, (0, _rxjs.pipe)((0, _operators.distinctUntilChanged)(_shallowEquals.default), (0, _operators.debounceTime)(10), (0, _operators.switchMap)(() => (0, _highlevel.canCreateAnyOf)(typeNames)))), INITIAL);
} // eslint-disable-next-line camelcase


function unstable_useCheckDocumentPermission(id, type, permission) {
  // eslint-disable-next-line react-hooks/rules-of-hooks
  return (0, _reactRx.useObservable)( // eslint-disable-next-line react-hooks/rules-of-hooks
  (0, _reactRx.useAsObservable)([id, type, permission], (0, _rxjs.pipe)((0, _operators.distinctUntilChanged)(_shallowEquals.default), (0, _operators.debounceTime)(10), // eslint-disable-next-line no-shadow
  (0, _operators.switchMap)(_ref => {
    var _ref2 = _slicedToArray(_ref, 3),
        id = _ref2[0],
        type = _ref2[1],
        permission = _ref2[2];

    if (permission === 'update') {
      return (0, _highlevel.canUpdate)(id, type);
    }

    if (permission === 'create') {
      return (0, _highlevel.canCreateType)(id, type);
    }

    if (permission === 'publish') {
      return (0, _highlevel.canPublish)(id, type);
    }

    if (permission === 'delete') {
      return (0, _highlevel.canDelete)(id, type);
    }

    if (permission === 'unpublish') {
      return (0, _highlevel.canUnpublish)(id, type);
    }

    if (permission === 'discardDraft') {
      return (0, _highlevel.canDiscardDraft)(id, type);
    }

    throw new Error("Unknown permission: \"".concat(permission, "\""));
  }))), INITIAL);
}