"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rxjs = require("rxjs");

var tryParse = (val, defValue) => {
  try {
    return JSON.parse(val);
  } catch (err) {
    // eslint-disable-next-line no-console
    console.warn("Failed to parse settings: ".concat(err.message));
    return defValue;
  }
};

var get = (key, defValue) => {
  var val = localStorage.getItem(key);
  return (0, _rxjs.of)(val === null ? defValue : tryParse(val, defValue));
};

var set = (key, nextValue) => {
  // Can't stringify undefined, and nulls are what
  // `getItem` returns when key does not exist
  if (typeof nextValue === 'undefined' || nextValue === null) {
    localStorage.removeItem(key);
  } else {
    localStorage.setItem(key, JSON.stringify(nextValue));
  }

  return (0, _rxjs.of)(nextValue);
};

var _default = {
  get,
  set
};
exports.default = _default;