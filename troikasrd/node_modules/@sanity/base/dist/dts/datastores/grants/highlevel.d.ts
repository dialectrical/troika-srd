export declare function canCreateType(id: string, typeName: string): import("rxjs").Observable<import("./types").PermissionCheckResult>;
export declare function canCreateAnyOf(types: string[]): import("rxjs").Observable<{
    granted: boolean;
    reason: string;
}>;
export declare function canUpdate(id: string, typeName: string): import("rxjs").Observable<import("./types").PermissionCheckResult>;
export declare function canDelete(id: string, typeName: string): import("rxjs").Observable<import("./types").PermissionCheckResult>;
export declare function canPublish(id: string, typeName: string): import("rxjs").Observable<import("./types").PermissionCheckResult>;
export declare function canUnpublish(id: string, typeName: string): import("rxjs").Observable<import("./types").PermissionCheckResult>;
export declare function canDiscardDraft(id: string, typeName: string): import("rxjs").Observable<import("./types").PermissionCheckResult>;
//# sourceMappingURL=highlevel.d.ts.map