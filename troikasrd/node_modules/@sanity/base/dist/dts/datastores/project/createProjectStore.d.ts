export function AccessDeniedError(message: any): void;
export class AccessDeniedError {
    constructor(message: any);
    name: string;
    message: any;
}
export function NotFoundError(message: any): void;
export class NotFoundError {
    constructor(message: any);
    name: string;
    message: any;
}
export function UnknownApiError(error: any): void;
export class UnknownApiError {
    constructor(error: any);
    name: string;
    message: any;
    code: any;
    details: any;
}
export default function createProjectsStore(options?: {}): {
    actions: {};
    currentProject: Observable<any>;
    errors: {
        AccessDeniedError: typeof AccessDeniedError;
        NotFoundError: typeof NotFoundError;
        UnknownApiError: typeof UnknownApiError;
    };
};
import { Observable } from "rxjs";
//# sourceMappingURL=createProjectStore.d.ts.map