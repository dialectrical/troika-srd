import { Observable, OperatorFunction } from 'rxjs';
export declare type LoadableState<T> = LoadingState | LoadedState<T> | ErrorState;
export interface LoadingState {
    value: undefined;
    error: undefined;
    isLoading: true;
}
export interface LoadedState<T> {
    value: T;
    error: undefined;
    isLoading: false;
}
export interface ErrorState {
    value: undefined;
    error: Error;
    isLoading: false;
}
export declare function useLoadable<T>(observable$: Observable<T>): LoadableState<T | undefined>;
export declare function useLoadable<T>(observable$: Observable<T>, initialValue: T): LoadableState<T>;
export declare function asLoadable<T>(): OperatorFunction<T, LoadableState<T>>;
//# sourceMappingURL=useLoadable.d.ts.map