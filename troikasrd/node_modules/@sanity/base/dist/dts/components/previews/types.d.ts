/// <reference types="react" />
import { SchemaType, ImageUrlFitMode } from '@sanity/types';
export declare type Id = string;
export declare type Reference = {
    _ref: string;
    [key: string]: unknown;
};
export declare type Document = {
    _id: string;
    [key: string]: unknown;
};
export declare type Value = Document | Reference | unknown;
export declare type FieldName = string;
export declare type Path = FieldName[];
export declare type Selection = [Id, FieldName[]];
export { PrepareViewOptions } from '@sanity/types';
export { SortOrdering } from '@sanity/types';
export declare type PreviewConfig = {
    select: {
        title: string;
        subtitle: string;
        description: string;
    };
};
export declare type Type = SchemaType;
export declare type PreviewLayoutKey = 'default' | 'card' | 'media' | 'detail' | 'inline' | 'block';
export declare type MediaDimensions = {
    width?: number;
    height?: number;
    fit?: ImageUrlFitMode;
    aspect?: number;
};
export interface PreviewProps<LayoutKey = PreviewLayoutKey> {
    children?: React.ReactNode;
    description?: React.ReactNode | React.ComponentType<{
        layout: LayoutKey;
    }>;
    extendedPreview?: unknown;
    isPlaceholder?: boolean;
    media?: React.ReactNode | React.FC<{
        dimensions: MediaDimensions;
        layout: LayoutKey;
    }>;
    progress?: number;
    status?: React.ReactNode | React.FC<{
        layout: LayoutKey;
    }>;
    subtitle?: React.ReactNode | React.FC<{
        layout: LayoutKey;
    }>;
    title?: React.ReactNode | React.FC<{
        layout: LayoutKey;
    }>;
}
export declare type PreviewComponent = React.ComponentType<PreviewProps>;
//# sourceMappingURL=types.d.ts.map