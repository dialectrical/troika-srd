import React from 'react';
export interface IntentResolverProps {
    params: {
        type: string;
        id: string;
        [key: string]: unknown;
    };
    payload: unknown;
}
/**
 *
 * This is a *very naive* implementation of an intent resolver:
 * - If type is missing from params, it'll try to resolve from document
 * - It manually builds a pane segment path: "<typeName>;<documentId>"
 * - Tries to resolve that to a structure
 * - Checks if the last pane segment is an editor, and if so; is it the right type/id?
 *   - Yes: Resolves to "<typeName>;<documentId>"
 *   - No : Resolves to fallback edit pane (context-less)
 */
export declare const IntentResolver: React.NamedExoticComponent<IntentResolverProps>;
//# sourceMappingURL=IntentResolver.d.ts.map