import { MenuItemGroup } from '@sanity/base/__legacy/@sanity/components';
import React from 'react';
import { Path } from '@sanity/types';
import { Doc, DocumentView } from '../types';
interface DocumentPanelProps {
    activeViewId: string;
    documentId: string;
    documentType: string;
    draft: Doc | null;
    idPrefix: string;
    initialValue: Doc;
    isClosable: boolean;
    isCollapsed: boolean;
    isHistoryOpen: boolean;
    isTimelineOpen: boolean;
    markers: any;
    menuItemGroups: MenuItemGroup[];
    onChange: (patches: any[]) => void;
    formInputFocusPath: Path;
    onFormInputFocus: (focusPath: Path) => void;
    onCloseView: () => void;
    onCollapse?: () => void;
    onExpand?: () => void;
    onSetActiveView: (id: string | null) => void;
    onSplitPane: () => void;
    onTimelineOpen: () => void;
    paneTitle?: string;
    published: Doc | null;
    rootElement: HTMLDivElement | null;
    schemaType: any;
    timelineMode: 'rev' | 'since' | 'closed';
    toggleInspect: (val: boolean) => void;
    value: any;
    compareValue: any;
    versionSelectRef: React.MutableRefObject<HTMLDivElement | null>;
    views: DocumentView[];
}
export declare function DocumentPanel(props: DocumentPanelProps): JSX.Element;
export {};
//# sourceMappingURL=documentPanel.d.ts.map