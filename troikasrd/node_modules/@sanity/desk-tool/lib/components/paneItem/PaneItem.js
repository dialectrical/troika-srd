"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PaneItem;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));

var _preview = require("part:@sanity/base/preview");

var _DocumentPaneItemPreview = require("../../components/DocumentPaneItemPreview");

var _getIconWithFallback = _interopRequireDefault(require("../../utils/getIconWithFallback"));

var _MissingSchemaType = require("../../components/MissingSchemaType");

var _PaneRouterContext = require("../../contexts/PaneRouterContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

PaneItem.propTypes = {
  id: _propTypes.default.string.isRequired,
  layout: _propTypes.default.string,
  isSelected: _propTypes.default.bool,
  isActive: _propTypes.default.bool,
  icon: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
  value: _propTypes.default.shape({
    _id: _propTypes.default.string,
    _type: _propTypes.default.string,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    media: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func])
  }),
  schemaType: _propTypes.default.shape({
    name: _propTypes.default.string,
    icon: _propTypes.default.func
  })
};
PaneItem.defaultProps = {
  layout: 'default',
  icon: undefined,
  value: null,
  isSelected: false,
  isActive: false,
  schemaType: null
};

function PaneItem(props) {
  var id = props.id,
      isSelected = props.isSelected,
      schemaType = props.schemaType,
      layout = props.layout,
      icon = props.icon,
      value = props.value,
      isActive = props.isActive;

  var _useContext = (0, _react.useContext)(_PaneRouterContext.PaneRouterContext),
      ChildLink = _useContext.ChildLink;

  var hasSchemaType = Boolean(schemaType && schemaType.name && _schema.default.get(schemaType.name));
  var preview = (0, _react.useMemo)(() => {
    if (value && value._id) {
      if (!hasSchemaType) {
        return /*#__PURE__*/_react.default.createElement(_MissingSchemaType.MissingSchemaType, {
          value: value
        });
      }

      return /*#__PURE__*/_react.default.createElement(_DocumentPaneItemPreview.DocumentPaneItemPreview, {
        icon: (0, _getIconWithFallback.default)(icon, schemaType, _icons.DocumentIcon),
        layout: layout,
        schemaType: schemaType,
        value: value
      });
    }

    return /*#__PURE__*/_react.default.createElement(_preview.SanityDefaultPreview, {
      status: /*#__PURE__*/_react.default.createElement(_ui.Text, {
        muted: true,
        size: 1
      }, /*#__PURE__*/_react.default.createElement(_icons.ChevronRightIcon, null)),
      icon: (0, _getIconWithFallback.default)(icon, schemaType, _icons.FolderIcon),
      layout: layout,
      value: value
    });
  }, [hasSchemaType, icon, layout, schemaType, value]);
  var LinkComponent = (0, _react.useMemo)(() =>
  /*#__PURE__*/
  // eslint-disable-next-line no-shadow
  (0, _react.forwardRef)(function LinkComponent(linkProps, ref) {
    return /*#__PURE__*/_react.default.createElement(ChildLink, _extends({}, linkProps, {
      childId: id,
      ref: ref
    }));
  }), [ChildLink, id]);
  return (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement(_ui.Card, {
    __unstable_focusRing: true,
    as: LinkComponent,
    "data-as": "a",
    "data-ui": "PaneItem",
    padding: 2,
    radius: 2,
    pressed: !isActive && isSelected,
    selected: isActive && isSelected
  }, preview), [isActive, isSelected, LinkComponent, preview]);
}