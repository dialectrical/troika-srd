"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolveDocumentActions;

var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));

var _documentActionUtils = require("part:@sanity/base/util/document-action-utils");

var _defaultDocumentActions = require("./defaultDocumentActions");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @todo: remove the following line when part imports has been removed from this file
///<reference types="@sanity/types/parts" />
// NOTE: this is a small utility function to avoid having to _cast_ the
// filtered array below to `DocumentActionComponent[]`.
function isDocumentAction(value) {
  return value !== false;
} // todo: this should be replaced with the defaultResolveDocumentActions function from ./defaultDocumentActions eventually,
// it is kept here for now to preserve backwards compatibility with __experimental_actions


function resolveDocumentActions(props) {
  var schemaType = _schema.default.get(props.type);

  return [(0, _documentActionUtils.isActionEnabled)(schemaType, 'publish') && _defaultDocumentActions.PublishAction, (0, _documentActionUtils.isActionEnabled)(schemaType, 'delete') && _defaultDocumentActions.DiscardChangesAction, (0, _documentActionUtils.isActionEnabled)(schemaType, 'delete') && _defaultDocumentActions.UnpublishAction, (0, _documentActionUtils.isActionEnabled)(schemaType, 'create') && _defaultDocumentActions.DuplicateAction, (0, _documentActionUtils.isActionEnabled)(schemaType, 'delete') && _defaultDocumentActions.DeleteAction].filter(isDocumentAction);
}