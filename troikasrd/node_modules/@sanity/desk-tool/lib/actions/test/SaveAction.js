"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SaveAction = void 0;

var _reactHooks = require("@sanity/react-hooks");

var _react = require("react");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var SaveAction = _ref => {
  var id = _ref.id,
      type = _ref.type,
      onComplete = _ref.onComplete;

  var _useDocumentOperation = (0, _reactHooks.useDocumentOperation)(id, type),
      commit = _useDocumentOperation.commit;

  var handle = (0, _react.useCallback)( /*#__PURE__*/_asyncToGenerator(function* () {
    yield commit.execute();
    onComplete();
  }), [commit, onComplete]);
  return {
    disabled: Boolean(commit.disabled),
    label: 'Save',
    onHandle: handle
  };
};

exports.SaveAction = SaveAction;