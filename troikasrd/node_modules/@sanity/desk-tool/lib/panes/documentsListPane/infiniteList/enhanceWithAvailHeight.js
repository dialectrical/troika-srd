"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = enhanceWithAvailHeight;

var _react = _interopRequireDefault(require("react"));

var _elementResizeDetector = _interopRequireDefault(require("element-resize-detector"));

var _enhanceWithAvailableHeight = _interopRequireDefault(require("./enhanceWithAvailableHeight.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function enhanceWithAvailHeight(Component) {
  var _class, _temp;

  return _temp = _class = class enhancedWithAvailHeight extends _react.default.PureComponent {
    constructor() {
      super();

      _defineProperty(this, "state", {});

      _defineProperty(this, "setContainer", el => {
        if (el) {
          this.setup(el);
        }
      });

      _defineProperty(this, "handleResize", () => {
        this.setState({
          height: this._element.offsetHeight
        });
      });

      this.erd = (0, _elementResizeDetector.default)({
        strategy: 'scroll'
      });
    }

    componentWillUnmount() {
      this.teardown(this._element);
    }

    setup(el) {
      if (this._element) {
        this.teardown(this._element);
      }

      this.erd.listenTo(el, this.handleResize);
      this._element = el;
    }

    teardown(el) {
      this.erd.removeAllListeners(el);
      this.erd.uninstall(el);
      this._element = null;
    }

    render() {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: _enhanceWithAvailableHeight.default.root,
        ref: this.setContainer
      }, /*#__PURE__*/_react.default.createElement(Component, _extends({}, this.props, this.state)));
    }

  }, _defineProperty(_class, "displayName", "enhanceWithAvailHeight(".concat(Component.displayName || Component.name, ")")), _temp;
}