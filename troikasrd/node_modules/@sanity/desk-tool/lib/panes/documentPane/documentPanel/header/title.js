"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentHeaderTitle = DocumentHeaderTitle;

var React = _interopRequireWildcard(require("react"));

var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));

var _preview = require("part:@sanity/base/preview");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// @todo: remove the following line when part imports has been removed from this file
///<reference types="@sanity/types/parts" />
function DocumentHeaderTitle(_ref) {
  var documentType = _ref.documentType,
      paneTitle = _ref.paneTitle,
      value = _ref.value;

  var type = _schema.default.get(documentType);

  if (paneTitle) {
    return /*#__PURE__*/React.createElement("span", null, paneTitle);
  }

  if (!value) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, "New ", (type === null || type === void 0 ? void 0 : type.title) || (type === null || type === void 0 ? void 0 : type.name));
  }

  return /*#__PURE__*/React.createElement(_preview.PreviewFields, {
    document: value,
    type: type,
    fields: ['title']
  }, _ref2 => {
    var title = _ref2.title;
    return title ? /*#__PURE__*/React.createElement("span", null, title) : /*#__PURE__*/React.createElement("em", null, "Untitled");
  });
}

DocumentHeaderTitle.defaultProps = {
  paneTitle: undefined
};