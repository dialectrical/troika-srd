"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReviewChangesButton = void 0;

var _icons = require("@sanity/icons");

var _reactHooks = require("@sanity/react-hooks");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _documentHistory = require("../../documentHistory");

var _reviewChangesButton = require("./reviewChangesButton.styled");

var _excluded = ["lastUpdatedTimeAgo"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ReviewChangesButton = /*#__PURE__*/(0, _react.forwardRef)(function ReviewChangesButton(props, ref) {
  var lastUpdatedTimeAgo = props.lastUpdatedTimeAgo,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useDocumentHistory = (0, _documentHistory.useDocumentHistory)(),
      closeReviewChanges = _useDocumentHistory.close,
      historyController = _useDocumentHistory.historyController,
      openReviewChanges = _useDocumentHistory.open,
      timeline = _useDocumentHistory.timeline;

  var open = historyController.changesPanelActive();
  var syncState = (0, _reactHooks.useSyncState)(timeline === null || timeline === void 0 ? void 0 : timeline.publishedId);
  var syncing = syncState.isSyncing;
  return /*#__PURE__*/_react.default.createElement(_reviewChangesButton.Root, _extends({}, restProps, {
    mode: "ghost",
    onClick: open ? closeReviewChanges : openReviewChanges,
    padding: 3,
    ref: ref,
    selected: open,
    title: "Review changes",
    tone: "caution"
  }), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginRight: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, syncing ? /*#__PURE__*/_react.default.createElement(_icons.SyncIcon, {
    "data-icon-enabled": "",
    "data-spin": ""
  }) : /*#__PURE__*/_react.default.createElement(_icons.EditIcon, {
    "data-icon-enabled": ""
  }), /*#__PURE__*/_react.default.createElement(_icons.RestoreIcon, {
    "data-icon-hovered": ""
  }))), /*#__PURE__*/_react.default.createElement(_reviewChangesButton.TextBox, {
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 0,
    weight: "semibold"
  }, "Changed"), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 0
  }, lastUpdatedTimeAgo || /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "\xA0"))))));
});
exports.ReviewChangesButton = ReviewChangesButton;