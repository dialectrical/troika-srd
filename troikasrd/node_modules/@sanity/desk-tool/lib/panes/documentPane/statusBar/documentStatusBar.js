"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentStatusBar = DocumentStatusBar;

var _react = _interopRequireDefault(require("react"));

var _reactHooks = require("@sanity/react-hooks");

var _resolver = _interopRequireDefault(require("part:@sanity/base/document-badges/resolver"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ui = require("@sanity/ui");

var _documentHistory = require("../documentHistory");

var _documentStatusBarActions = require("./documentStatusBarActions");

var _documentSparkline = require("./sparkline/documentSparkline");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var DocumentActionsBox = (0, _styledComponents.default)(_ui.Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  min-width: 10em;\n  max-width: 16em;\n"])));

function DocumentStatusBar(props) {
  var _historyController$re;

  var actionsBoxRef = props.actionsBoxRef,
      id = props.id,
      lastUpdated = props.lastUpdated,
      type = props.type;

  var _useDocumentHistory = (0, _documentHistory.useDocumentHistory)(),
      historyController = _useDocumentHistory.historyController;

  var editState = (0, _reactHooks.useEditState)(id, type);
  var badges = editState ? (0, _resolver.default)(editState) : [];
  var showingRevision = historyController.onOlderRevision();
  var revision = ((_historyController$re = historyController.revTime) === null || _historyController$re === void 0 ? void 0 : _historyController$re.id) || '';
  return /*#__PURE__*/_react.default.createElement(_ui.Card, {
    paddingLeft: 3,
    paddingRight: [3, 4],
    paddingY: [3, 3]
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: [1, 2]
  }, /*#__PURE__*/_react.default.createElement(_documentSparkline.DocumentSparkline, {
    badges: badges,
    editState: editState,
    lastUpdated: lastUpdated
  })), /*#__PURE__*/_react.default.createElement(DocumentActionsBox, {
    flex: 1,
    marginLeft: [1, 3],
    ref: actionsBoxRef
  }, showingRevision ? /*#__PURE__*/_react.default.createElement(_documentStatusBarActions.HistoryStatusBarActions, {
    id: id,
    type: type,
    revision: revision
  }) : /*#__PURE__*/_react.default.createElement(_documentStatusBarActions.DocumentStatusBarActions, {
    id: id,
    type: type
  }))));
}