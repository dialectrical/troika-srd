"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PublishStatus = PublishStatus;

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _iconBadge = require("./iconBadge");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Root = (0, _styledComponents.default)(_ui.Flex)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  cursor: default;\n"])));

function PublishStatus(props) {
  var disabled = props.disabled,
      lastPublishedTimeAgo = props.lastPublishedTimeAgo,
      lastUpdated = props.lastUpdated,
      lastUpdatedTimeAgo = props.lastUpdatedTimeAgo,
      liveEdit = props.liveEdit;
  return /*#__PURE__*/_react.default.createElement(Root, {
    align: "center",
    "data-ui": "SessionLayout",
    padding: 2,
    sizing: "border"
  }, liveEdit && /*#__PURE__*/_react.default.createElement(_iconBadge.IconBadge, {
    disabled: disabled,
    icon: _icons.PlayIcon,
    tone: "critical"
  }), !liveEdit && /*#__PURE__*/_react.default.createElement(_iconBadge.IconBadge, {
    disabled: disabled,
    icon: _icons.PublishIcon,
    tone: "positive"
  }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    marginLeft: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 0,
    weight: "semibold"
  }, "Published"), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 0
  }, liveEdit && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, lastUpdated ? lastUpdatedTimeAgo : lastPublishedTimeAgo), !liveEdit && lastPublishedTimeAgo))));
}