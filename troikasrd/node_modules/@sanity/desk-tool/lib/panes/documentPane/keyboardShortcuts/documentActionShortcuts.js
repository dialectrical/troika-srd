"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentActionShortcuts = void 0;

var _components = require("@sanity/base/components");

var _reactHooks = require("@sanity/react-hooks");

var _utils = require("part:@sanity/base/actions/utils");

var _resolver = _interopRequireDefault(require("part:@sanity/base/document-actions/resolver"));

var _isHotkey = _interopRequireDefault(require("is-hotkey"));

var _react = _interopRequireWildcard(require("react"));

var _statusBar = require("../statusBar");

var _excluded = ["actionsBoxElement", "activeIndex", "children", "onActionStart", "onKeyDown", "rootRef", "states"],
    _excluded2 = ["actionsBoxElement", "id", "type", "children"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function KeyboardShortcutResponder(props) {
  var actionsBoxElement = props.actionsBoxElement,
      activeIndex = props.activeIndex,
      children = props.children,
      onActionStart = props.onActionStart,
      onKeyDown = props.onKeyDown,
      rootRef = props.rootRef,
      states = props.states,
      rest = _objectWithoutProperties(props, _excluded);

  var activeAction = states[activeIndex];
  var handleKeyDown = (0, _react.useCallback)(event => {
    var matchingStates = states.filter(state => state.shortcut && (0, _isHotkey.default)(state.shortcut, event));
    var matchingState = matchingStates[0];

    if (matchingStates.length > 1) {
      // eslint-disable-next-line no-console
      console.warn("Keyboard shortcut conflict: More than one document action matches the shortcut \"".concat(matchingState.shortcut, "\""));
    }

    if (matchingState && !matchingState.disabled && matchingState.onHandle) {
      event.preventDefault();
      matchingState.onHandle();
      onActionStart(states.indexOf(matchingState));
      return;
    }

    if (onKeyDown) {
      onKeyDown(event);
    }
  }, [onActionStart, onKeyDown, states]);
  return /*#__PURE__*/_react.default.createElement("div", _extends({
    onKeyDown: handleKeyDown,
    tabIndex: -1
  }, rest, {
    ref: rootRef
  }), children, activeAction && activeAction.dialog && /*#__PURE__*/_react.default.createElement(_components.LegacyLayerProvider, {
    zOffset: "paneFooter"
  }, /*#__PURE__*/_react.default.createElement(_statusBar.ActionStateDialog, {
    dialog: activeAction.dialog,
    referenceElement: actionsBoxElement
  })));
}

var DocumentActionShortcuts = /*#__PURE__*/_react.default.memo(props => {
  var actionsBoxElement = props.actionsBoxElement,
      id = props.id,
      type = props.type,
      children = props.children,
      rest = _objectWithoutProperties(props, _excluded2);

  var editState = (0, _reactHooks.useEditState)(id, type);

  var _useState = (0, _react.useState)(-1),
      _useState2 = _slicedToArray(_useState, 2),
      activeIndex = _useState2[0],
      setActiveIndex = _useState2[1];

  var actions = editState ? (0, _resolver.default)(editState) : null;
  var onActionStart = (0, _react.useCallback)(idx => {
    setActiveIndex(idx);
  }, []);
  return actions ? /*#__PURE__*/_react.default.createElement(_utils.RenderActionCollectionState, _extends({
    actions: actions,
    actionsBoxElement: actionsBoxElement,
    actionProps: editState,
    component: KeyboardShortcutResponder,
    onActionStart: onActionStart,
    activeIndex: activeIndex
  }, rest), children) : null;
});

exports.DocumentActionShortcuts = DocumentActionShortcuts;
DocumentActionShortcuts.displayName = 'DocumentActionShortcuts';