"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pathSegmentOfCorrectType = exports.isSubpathOf = exports.flattenChangeNode = exports.isAddedAction = void 0;

var _paths = require("../../paths");

var isAddedAction = change => {
  return change.type === 'field' && change.diff.action === 'added';
};

exports.isAddedAction = isAddedAction;

var flattenChangeNode = changeNode => {
  if (changeNode.type !== 'group') {
    return [changeNode];
  }

  var newSubChanges = [];
  changeNode.changes.forEach(cChange => {
    newSubChanges.push(...flattenChangeNode(cChange));
  });
  return newSubChanges;
};
/**
 * Checks whether a path is under another path within the tree.
 */


exports.flattenChangeNode = flattenChangeNode;

var isSubpathOf = (subPath, parentPath) => {
  if (parentPath.length >= subPath.length) {
    return false;
  }

  for (var i = 0; i < parentPath.length; i++) {
    if (parentPath[i] !== subPath[i]) {
      return false;
    }
  }

  return true;
};

exports.isSubpathOf = isSubpathOf;

var pathSegmentOfCorrectType = (item, child) => {
  var nextItem = item[child];
  var key = (0, _paths.getItemKey)(nextItem);

  if (key) {
    return {
      _key: key
    };
  }

  var isArray = Array.isArray(item);

  if (isArray) {
    return parseInt(child, 10);
  }

  return child;
};

exports.pathSegmentOfCorrectType = pathSegmentOfCorrectType;