"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DiffErrorBoundary = void 0;

var React = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class DiffErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      error: undefined
    };
  }

  static getDerivedStateFromError(error) {
    return {
      error
    };
  } // eslint-disable-next-line class-methods-use-this


  componentDidCatch(error) {
    /* eslint-disable no-console */
    console.error('Error rendering diff component: ');
    console.error(error);
    /* eslint-enable no-console */
  }

  render() {
    var isDev = __DEV__ === true;
    var error = this.state.error;

    if (!error) {
      return this.props.children;
    }

    var help = isDev ? /*#__PURE__*/React.createElement("p", null, "Check the developer console for more information.") : null;
    return /*#__PURE__*/React.createElement(_ui.Card, {
      tone: "critical",
      padding: 3,
      paddingBottom: 0
    }, /*#__PURE__*/React.createElement(_ui.Flex, {
      align: "flex-start"
    }, /*#__PURE__*/React.createElement(_ui.Box, null, /*#__PURE__*/React.createElement(_ui.Text, null, /*#__PURE__*/React.createElement(_icons.ErrorOutlineIcon, null))), /*#__PURE__*/React.createElement(_ui.Box, {
      paddingLeft: 3
    }, /*#__PURE__*/React.createElement(_ui.Text, {
      size: 1,
      as: "p"
    }, "The component responsible for showing the changes to this field has crashed."), help && /*#__PURE__*/React.createElement(_ui.Text, {
      size: 1,
      as: "p"
    }, help))));
  }

}

exports.DiffErrorBoundary = DiffErrorBoundary;