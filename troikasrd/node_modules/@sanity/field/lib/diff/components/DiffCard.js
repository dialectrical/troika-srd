"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DiffCard = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _diff = require("../../diff");

var _annotations = require("../annotations");

var _DiffTooltip = require("./DiffTooltip");

var _excluded = ["diff", "path"],
    _excluded2 = ["annotation", "as", "children", "className", "disableHoverEffect", "style", "tooltip"];

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var StyledCard = (0, _styledComponents.default)(_ui.Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  --diffcard-radius: ", ";\n  --diffcard-background: ", ";\n\n  max-width: 100%;\n  position: relative;\n  border-radius: var(--diffcard-radius);\n\n  &:not(del) {\n    text-decoration: none;\n  }\n\n  &[data-hover] {\n    &::after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n\n    &:hover {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n\n      &::after {\n        bottom: -3px;\n        border-top: 1px solid var(---diffcard-background);\n        border-bottom: 2px solid currentColor;\n        border-bottom-left-radius: var(--diffcard-radius);\n        border-bottom-right-radius: var(--diffcard-radius);\n      }\n    }\n\n    [data-from-to-layout]:hover & {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n\n      &::after {\n        bottom: -3px;\n        border-top: 1px solid var(---diffcard-background);\n        border-bottom: 2px solid currentColor;\n        border-bottom-left-radius: var(--diffcard-radius);\n        border-bottom-right-radius: var(--diffcard-radius);\n      }\n    }\n  }\n"])), _ref => {
  var theme = _ref.theme;
  return (0, _ui.rem)(theme.sanity.radius[2]);
}, _ref2 => {
  var theme = _ref2.theme;
  return theme.sanity.color.card.enabled.bg;
});
var DiffCard = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  if (!props.diff) {
    return /*#__PURE__*/_react.default.createElement(DiffCardWithAnnotation, _extends({}, props, {
      ref: ref
    }));
  }

  var diff = props.diff,
      _props$path = props.path,
      path = _props$path === void 0 ? [] : _props$path,
      restProps = _objectWithoutProperties(props, _excluded);

  var annotation = (0, _diff.getAnnotationAtPath)(diff, path);
  return /*#__PURE__*/_react.default.createElement(DiffCardWithAnnotation, _extends({}, restProps, {
    annotation: annotation,
    ref: ref
  }));
});
exports.DiffCard = DiffCard;
DiffCard.displayName = 'DiffCard';
var DiffCardWithAnnotation = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  var annotation = props.annotation,
      _props$as = props.as,
      as = _props$as === void 0 ? 'div' : _props$as,
      children = props.children,
      className = props.className,
      disableHoverEffect = props.disableHoverEffect,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      tooltip = props.tooltip,
      restProps = _objectWithoutProperties(props, _excluded2);

  var color = (0, _annotations.useAnnotationColor)(annotation);

  var elementProps = _objectSpread(_objectSpread({}, restProps), {}, {
    className,
    'data-hover': disableHoverEffect || !annotation ? undefined : '',
    ref,
    as
  });

  var element = /*#__PURE__*/_react.default.createElement(StyledCard, _extends({
    radius: 1,
    style: _objectSpread(_objectSpread({}, style), {}, {
      backgroundColor: color.background,
      color: color.text
    })
  }, elementProps), children);

  if (tooltip && annotation) {
    return /*#__PURE__*/_react.default.createElement(_DiffTooltip.DiffTooltip, {
      annotations: [annotation],
      description: tooltip && typeof tooltip === 'object' && tooltip.description
    }, element);
  }

  return element;
});
DiffCardWithAnnotation.displayName = 'DiffCardWithAnnotation';