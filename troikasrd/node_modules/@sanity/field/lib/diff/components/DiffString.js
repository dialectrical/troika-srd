"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DiffStringSegment = DiffStringSegment;
exports.DiffString = DiffString;

var _ui = require("@sanity/ui");

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _DiffCard = require("./DiffCard");

var _templateObject, _templateObject2;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var RoundedCard = _styledComponents.default.span(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  border-radius: ", ";\n"])), _ref => {
  var theme = _ref.theme;
  return (0, _ui.rem)(theme.sanity.radius[1]);
});

var ChangeSegment = (0, _styledComponents.default)(_ui.Text)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  &:not([hidden]) {\n    display: inline;\n    line-height: calc(1.25em + 2px);\n  }\n\n  &:hover {\n    background-color: none !important;\n    background-image: linear-gradient(\n      to bottom,\n      var(--card-bg-color) 0,\n      var(--card-bg-color) 33.333%,\n      currentColor 33.333%,\n      currentColor 100%\n    );\n    background-size: 1px 3px;\n    background-repeat: repeat-x;\n    background-position-y: bottom;\n    padding-bottom: 3px;\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n    z-index: 1;\n  }\n"])));

function DiffStringSegment(_ref2) {
  var segment = _ref2.segment;
  var text = segment.text;

  if (segment.action === 'added') {
    return /*#__PURE__*/React.createElement(_DiffCard.DiffCard, {
      annotation: segment.annotation,
      disableHoverEffect: true,
      tooltip: {
        description: 'Added'
      },
      as: RoundedCard
    }, /*#__PURE__*/React.createElement(ChangeSegment, {
      as: "ins",
      style: {
        textDecoration: 'none'
      }
    }, text));
  }

  if (segment.action === 'removed') {
    return /*#__PURE__*/React.createElement(_DiffCard.DiffCard, {
      annotation: segment.annotation,
      as: RoundedCard,
      disableHoverEffect: true,
      tooltip: {
        description: 'Removed'
      }
    }, /*#__PURE__*/React.createElement(ChangeSegment, {
      as: "del"
    }, text));
  }

  return /*#__PURE__*/React.createElement(_ui.Card, {
    as: "span",
    radius: 2,
    style: {
      display: 'inline'
    }
  }, text);
}

function DiffString(_ref3) {
  var diff = _ref3.diff;
  return /*#__PURE__*/React.createElement(React.Fragment, null, (diff.segments || []).map((segment, segmentIndex) => /*#__PURE__*/React.createElement(DiffStringSegment // eslint-disable-next-line react/no-array-index-key
  , {
    key: segmentIndex,
    segment: segment
  })));
}