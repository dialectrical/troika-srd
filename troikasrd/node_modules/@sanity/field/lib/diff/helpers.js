"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getChangeVerb = getChangeVerb;
exports.noop = noop;
exports.isFieldChange = isFieldChange;
exports.isGroupChange = isGroupChange;
exports.isAddedItemDiff = isAddedItemDiff;
exports.isRemovedItemDiff = isRemovedItemDiff;
exports.isUnchangedDiff = isUnchangedDiff;

function getChangeVerb(diff) {
  var hadPrevValue = hasValue(diff.fromValue);
  var hasNextValue = hasValue(diff.toValue);

  if (!hadPrevValue && hasNextValue) {
    return 'Added';
  }

  if (!hasNextValue && hadPrevValue) {
    return 'Removed';
  }

  return 'Changed';
} // eslint-disable-next-line @typescript-eslint/no-empty-function


function noop() {}

function isFieldChange(change) {
  return change.type === 'field';
}

function isGroupChange(change) {
  return change.type === 'group';
}

function isAddedItemDiff(item) {
  return item.diff.action === 'added';
}

function isRemovedItemDiff(item) {
  return item.diff.action === 'removed';
}

function isUnchangedDiff(diff) {
  return diff.action === 'unchanged';
}

function hasValue(value) {
  return value !== null && typeof value !== 'undefined' && value !== '';
}