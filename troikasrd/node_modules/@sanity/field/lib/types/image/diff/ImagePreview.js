"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImagePreview = ImagePreview;
exports.NoImagePreview = void 0;

var _react = _interopRequireDefault(require("react"));

var _hooks = require("@sanity/base/hooks");

var _assetUtils = require("@sanity/asset-utils");

var _imageUrl = _interopRequireDefault(require("@sanity/image-url"));

var _imageIcon = _interopRequireDefault(require("part:@sanity/base/image-icon"));

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _color = require("@sanity/color");

var _versionedClient = require("../../../versionedClient");

var _diff = require("../../../diff");

var _helpers = require("./helpers");

var _HotspotCropSVG = require("./HotspotCropSVG");

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var ASSET_FIELDS = ['originalFilename'];
var imageBuilder = (0, _imageUrl.default)(_versionedClient.versionedClient); // To trigger error state, change `src` attribute to random string ("foo")
// To trigger slow loading, use a throttling proxy (charles) or browser devtools
// To trigger deleted state, set `id` to valid, non-existant image asset ID,
// eg: 'image-1217bc35db5030739b7be571c79d3c401551911d-300x200-png'

var NoImagePreview = () => /*#__PURE__*/_react.default.createElement(_ui.Card, {
  flex: 1,
  tone: "transparent",
  padding: 4,
  radius: 2,
  height: "stretch"
}, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
  align: "center",
  justify: "center",
  height: "fill"
}, /*#__PURE__*/_react.default.createElement(_ui.Text, {
  size: 1,
  muted: true
}, "(no image)")));

exports.NoImagePreview = NoImagePreview;

var ImageWrapper = _styledComponents.default.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  height: 100%;\n  max-height: 190px;\n  position: relative;\n\n  /* Ideally the checkerboard component currently in the form builder should be made available and used here */\n  background-color: ", ";\n  background-image: linear-gradient(45deg, ", " 25%, transparent 25%),\n    linear-gradient(-45deg, ", " 25%, transparent 25%),\n    linear-gradient(45deg, transparent 75%, ", " 75%),\n    linear-gradient(-45deg, transparent 75%, ", " 75%);\n  background-size: 16px 16px;\n  background-position: 0 0, 0 8px, 8px -8px, -8px 0;\n\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    box-shadow: inset 0 0 0 1px var(--card-border-color);\n    pointer-events: none;\n  }\n\n  &[data-changed] {\n    opacity: 0.45;\n  }\n"])), _color.hues.gray[100].hex, _color.hues.gray[50].hex, _color.hues.gray[50].hex, _color.hues.gray[50].hex, _color.hues.gray[50].hex);

var Image = _styledComponents.default.img(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  display: block;\n  flex: 1;\n  min-height: 0;\n  object-fit: contain;\n  width: 100%;\n  height: 100%;\n\n  &[data-action='removed'] {\n    opacity: 0.45;\n  }\n"])));

var HotspotDiff = _styledComponents.default.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  svg {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n"])));

function ImagePreview(props) {
  var _diff$fromValue, _diff$fromValue$asset, _diff$toValue, _diff$toValue$asset;

  var id = props.id,
      action = props.action,
      diff = props.diff,
      hotspot = props.hotspot,
      crop = props.crop,
      is = props.is;

  var _React$useState = _react.default.useState(),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      imageError = _React$useState2[0],
      setImageError = _React$useState2[1];

  var _useDocumentValues = (0, _hooks.useDocumentValues)(id, ASSET_FIELDS),
      asset = _useDocumentValues.value;

  var dimensions = (0, _assetUtils.getImageDimensions)(id); // undefined = still loading, null = its gone

  var assetIsDeleted = asset === null;
  var title = asset && asset.originalFilename || 'Untitled';
  var imageSource = imageBuilder.image(id).height(190) // Should match container max-height
  .dpr((0, _helpers.getDeviceDpr)()).fit('max');
  var assetChanged = ((_diff$fromValue = diff.fromValue) === null || _diff$fromValue === void 0 ? void 0 : (_diff$fromValue$asset = _diff$fromValue.asset) === null || _diff$fromValue$asset === void 0 ? void 0 : _diff$fromValue$asset._ref) !== ((_diff$toValue = diff.toValue) === null || _diff$toValue === void 0 ? void 0 : (_diff$toValue$asset = _diff$toValue.asset) === null || _diff$toValue$asset === void 0 ? void 0 : _diff$toValue$asset._ref);
  var metaAction = action === 'changed' ? undefined : action;
  return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    direction: "column",
    height: "fill",
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    padding: 2,
    paddingBottom: 0
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    as: ImageWrapper,
    direction: "column",
    "data-changed": is === 'from' && assetChanged ? '' : undefined,
    "data-error": imageError ? '' : undefined
  }, !assetIsDeleted && !imageError && /*#__PURE__*/_react.default.createElement(Image, {
    src: imageSource.toString() || '',
    alt: title,
    "data-action": metaAction,
    onError: setImageError,
    width: dimensions.width,
    height: dimensions.height
  }), (assetIsDeleted || imageError) && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    paddingY: 5
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    muted: true,
    align: "center"
  }, assetIsDeleted ? 'Image is deleted' : 'Error loading image')), /*#__PURE__*/_react.default.createElement(HotspotDiff, null, /*#__PURE__*/_react.default.createElement(_HotspotCropSVG.HotspotCropSVG, {
    crop: crop && !(0, _assetUtils.isDefaultCrop)(crop) ? crop : undefined,
    diff: diff,
    hash: (0, _helpers.simpleHash)("".concat(imageSource.toString() || '', "-").concat(is)),
    hotspot: hotspot && !(0, _assetUtils.isDefaultHotspot)(hotspot) ? hotspot : undefined,
    width: dimensions.width,
    height: dimensions.height
  })))), /*#__PURE__*/_react.default.createElement(_diff.MetaInfo, {
    title: title,
    icon: _imageIcon.default,
    markRemoved: assetChanged && is === 'from'
  }, metaAction ? /*#__PURE__*/_react.default.createElement("div", null, metaAction) : /*#__PURE__*/_react.default.createElement("div", null, dimensions.width, " \xD7 ", dimensions.height)));
}