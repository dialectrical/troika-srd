"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Annotation = Annotation;

var _ui = require("@sanity/ui");

var _paths = require("@sanity/util/paths");

var _types = require("@sanity/types");

var _react = _interopRequireWildcard(require("react"));

var _changeIndicators = require("@sanity/base/change-indicators");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _icons = require("@sanity/icons");

var _diff = require("../../../../diff");

var _helpers = require("../helpers");

var _styledComponents2 = require("./styledComponents");

var _excluded = ["children", "diff", "object", "schemaType", "path"],
    _excluded2 = ["diff", "children", "object", "schemaType", "path"];

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var AnnotationWrapper = _styledComponents.default.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  text-decoration: none;\n  display: inline;\n  position: relative;\n  border: 0;\n  padding: 0;\n  border-bottom: 2px dotted currentColor;\n  box-shadow: inset 0 0 0 1px var(--card-border-color);\n  white-space: nowrap;\n  align-items: center;\n  background-color: color(var(--card-fg-color) a(10%));\n\n  &[data-changed] {\n    cursor: pointer;\n  }\n\n  &[data-removed] {\n    text-decoration: line-through;\n  }\n\n  &:hover ", " {\n    opacity: 1;\n  }\n"])), _styledComponents2.PreviewContainer);

function Annotation(_ref) {
  var children = _ref.children,
      diff = _ref.diff,
      object = _ref.object,
      schemaType = _ref.schemaType,
      path = _ref.path,
      restProps = _objectWithoutProperties(_ref, _excluded);

  if (!schemaType) {
    return /*#__PURE__*/_react.default.createElement(AnnotationWrapper, restProps, "Unknown schema type");
  }

  if (diff && diff.action !== 'unchanged') {
    return /*#__PURE__*/_react.default.createElement(AnnnotationWithDiff, _extends({}, restProps, {
      diff: diff,
      object: object,
      schemaType: schemaType,
      path: path
    }), children);
  }

  return /*#__PURE__*/_react.default.createElement(AnnotationWrapper, null, children);
}

function AnnnotationWithDiff(_ref2) {
  var diff = _ref2.diff,
      children = _ref2.children,
      object = _ref2.object,
      schemaType = _ref2.schemaType,
      path = _ref2.path,
      restProps = _objectWithoutProperties(_ref2, _excluded2);

  var _React$useContext = _react.default.useContext(_changeIndicators.ConnectorContext),
      onSetFocus = _React$useContext.onSetFocus;

  var _React$useContext2 = _react.default.useContext(_diff.DiffContext),
      fullPath = _React$useContext2.path;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      popoverElement = _useState2[0],
      setPopoverElement = _useState2[1];

  var color = (0, _diff.useDiffAnnotationColor)(diff, []);
  var style = color ? {
    background: color.background,
    color: color.text
  } : {};
  var isRemoved = diff.action === 'removed';

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      open = _useState4[0],
      setOpen = _useState4[1];

  var emptyObject = object && (0, _helpers.isEmptyObject)(object);
  var markDefPath = [path[0]].concat(['markDefs', {
    _key: object._key
  }]);
  var prefix = fullPath.slice(0, fullPath.findIndex(seg => (0, _types.isKeySegment)(seg) && seg._key === object._key));
  var annotationPath = prefix.concat(path);
  var myPath = prefix.concat(markDefPath);
  var myValue = "field-".concat((0, _paths.toString)(myPath));
  var values = (0, _changeIndicators.useReportedValues)();
  var isEditing = values.filter(_ref3 => {
    var _ref4 = _slicedToArray(_ref3, 1),
        p = _ref4[0];

    return p.startsWith(myValue);
  }).length > 0;
  (0, _react.useEffect)(() => {
    if (!open && isEditing) {
      setOpen(true);
      onSetFocus(myPath);
    }
  }, [isEditing, open]);
  var handleOpenPopup = (0, _react.useCallback)(event => {
    event.stopPropagation();
    setOpen(true);

    if (!isRemoved) {
      event.preventDefault();
      onSetFocus(annotationPath); // Go to span first

      setTimeout(() => onSetFocus(myPath), 10); // Open edit object interface
    }
  }, [annotationPath]);
  var handleClickOutside = (0, _react.useCallback)(() => {
    if (!isEditing) {
      setOpen(false);
    }
  }, [isEditing]);
  (0, _ui.useClickOutside)(handleClickOutside, [popoverElement]);
  var annotation = diff.action !== 'unchanged' && diff.annotation || null;
  var annotations = annotation ? [annotation] : [];

  var popoverContent = /*#__PURE__*/_react.default.createElement(_diff.DiffContext.Provider, {
    value: {
      path: myPath
    }
  }, /*#__PURE__*/_react.default.createElement(_styledComponents2.PopoverContainer, {
    padding: 3
  }, /*#__PURE__*/_react.default.createElement("div", null, emptyObject && /*#__PURE__*/_react.default.createElement(_ui.Label, {
    size: 1,
    muted: true
  }, "Empty ", schemaType.title), !emptyObject && /*#__PURE__*/_react.default.createElement(_diff.ChangeList, {
    diff: diff,
    schemaType: schemaType
  }))));

  return /*#__PURE__*/_react.default.createElement(AnnotationWrapper, _extends({}, restProps, {
    onClick: handleOpenPopup,
    style: style,
    "data-changed": "",
    "data-removed": diff.action === 'removed' ? '' : undefined
  }), /*#__PURE__*/_react.default.createElement(_ui.Popover, {
    content: popoverContent,
    open: open,
    ref: setPopoverElement,
    portal: true
  }, /*#__PURE__*/_react.default.createElement(_styledComponents2.PreviewContainer, {
    paddingLeft: 1
  }, /*#__PURE__*/_react.default.createElement(_diff.DiffTooltip, {
    annotations: annotations,
    description: "".concat(diff.action, " annotation")
  }, /*#__PURE__*/_react.default.createElement(_styledComponents2.InlineBox, {
    style: {
      display: 'inline-flex'
    }
  }, /*#__PURE__*/_react.default.createElement("span", null, children), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    paddingX: 1
  }, /*#__PURE__*/_react.default.createElement(_styledComponents2.InlineText, {
    size: 0
  }, /*#__PURE__*/_react.default.createElement(_icons.ChevronDownIcon, null))))))));
}