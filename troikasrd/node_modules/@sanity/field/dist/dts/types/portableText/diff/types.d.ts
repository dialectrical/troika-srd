import { ObjectDiff } from '../../../diff';
import { SchemaType, ObjectSchemaType } from '../../../types';
export declare type PortableTextBlock = {
    _key: string;
    _type: string;
    children: PortableTextChild[];
    markDefs?: {
        _key: string;
        _type: string;
    }[];
    style?: string;
};
export declare type PortableTextChild = {
    _key: string;
    _type: string;
    marks?: string[];
    text?: string;
};
export declare type SpanTypeSchema = SchemaType & {
    decorators?: {
        title: string;
        value: string;
    }[];
    annotations?: ObjectSchemaType[];
};
export declare type PortableTextDiff = ObjectDiff & {
    displayValue: PortableTextBlock;
    origin: ObjectDiff;
};
export declare type MarkSymbolMap = Record<string, string[]>;
export declare type InlineSymbolMap = Record<string, string>;
//# sourceMappingURL=types.d.ts.map