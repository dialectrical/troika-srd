"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _request = _interopRequireDefault(require("../util/request"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Yeah, inheritance and all that. Deal with it.
class LoadingContainer extends _react.default.PureComponent {
  constructor() {
    super();

    if (!this.getSubscriptions) {
      throw new Error("".concat(this.constructor.name, " extended LoadingContainer but did not define a getSubscriptions() method"));
    }

    this.subscriptions = [];
    this.state = {};
  }

  componentDidMount() {
    var subs = this.getSubscriptions();
    var stateKeys = this.stateKeys = Object.keys(subs);
    this.subscriptions = stateKeys.reduce((target, key) => {
      target.push((0, _request.default)(this, subs[key], key));
      return target;
    }, []);
  }

  hasAllData() {
    return this.stateKeys && this.stateKeys.every(key => this.state[key] !== undefined);
  }

  componentWillUnmount() {
    while (this.subscriptions.length) {
      this.subscriptions.pop().unsubscribe();
    }
  }

}

LoadingContainer.contextTypes = {
  client: _propTypes.default.shape({
    fetch: _propTypes.default.func
  }).isRequired
};
var _default = LoadingContainer;
exports.default = _default;