"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function QueryErrorDetails(props) {
  var details = _objectSpread(_objectSpread({}, props.error.details), mapToLegacyDetails(props.error.details));

  if (!details.line) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("pre", null, /*#__PURE__*/_react.default.createElement("code", null, "".concat(details.line, "\n").concat(dashLine(details.column, details.columnEnd)))), /*#__PURE__*/_react.default.createElement("pre", null, /*#__PURE__*/_react.default.createElement("code", null, "Line:   ".concat(details.lineNumber, "\nColumn: ").concat(details.column))));
}

function mapToLegacyDetails(details) {
  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {
    return {};
  }

  var query = details.query,
      start = details.start,
      end = details.end;
  var lineStart = query.slice(0, start).lastIndexOf('\n') + 1;
  var lineNumber = (query.slice(0, lineStart).match(/\n/g) || []).length;
  var line = query.slice(lineStart, query.indexOf('\n', lineStart));
  var column = start - lineStart;
  var columnEnd = typeof end === 'number' ? end - lineStart : undefined;
  return {
    line,
    lineNumber,
    column,
    columnEnd
  };
}

function dashLine(column, columnEnd) {
  var line = '-'.repeat(column);
  var hats = "^".repeat(columnEnd ? columnEnd - column : 1);
  return "".concat(line).concat(hats);
}

QueryErrorDetails.propTypes = {
  error: _propTypes.default.shape({
    details: _propTypes.default.shape({
      line: _propTypes.default.string,
      lineNumber: _propTypes.default.number,
      column: _propTypes.default.number,
      start: _propTypes.default.number,
      end: _propTypes.default.number,
      query: _propTypes.default.string
    })
  })
};
var _default = QueryErrorDetails;
exports.default = _default;