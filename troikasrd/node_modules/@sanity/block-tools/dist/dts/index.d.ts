import _normalizeBlock from './util/normalizeBlock';
import _randomKey from './util/randomKey';
/**
 * BlockTools - various tools for Sanity block content
 *
 * @param {Object} blockContentType
 *    The compiled schema for the block content type to work with
 *
 */
declare const blockContentFunctions: {
    /**
     * Convert HTML to blocks respecting the block content type's schema
     *
     * @param {String} html
     *
     * @param {Object} options
     *   @property {Object} blockContentType
     *      A compiled version of the schema type for the block content
     *   @property {Array} rules
     *      Optional rules working on the HTML (will be ruled first)
     *   @property {Function} parseHtml
     *      API compatible model as returned from DOMParser for using server side.
     * @returns {Array} Blocks
     */
    htmlToBlocks(html: any, blockContentType: any, options?: {}): any;
    /**
     * Returns the feature-set of a compiled block content type.
     *
     * @param {Object} blockContentType
     * @returns {Object} The feature-set
     */
    getBlockContentFeatures(blockContentType: any): {
        styles: any;
        decorators: any;
        annotations: any;
        lists: any;
        types: {
            block: any;
            span: any;
            inlineObjects: any;
            blockObjects: any;
        };
    };
    randomKey(length: any): string;
};
export default blockContentFunctions;
export declare const EDITOR_DEFAULT_BLOCK_TYPE: Readonly<{
    object: string;
    type: string;
    data: {
        style: string;
    };
}>;
export declare const htmlToBlocks: (html: any, blockContentType: any, options?: {}) => any;
export declare const getBlockContentFeatures: (blockContentType: any) => {
    styles: any;
    decorators: any;
    annotations: any;
    lists: any;
    types: {
        block: any;
        span: any;
        inlineObjects: any;
        blockObjects: any;
    };
};
export declare const normalizeBlock: typeof _normalizeBlock;
export declare const randomKey: typeof _randomKey;
//# sourceMappingURL=index.d.ts.map