import { createClient } from './createClient';
import { createConnect } from './createConnect';
import { timeoutFirstWith } from './operators';
import { shareReplay, takeUntil } from 'rxjs/operators';
import { throwError, fromEvent } from 'rxjs';
var connect = createConnect(function (url, protocols) {
    return new window.WebSocket(url, protocols);
});
var id = function (arg) { return arg; };
export function fromUrl(url, options) {
    if (options === void 0) { options = {}; }
    return createClient(connect(url).pipe(options.timeout
        ? timeoutFirstWith(options.timeout, throwError(new Error("Timeout after " + options.timeout + " while establishing WebSockets connection")))
        : id, shareReplay({ refCount: true }), takeUntil(fromEvent(window, 'beforeunload'))));
}
export function fromSanityClient(client) {
    var dataset = client.config().dataset;
    return fromUrl(client.getUrl("/socket/" + dataset).replace(/^http/, 'ws'));
}
