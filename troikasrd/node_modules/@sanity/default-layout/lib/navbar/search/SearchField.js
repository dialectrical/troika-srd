"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _searchIcon = _interopRequireDefault(require("part:@sanity/base/search-icon"));

var _hotkeys = _interopRequireDefault(require("part:@sanity/components/typography/hotkeys"));

var _ui = require("@sanity/ui");

var _components = require("@sanity/base/components");

var _SearchField = _interopRequireDefault(require("./SearchField.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class SearchField extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "inputElement", null);

    _defineProperty(this, "setInputElement", ref => {
      this.inputElement = ref;
    });
  }

  render() {
    var _this$props = this.props,
        hotkeys = _this$props.hotkeys,
        isBleeding = _this$props.isBleeding,
        isFocused = _this$props.isFocused,
        isOpen = _this$props.isOpen,
        onBlur = _this$props.onBlur,
        onChange = _this$props.onChange,
        onClear = _this$props.onClear,
        onFocus = _this$props.onFocus,
        onKeyDown = _this$props.onKeyDown,
        onMouseDown = _this$props.onMouseDown,
        placeholder = _this$props.placeholder,
        results = _this$props.results,
        value = _this$props.value;
    var className = _SearchField.default.root;
    if (isBleeding) className += " ".concat(_SearchField.default.isBleeding);
    if (isFocused) className += " ".concat(_SearchField.default.isFocused);
    if (isOpen) className += " ".concat(_SearchField.default.isOpen);
    if (value.length) className += " ".concat(_SearchField.default.hasValue);
    return /*#__PURE__*/_react.default.createElement(_components.LegacyLayerProvider, {
      zOffset: "navbarDialog"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: className,
      onMouseDown: onMouseDown
    }, /*#__PURE__*/_react.default.createElement(_ui.Layer, {
      className: _SearchField.default.inputField
    }, /*#__PURE__*/_react.default.createElement("label", {
      className: _SearchField.default.label
    }, /*#__PURE__*/_react.default.createElement(_searchIcon.default, null)), /*#__PURE__*/_react.default.createElement("input", {
      className: _SearchField.default.input,
      type: "text",
      value: value,
      onChange: onChange,
      onBlur: onBlur,
      onFocus: onFocus,
      onKeyDown: onKeyDown,
      placeholder: placeholder,
      ref: this.setInputElement
    }), hotkeys && /*#__PURE__*/_react.default.createElement("div", {
      className: _SearchField.default.hotkeys
    }, /*#__PURE__*/_react.default.createElement(_hotkeys.default, {
      keys: hotkeys
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: value ? _SearchField.default.clearButtonWithValue : _SearchField.default.clearButton,
      onClick: onClear,
      title: "Clear search"
    }, /*#__PURE__*/_react.default.createElement(_closeIcon.default, null))), /*#__PURE__*/_react.default.createElement("div", {
      className: _SearchField.default.results
    }, results)));
  }

}

_defineProperty(SearchField, "defaultProps", {
  hotkeys: undefined,
  isBleeding: false,
  isFocused: false,
  isOpen: false,
  onBlur: undefined,
  onChange: undefined,
  onClear: undefined,
  onFocus: undefined,
  onKeyDown: undefined,
  onMouseDown: undefined,
  placeholder: 'Search',
  results: null
});

var _default = SearchField;
exports.default = _default;