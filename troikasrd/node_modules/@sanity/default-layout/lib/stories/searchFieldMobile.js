"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchFieldMobileStory = SearchFieldMobileStory;

var _react = _interopRequireDefault(require("react"));

var _actions = require("part:@sanity/storybook/addons/actions");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _SearchField = _interopRequireDefault(require("../navbar/search/SearchField"));

var _SearchResults = _interopRequireDefault(require("../navbar/search/SearchResults"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @todo: remove the following line when part imports has been removed from this file
///<reference types="@sanity/types/parts" />
function SearchFieldMobileStory() {
  var hasResults = (0, _knobs.boolean)('hasResults', false, 'props');
  var items = hasResults ? [{
    hit: {
      _id: 'foo',
      _type: 'foo'
    },
    score: 12,
    stories: {
      path: 'foo',
      score: 1,
      why: 'test'
    }
  }] : [];
  var query = (0, _knobs.text)('query', '', 'props');
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      background: '#444',
      height: '100vh'
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      background: '#fff',
      margin: '0 auto',
      position: 'relative'
    }
  }, /*#__PURE__*/_react.default.createElement(_SearchField.default, {
    isBleeding: true,
    isFocused: (0, _knobs.boolean)('isFocused', false, 'props'),
    isOpen: (0, _knobs.boolean)('isOpen', false, 'props'),
    results: /*#__PURE__*/_react.default.createElement(_SearchResults.default, {
      activeIndex: (0, _knobs.number)('activeIndex', -1, 'props'),
      isBleeding: true,
      isLoading: (0, _knobs.boolean)('isLoading', false, 'props'),
      items: items,
      query: query,
      renderItem: key => /*#__PURE__*/_react.default.createElement("div", {
        key: key.hit._id,
        style: {
          padding: '0.75em 1em'
        }
      }, key)
    }),
    value: query,
    onChange: () => (0, _actions.action)('onChange')
  })));
}