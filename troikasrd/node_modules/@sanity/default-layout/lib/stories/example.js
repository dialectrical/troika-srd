"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExampleStory = ExampleStory;

var _react = _interopRequireDefault(require("react"));

var _tooltip = require("part:@sanity/components/tooltip");

var _actions = require("part:@sanity/storybook/addons/actions");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _hamburgerIcon = _interopRequireDefault(require("part:@sanity/base/hamburger-icon"));

var _composeIcon = _interopRequireDefault(require("part:@sanity/base/compose-icon"));

var _pluginIcon = _interopRequireDefault(require("part:@sanity/base/plugin-icon"));

var _viewColumnIcon = _interopRequireDefault(require("part:@sanity/base/view-column-icon"));

var _Branding = _interopRequireDefault(require("../navbar/branding/Branding"));

var _ToolMenu = _interopRequireDefault(require("../navbar/toolMenu/ToolMenu"));

var _LoginStatus = _interopRequireDefault(require("../navbar/loginStatus/LoginStatus"));

var _SanityStatus = _interopRequireDefault(require("../navbar/studioStatus/SanityStatus"));

var _SearchField = _interopRequireDefault(require("../navbar/search/SearchField"));

var _SearchResults = _interopRequireDefault(require("../navbar/search/SearchResults"));

var _Navbar = _interopRequireDefault(require("../navbar/Navbar.css"));

var _DefaultLayout = _interopRequireDefault(require("../DefaultLayout.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @todo: remove the following line when part imports has been removed from this file
///<reference types="@sanity/types/parts" />
var noop = () => undefined;

function SearchResultItem(key) {
  return /*#__PURE__*/_react.default.createElement("div", {
    key: key,
    style: {
      padding: '0.5em 0.75em'
    }
  }, key);
}

function ExampleStory() {
  var menuIsOpen = (0, _knobs.boolean)('menuIsOpen', false, 'props');
  var searchIsOpen = (0, _knobs.boolean)('searchIsOpen', false, 'props');
  var sanityStatusIsUpToDate = (0, _knobs.boolean)('sanityStatusIsUpToDate', true, 'props');
  var sanityStatusLevel = (0, _knobs.select)('sanityStatusLevel', ['notice', 'low', 'medium', 'high'], 'notice', 'props');
  var sanityStatusNumberOfUpdates = (0, _knobs.number)('sanityStatusNumberOfUpdates', 0, 'props');
  var sanityStatusVersions = {};
  var sanityStatusOutdated = Array.from(new Array(sanityStatusNumberOfUpdates)).map(() => ({}));
  var isOverlayVisible = menuIsOpen || searchIsOpen;
  var className = _DefaultLayout.default.root;
  if (isOverlayVisible) className += " ".concat(_DefaultLayout.default.isOverlayVisible);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: className
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _DefaultLayout.default.navBar
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(_Navbar.default.root, " ").concat(_Navbar.default.withToolMenu)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _Navbar.default.hamburger
  }, /*#__PURE__*/_react.default.createElement("button", {
    className: _Navbar.default.hamburgerButton,
    type: "button",
    title: "Menu",
    onClick: (0, _actions.action)('onClick')
  }, /*#__PURE__*/_react.default.createElement(_hamburgerIcon.default, null))), /*#__PURE__*/_react.default.createElement("a", {
    className: _Navbar.default.branding,
    href: "#",
    onClick: evt => evt.preventDefault()
  }, /*#__PURE__*/_react.default.createElement(_Branding.default, {
    projectName: "Storybook"
  })), /*#__PURE__*/_react.default.createElement("button", {
    className: _Navbar.default.createButton,
    onClick: noop,
    type: "button"
  }, /*#__PURE__*/_react.default.createElement(_tooltip.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Create new document"),
    disabled: 'ontouchstart' in document.documentElement
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _Navbar.default.createButtonInner,
    tabIndex: -1
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _Navbar.default.createButtonIcon
  }, /*#__PURE__*/_react.default.createElement(_composeIcon.default, null)), /*#__PURE__*/_react.default.createElement("span", {
    className: _Navbar.default.createButtonText
  }, "New")))), /*#__PURE__*/_react.default.createElement("div", {
    className: _Navbar.default.search
  }, /*#__PURE__*/_react.default.createElement(_SearchField.default, {
    hotkeys: ['F'],
    isFocused: (0, _knobs.boolean)('searchIsFocused', false, 'props'),
    isOpen: searchIsOpen,
    results: /*#__PURE__*/_react.default.createElement(_SearchResults.default, {
      activeIndex: (0, _knobs.number)('searchActiveIndex', -1, 'props'),
      isBleeding: false,
      isLoading: (0, _knobs.boolean)('searchIsLoading', false, 'props'),
      items: [],
      query: '',
      renderItem: SearchResultItem
    }),
    value: '',
    onChange: (0, _actions.action)('onChange')
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _Navbar.default.toolSwitcher
  }, /*#__PURE__*/_react.default.createElement(_ToolMenu.default, {
    activeToolName: "desk",
    direction: "horizontal",
    isVisible: true,
    onSwitchTool: (0, _actions.action)('onSwitchTool'),
    router: {},
    tools: [{
      name: 'desk',
      title: 'Desk',
      icon: _viewColumnIcon.default
    }, {
      name: 'plugin1',
      title: 'Plugin 1',
      icon: _pluginIcon.default
    }, {
      name: 'plugin2',
      title: 'Plugin 2',
      icon: _pluginIcon.default
    }]
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _Navbar.default.sanityStatus
  }, /*#__PURE__*/_react.default.createElement(_SanityStatus.default, {
    isSupported: true,
    isUpToDate: sanityStatusIsUpToDate,
    level: sanityStatusLevel,
    onHideDialog: noop,
    onShowDialog: noop,
    showDialog: false,
    outdated: sanityStatusOutdated,
    versions: sanityStatusVersions
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _Navbar.default.loginStatus
  }, /*#__PURE__*/_react.default.createElement(_LoginStatus.default, {
    onLogout: (0, _actions.action)('onLogout')
  })))));
}