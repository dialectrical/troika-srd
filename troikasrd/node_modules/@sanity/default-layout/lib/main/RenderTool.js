"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tool = _interopRequireDefault(require("all:part:@sanity/base/tool"));

var _react = _interopRequireDefault(require("react"));

var _ErrorScreen = _interopRequireDefault(require("./ErrorScreen"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// eslint-disable-next-line react/require-optimization
class RenderTool extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      error: null,
      showErrorDetails: __DEV__
    });

    _defineProperty(this, "handleShowDetails", () => {
      this.setState({
        showErrorDetails: true
      });
    });

    _defineProperty(this, "handleRetry", () => {
      this.setState({
        error: null
      });
    });
  }

  componentDidUpdate(prevProps, prevState) {
    var prevToolName = prevProps.tool;
    var currToolName = this.props.tool;

    if (prevToolName !== currToolName && prevState.error) {
      // https://reactjs.org/docs/react-component.html#componentdidupdate
      // eslint-disable-next-line react/no-did-update-set-state
      this.setState({
        error: null,
        showErrorDetails: __DEV__
      });
    }
  }

  componentDidCatch(error, info) {
    this.setState({
      error: {
        error,
        info
      }
    });
  }

  getActiveTool() {
    var activeToolName = this.props.tool;

    var activeTool = _tool.default.find(tool => tool.name === activeToolName);

    return activeTool;
  }

  render() {
    if (this.state.error) {
      var _this$state$error = this.state.error,
          error = _this$state$error.error,
          info = _this$state$error.info;
      var showErrorDetails = this.state.showErrorDetails;
      return /*#__PURE__*/_react.default.createElement(_ErrorScreen.default, {
        activeTool: this.getActiveTool(),
        error: error,
        info: info,
        onRetry: this.handleRetry,
        onShowDetails: this.handleShowDetails,
        showErrorDetails: showErrorDetails
      });
    }

    if (!_tool.default.length) {
      return /*#__PURE__*/_react.default.createElement("div", null, "No tools fulfills the part ", /*#__PURE__*/_react.default.createElement("code", null, "`part:@sanity/base/tool`"));
    }

    var activeTool = this.getActiveTool();

    if (!activeTool) {
      return /*#__PURE__*/_react.default.createElement("div", null, "Tool not found: ", this.props.tool);
    }

    var ActiveTool = activeTool.component;
    return /*#__PURE__*/_react.default.createElement(ActiveTool, this.props);
  }

}

exports.default = RenderTool;

_defineProperty(RenderTool, "defaultProps", {
  tool: null
});