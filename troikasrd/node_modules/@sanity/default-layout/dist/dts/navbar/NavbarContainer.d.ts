import React from 'react';
import { Router, Tool } from '../types';
interface Props {
    createMenuIsOpen: boolean;
    onCreateButtonClick: () => void;
    onSearchClose: () => void;
    onSearchOpen: () => void;
    onSwitchTool: () => void;
    onToggleMenu: () => void;
    onUserLogout: () => void;
    router: Router;
    documentTypes: string[];
    searchIsOpen: boolean;
    tools: Tool[];
}
interface State {
    showLabel: boolean;
    showLabelMinWidth: number;
    showToolMenu: boolean;
    showToolMenuMinWidth: number;
}
declare class NavbarContainer extends React.PureComponent<Props, State> {
    state: {
        showLabel: boolean;
        showLabelMinWidth: number;
        showToolMenu: boolean;
        showToolMenuMinWidth: number;
        winWidth: number;
    };
    loginStatusElement: any;
    searchElement: any;
    tickAnimFrameId: any;
    io: any;
    componentDidMount(): void;
    componentDidUpdate(prevProps: Props, prevState: State): void;
    componentWillUnmount(): void;
    tick: () => void;
    handleFrame(): void;
    handleCustomResize(winWidth: number): void;
    handleSetLoginStatusElement: (element: HTMLDivElement) => void;
    handleSetSearchElement: (element: HTMLDivElement) => void;
    render(): JSX.Element;
}
export default NavbarContainer;
//# sourceMappingURL=NavbarContainer.d.ts.map