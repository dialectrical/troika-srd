"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Details = Details;

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _excluded = ["children", "open", "title"];

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var HeaderButton = _styledComponents.default.button(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: block;\n  -webkit-font-smoothing: inherit;\n  appearance: none;\n  font: inherit;\n  background: none;\n  width: 100%;\n  text-align: left;\n  border: 0;\n  margin: 0;\n  padding: 0;\n  outline: none;\n"])));

var Header = (0, _styledComponents.default)(_ui.Flex)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  cursor: default;\n"])));
var IconBox = (0, _styledComponents.default)(_ui.Box)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  & > div > svg {\n    transform: rotate(0);\n    transition: transform 100ms;\n  }\n\n  &[data-open] > div > svg {\n    transform: rotate(90deg);\n  }\n"])));

function Details(props) {
  var children = props.children,
      openProp = props.open,
      _props$title = props.title,
      title = _props$title === void 0 ? 'Details' : _props$title,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useState = (0, _react.useState)(openProp || false),
      _useState2 = _slicedToArray(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var handleToggle = (0, _react.useCallback)(() => setOpen(v => !v), []);
  (0, _react.useEffect)(() => setOpen(openProp || false), [openProp]);
  return /*#__PURE__*/_react.default.createElement(_ui.Box, restProps, /*#__PURE__*/_react.default.createElement(HeaderButton, {
    type: "button",
    onClick: handleToggle
  }, /*#__PURE__*/_react.default.createElement(Header, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(IconBox, {
    "data-open": open ? '' : undefined
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1
  }, /*#__PURE__*/_react.default.createElement(_icons.ToggleArrowRightIcon, null))), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    marginLeft: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    weight: "medium"
  }, title)))), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    hidden: !open,
    marginTop: 3
  }, children));
}