"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _FormBuilderInput = require("../FormBuilderInput");

var _SanityFormBuilderContext = _interopRequireDefault(require("./SanityFormBuilderContext"));

var gradientPatchAdapter = _interopRequireWildcard(require("./utils/gradientPatchAdapter"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var EMPTY = [];

class SanityFormBuilder extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "_input", void 0);

    _defineProperty(this, "setInput", input => {
      this._input = input;
    });

    _defineProperty(this, "handleChange", patchEvent => {
      this.props.onChange(gradientPatchAdapter.toGradient(patchEvent.patches));
    });
  }

  componentDidMount() {
    var autoFocus = this.props.autoFocus;

    if (this._input && autoFocus) {
      this._input.focus();
    }
  }

  render() {
    var _this$props = this.props,
        value = _this$props.value,
        schema = _this$props.schema,
        patchChannel = _this$props.patchChannel,
        type = _this$props.type,
        readOnly = _this$props.readOnly,
        markers = _this$props.markers,
        onFocus = _this$props.onFocus,
        onBlur = _this$props.onBlur,
        focusPath = _this$props.focusPath,
        filterField = _this$props.filterField,
        compareValue = _this$props.compareValue,
        presence = _this$props.presence;
    return /*#__PURE__*/_react.default.createElement(_SanityFormBuilderContext.default, {
      value: value,
      schema: schema,
      patchChannel: patchChannel
    }, /*#__PURE__*/_react.default.createElement(_FormBuilderInput.FormBuilderInput, {
      type: type,
      onChange: this.handleChange,
      level: 0,
      value: value,
      onFocus: onFocus,
      compareValue: compareValue,
      onBlur: onBlur,
      markers: markers,
      focusPath: focusPath,
      isRoot: true,
      readOnly: readOnly,
      filterField: filterField,
      ref: this.setInput,
      path: EMPTY,
      presence: presence
    }));
  }

}

exports.default = SanityFormBuilder;

_defineProperty(SanityFormBuilder, "createPatchChannel", _SanityFormBuilderContext.default.createPatchChannel);