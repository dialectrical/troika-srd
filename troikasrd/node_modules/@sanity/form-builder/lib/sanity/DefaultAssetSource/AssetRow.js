"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

var _hooks = require("@sanity/base/hooks");

var _prettyBytes = _interopRequireDefault(require("pretty-bytes"));

var _versionedClient = require("../versionedClient");

var _AssetUsageDialog = require("./AssetUsageDialog");

var _AssetMenu = require("./AssetMenu");

var _mimeType = require("./utils/mimeType");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var CardIconWrapper = _styledComponents.default.span(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  background-color: transparent;\n  flex-shrink: 0;\n"]))); // These are here because using vanilla UI components caused a type issue inside of styled-components


var CustomFlex = (0, _styledComponents.default)(_ui.Flex)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([""])));
var CustomText = (0, _styledComponents.default)(_ui.Text)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([""])));
var CustomCard = (0, _styledComponents.default)(_ui.Card)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  &:hover-within ", " {\n    --card-muted-fg-color: var(--card-muted-fg-color);\n    --card-fg-color: var(--card-fg-color);\n  }\n\n  ", "\n"])), CustomText, props => props.isSelected && (0, _styledComponents.css)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      --card-muted-fg-color: var(--card-bg-color);\n      --card-fg-color: var(--card-bg-color);\n    "]))));
var RowButton = (0, _styledComponents.default)(_ui.Button)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  box-shadow: none;\n  min-width: 0;\n  cursor: pointer;\n  position: initial;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n  }\n\n  &:before {\n    z-index: 0;\n    pointer-events: none;\n    border-radius: 0.1875rem;\n  }\n\n  ", "\n\n  ", "\n"])), props => props.isSelected && (0, _styledComponents.css)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n      --card-muted-fg-color: var(--card-bg-color);\n      --card-fg-color: var(--card-bg-color);\n\n      &:before {\n        background-color: var(--card-focus-ring-color);\n      }\n\n      ", " {\n        --card-muted-fg-color: var(--card-bg-color);\n      }\n\n      ", " {\n        --card-muted-fg-color: var(--card-bg-color);\n        --card-fg-color: var(--card-bg-color);\n      }\n    "])), CardIconWrapper, CustomFlex), props => !props.isSelected && (0, _styledComponents.css)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n      &:hover:before {\n        background-color: var(--card-bg-color);\n      }\n\n      &:focus:before {\n        background-color: var(--card-code-bg-color);\n      }\n\n      &:focus-within:before {\n        background-color: var(--card-bg-color);\n      }\n    "]))));
var STYLES_ROW_CARD = {
  position: 'relative'
};
var STYLES_ICON_CARD = {
  flexShrink: 0
};
var STYLES_BUTTON_TEXT = {
  minWidth: 0
};
var STYLES_ASSETMENU_WRAPPER = {
  zIndex: 3,
  marginTop: '-0.5rem',
  marginBottom: '-0.5rem'
};
var DISABLED_DELETE_TITLE = 'Cannot delete current file';

var AssetRow = props => {
  var toast = (0, _ui.useToast)();
  var deleteRef$ = (0, _react.useRef)();

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      showUsageDialog = _useState2[0],
      setShowUsageDialog = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      showDeleteDialog = _useState4[0],
      setShowDeleteDialog = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = _slicedToArray(_useState5, 2),
      isDeleting = _useState6[0],
      setIsDeleting = _useState6[1];

  var _useState7 = (0, _react.useState)(false),
      _useState8 = _slicedToArray(_useState7, 2),
      isOpen = _useState8[0],
      setIsOpen = _useState8[1];

  var asset = props.asset,
      onClick = props.onClick,
      onKeyPress = props.onKeyPress,
      onDeleteFinished = props.onDeleteFinished,
      isSelected = props.isSelected,
      isMobile = props.isMobile;
  var originalFilename = asset.originalFilename,
      _id = asset._id,
      mimeType = asset.mimeType,
      size = asset.size,
      _createdAt = asset._createdAt;
  var formattedTime = (0, _hooks.useTimeAgo)(_createdAt, {
    agoSuffix: true
  });
  var formattedMimeType = (0, _mimeType.formatMimeType)(mimeType);
  var formattedSize = (0, _prettyBytes.default)(size);
  var showTooltip = (originalFilename || '').length > 37;

  var handleConfirmDelete = () => {
    setShowDeleteDialog(true);
  };

  var handleDeleteError = error => {
    toast.push({
      closable: true,
      status: 'error',
      title: 'File could not be deleted',
      description: error.message
    });
  };

  var handleDeleteSuccess = () => {
    toast.push({
      status: 'success',
      title: 'File was deleted'
    });
  };

  var handleDeleteAsset = () => {
    setIsDeleting(true);
    deleteRef$.current = _versionedClient.versionedClient.observable.delete(asset._id).subscribe({
      next: () => {
        setIsDeleting(false);
        onDeleteFinished(asset._id);
        setShowDeleteDialog(false);
        handleDeleteSuccess();
      },
      error: err => {
        setIsDeleting(false);
        handleDeleteError(err); // eslint-disable-next-line no-console

        console.error('Could not delete asset', err);
      }
    });
  };

  var handleDialogClose = () => {
    setShowUsageDialog(false);
    setShowDeleteDialog(false);
  };

  var handleToggleUsageDialog = () => {
    setShowUsageDialog(true);
  };

  var handleToggleOpen = () => {
    setIsOpen(!isOpen);
  };

  var handleMenuAction = action => {
    if (action.type === 'delete') {
      handleConfirmDelete();
    }

    if (action.type === 'showUsage') {
      handleToggleUsageDialog();
    }
  };

  if (isMobile) {
    return /*#__PURE__*/_react.default.createElement(_ui.Card, {
      paddingBottom: 2,
      style: STYLES_ROW_CARD
    }, /*#__PURE__*/_react.default.createElement(_ui.Grid, {
      columns: 4,
      gap: 1,
      style: {
        position: 'relative',
        gridTemplateColumns: '1fr 30px',
        opacity: isDeleting ? 0.5 : 1
      }
    }, /*#__PURE__*/_react.default.createElement(RowButton, {
      mode: "bleed",
      padding: 0,
      "data-id": _id,
      onClick: onClick,
      paddingY: 1
    }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      gap: 2,
      flex: 2,
      align: "center"
    }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
      as: CardIconWrapper,
      padding: 2,
      tone: "transparent",
      radius: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      muted: true,
      size: 2,
      style: STYLES_ICON_CARD
    }, /*#__PURE__*/_react.default.createElement(_icons.DocumentIcon, null))), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1,
      align: "left",
      textOverflow: "ellipsis",
      style: STYLES_BUTTON_TEXT
    }, originalFilename))), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      justify: "flex-end",
      align: "center",
      paddingRight: 1,
      style: STYLES_ASSETMENU_WRAPPER
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      mode: "bleed",
      fontSize: 1,
      padding: 2,
      onClick: handleToggleOpen,
      icon: isOpen ? _icons.ChevronUpIcon : _icons.ChevronDownIcon
    }))), isOpen && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ui.Grid, {
      marginTop: 3,
      columns: 3,
      gap: 1
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Label, {
      size: 1,
      muted: true
    }, "Size"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1,
      muted: true
    }, formattedSize)), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Label, {
      size: 1,
      muted: true
    }, "Type"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1,
      muted: true
    }, formattedMimeType)), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Label, {
      size: 1,
      muted: true
    }, "Date added"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1,
      muted: true
    }, formattedTime))), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 2,
      marginTop: 3
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      fontSize: 1,
      tone: "default",
      mode: "ghost",
      text: "Show uses",
      onClick: handleToggleUsageDialog,
      icon: _icons.LinkIcon
    }), /*#__PURE__*/_react.default.createElement(_ui.Button, {
      fontSize: 1,
      tone: "critical",
      mode: "ghost",
      text: "Delete",
      icon: _icons.TrashIcon,
      disabled: isSelected,
      title: isSelected ? DISABLED_DELETE_TITLE : 'Delete file',
      onClick: handleConfirmDelete
    }))), (showUsageDialog || showDeleteDialog) && /*#__PURE__*/_react.default.createElement(_AssetUsageDialog.AssetUsageDialog, {
      assetType: "file",
      asset: asset,
      mode: showDeleteDialog ? 'confirmDelete' : 'listUsage',
      onClose: handleDialogClose,
      onDelete: handleDeleteAsset,
      isDeleting: isDeleting
    }));
  }

  return /*#__PURE__*/_react.default.createElement(CustomCard, {
    paddingBottom: 1,
    style: STYLES_ROW_CARD,
    radius: 0,
    overflow: 'hidden',
    isSelected: isSelected,
    "aria-selected": "true"
  }, /*#__PURE__*/_react.default.createElement(_ui.Grid, {
    columns: 4,
    gap: 1,
    "data-id": _id,
    paddingY: 1,
    style: {
      position: 'relative',
      gridTemplateColumns: '3fr 1fr 1fr 2fr 30px',
      opacity: isDeleting ? 0.5 : 1
    }
  }, /*#__PURE__*/_react.default.createElement(RowButton, {
    mode: "bleed",
    "data-id": _id,
    onClick: onClick,
    padding: 0,
    onKeyPress: onKeyPress,
    title: "Select the file ".concat(originalFilename),
    isSelected: isSelected
  }, /*#__PURE__*/_react.default.createElement(CustomFlex, {
    gap: 2,
    flex: 2,
    paddingRight: 1,
    align: "center",
    onClick: onClick,
    onKeyPress: onKeyPress,
    "data-id": _id,
    title: "Select the file ".concat(originalFilename)
  }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    as: CardIconWrapper,
    padding: 2,
    tone: "transparent",
    radius: 2,
    style: STYLES_ICON_CARD
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 2
  }, /*#__PURE__*/_react.default.createElement(_icons.DocumentIcon, null))), showTooltip && /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, originalFilename)),
    fallbackPlacements: ['right', 'left'],
    placement: "top",
    portal: true
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    align: "left",
    textOverflow: "ellipsis",
    style: STYLES_BUTTON_TEXT
  }, originalFilename)), !showTooltip && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    align: "left",
    textOverflow: "ellipsis",
    style: STYLES_BUTTON_TEXT
  }, originalFilename))), /*#__PURE__*/_react.default.createElement(CustomFlex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    muted: true
  }, formattedSize)), /*#__PURE__*/_react.default.createElement(CustomFlex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    muted: true
  }, formattedMimeType)), /*#__PURE__*/_react.default.createElement(CustomFlex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "time",
    size: 1,
    muted: true,
    dateTime: _createdAt
  }, formattedTime)), /*#__PURE__*/_react.default.createElement(CustomFlex, {
    justify: "flex-end",
    align: "center",
    paddingX: 1,
    paddingY: 1,
    style: STYLES_ASSETMENU_WRAPPER
  }, /*#__PURE__*/_react.default.createElement(_AssetMenu.AssetMenu, {
    border: false,
    isSelected: false,
    onAction: handleMenuAction
  }))), (showUsageDialog || showDeleteDialog) && /*#__PURE__*/_react.default.createElement(_AssetUsageDialog.AssetUsageDialog, {
    assetType: "file",
    asset: asset,
    mode: showDeleteDialog ? 'confirmDelete' : 'listUsage',
    onClose: handleDialogClose,
    onDelete: handleDeleteAsset,
    isDeleting: isDeleting
  }));
};

var _default = AssetRow;
exports.default = _default;