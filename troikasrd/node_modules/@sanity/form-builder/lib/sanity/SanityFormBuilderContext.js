"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SanityFormBuilderContext;

var _react = _interopRequireDefault(require("react"));

var _legacyParts = require("../legacyParts");

var _FormBuilderContext = _interopRequireDefault(require("../FormBuilderContext"));

var _inputResolver = _interopRequireDefault(require("./inputResolver/inputResolver"));

var gradientPatchAdapter = _interopRequireWildcard(require("./utils/gradientPatchAdapter"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Default wiring for FormBuilderContext when used as a sanity part
var previewResolver = () => _legacyParts.SanityPreview;

function SanityFormBuilderContext(props) {
  return /*#__PURE__*/_react.default.createElement(_FormBuilderContext.default, {
    value: props.value,
    schema: props.schema,
    patchChannel: props.patchChannel,
    resolveInputComponent: _inputResolver.default,
    resolvePreviewComponent: previewResolver
  }, props.children);
}

function prepareMutationEvent(event) {
  var patches = event.mutations.map(mut => mut.patch).filter(Boolean);
  return {
    snapshot: event.document,
    patches: gradientPatchAdapter.toFormBuilder(event.origin, patches)
  };
}

function prepareRebaseEvent(event) {
  var remotePatches = event.remoteMutations.map(mut => mut.patch).filter(Boolean);
  var localPatches = event.localMutations.map(mut => mut.patch).filter(Boolean);
  return {
    snapshot: event.document,
    patches: gradientPatchAdapter.toFormBuilder('remote', remotePatches).concat(gradientPatchAdapter.toFormBuilder('local', localPatches))
  };
}

SanityFormBuilderContext.createPatchChannel = () => {
  var patchChannel = _FormBuilderContext.default.createPatchChannel();

  return {
    receiveEvent: event => {
      if (event.type !== 'mutation' && event.type !== 'rebase') {
        return;
      }

      patchChannel.receivePatches(event.type === 'mutation' ? prepareMutationEvent(event) : prepareRebaseEvent(event));
    },
    onPatch: patchChannel.onPatch
  };
};