"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _status = _interopRequireDefault(require("part:@sanity/components/validation/status"));

var _blockMarkersCustomDefault = _interopRequireDefault(require("part:@sanity/form-builder/input/block-editor/block-markers-custom-default"));

var _types = require("@sanity/types");

var _Markers = _interopRequireDefault(require("./Markers.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Markers extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleValidationMarkerClick", event => {
      event.preventDefault();
      event.stopPropagation();
      var _this$props = this.props,
          onFocus = _this$props.onFocus,
          markers = _this$props.markers;
      var validationMarkers = markers.filter(_types.isValidationMarker);
      onFocus(validationMarkers[0].path);
    });

    _defineProperty(this, "handleCancelEvent", event => {
      event.preventDefault();
      event.stopPropagation();
    });
  }

  render() {
    var _this$props2 = this.props,
        markers = _this$props2.markers,
        renderCustomMarkers = _this$props2.renderCustomMarkers;

    if (markers.length === 0) {
      return null;
    }

    var customMarkers = markers.filter(mrkr => !(0, _types.isValidationMarker)(mrkr));
    var validationMarkers = markers.filter(_types.isValidationMarker);
    return /*#__PURE__*/_react.default.createElement("div", {
      onClick: this.handleCancelEvent,
      className: _Markers.default.root
    }, validationMarkers.length > 0 && /*#__PURE__*/_react.default.createElement("div", {
      className: _Markers.default.markerGroup,
      onClick: this.handleValidationMarkerClick
    }, /*#__PURE__*/_react.default.createElement(_status.default, {
      markers: validationMarkers
    })), customMarkers.length > 0 && /*#__PURE__*/_react.default.createElement("div", {
      className: _Markers.default.markerGroup,
      onClick: this.handleCancelEvent
    }, renderCustomMarkers && renderCustomMarkers(customMarkers), !renderCustomMarkers && /*#__PURE__*/_react.default.createElement(_blockMarkersCustomDefault.default, {
      markers: markers
    })));
  }

}

exports.default = Markers;

_defineProperty(Markers, "defaultProps", {
  markers: [],
  renderCustomMarkers: null
});