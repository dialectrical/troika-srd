"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InvalidValue = InvalidValue;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _Alert = require("../../components/Alert");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function InvalidValue(props) {
  var onChange = props.onChange,
      onIgnore = props.onIgnore,
      resolution = props.resolution;
  var handleAction = (0, _react.useCallback)(() => {
    if (resolution) {
      onChange({
        type: 'mutation',
        patches: resolution.patches
      });
    }
  }, [onChange, resolution]);
  return /*#__PURE__*/_react.default.createElement(_Alert.Alert, {
    suffix: /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      padding: 2
    }, resolution.action && /*#__PURE__*/_react.default.createElement(_ui.Grid, {
      columns: [1, 2],
      gap: 1
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      mode: "ghost",
      onClick: onIgnore,
      text: "Ignore"
    }), /*#__PURE__*/_react.default.createElement(_ui.Button, {
      onClick: handleAction,
      text: resolution.action,
      tone: "caution"
    })), /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 3
    }, resolution.action && /*#__PURE__*/_react.default.createElement(_ui.Text, {
      as: "p",
      muted: true,
      size: 1
    }, "NOTE: It\u2019s generally safe to perform the action above, but if you are in doubt, get in touch with those responsible for configuring your studio."))),
    title: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Invalid block value")
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p",
    muted: true,
    size: 1
  }, resolution.description), /*#__PURE__*/_react.default.createElement(_ui.Card, {
    border: true,
    overflow: "auto",
    padding: 2,
    tone: "inherit"
  }, /*#__PURE__*/_react.default.createElement(_ui.Code, {
    language: "json"
  }, JSON.stringify(resolution.item, null, 2)))));
}