"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _autoId = require("@reach/auto-id");

var _components = require("@sanity/base/components");

var _PatchEvent = _interopRequireWildcard(require("../PatchEvent"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var EmailInput = /*#__PURE__*/_react.default.forwardRef(function EmailInput(props, forwardedRef) {
  var value = props.value,
      readOnly = props.readOnly,
      type = props.type,
      markers = props.markers,
      level = props.level,
      onFocus = props.onFocus,
      onBlur = props.onBlur,
      onChange = props.onChange,
      presence = props.presence;
  var inputId = (0, _autoId.useId)();
  var errors = (0, _react.useMemo)(() => markers.filter(marker => marker.type === 'validation' && marker.level === 'error'), [markers]);

  var handleChange = _react.default.useCallback(event => {
    var inputValue = event.currentTarget.value;
    onChange(_PatchEvent.default.from(inputValue ? (0, _PatchEvent.set)(inputValue) : (0, _PatchEvent.unset)()));
  }, [onChange]);

  return /*#__PURE__*/_react.default.createElement(_components.FormField, {
    level: level,
    title: type.title,
    description: type.description,
    inputId: inputId,
    __unstable_presence: presence,
    __unstable_markers: markers
  }, /*#__PURE__*/_react.default.createElement(_ui.TextInput, {
    type: "email",
    inputMode: "email",
    id: inputId,
    customValidity: errors.length > 0 ? errors[0].item.message : '',
    value: value || '',
    readOnly: Boolean(readOnly),
    placeholder: type.placeholder,
    onChange: handleChange,
    onFocus: onFocus,
    onBlur: onBlur,
    ref: forwardedRef
  }));
});

var _default = EmailInput;
exports.default = _default;