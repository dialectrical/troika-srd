"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateTimeInput = void 0;

var _react = _interopRequireWildcard(require("react"));

var _dateFns = require("date-fns");

var _legacyDateFormat = require("@sanity/util/legacyDateFormat");

var _PatchEvent = _interopRequireWildcard(require("../../PatchEvent"));

var _CommonDateTimeInput = require("./CommonDateTimeInput");

var _utils = require("./utils");

var _excluded = ["type", "onChange"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DEFAULT_DATE_FORMAT = 'YYYY-MM-DD';
var DEFAULT_TIME_FORMAT = 'HH:mm';

function parseOptions() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    dateFormat: options.dateFormat || DEFAULT_DATE_FORMAT,
    timeFormat: options.timeFormat || DEFAULT_TIME_FORMAT,
    timeStep: 'timeStep' in options && Number(options.timeStep) || 1,
    calendarTodayLabel: options.calendarTodayLabel || 'Today'
  };
}

function serialize(date) {
  return date.toISOString();
}

function deserialize(isoString) {
  var deserialized = new Date(isoString);

  if ((0, _utils.isValidDate)(deserialized)) {
    return {
      isValid: true,
      date: deserialized
    };
  }

  return {
    isValid: false,
    error: "Invalid date value: \"".concat(isoString, "\"")
  };
} // enforceTimeStep takes a dateString and datetime schema options and enforces the time
// to be within the configured timeStep


function enforceTimeStep(dateString, timeStep) {
  if (!timeStep || timeStep === 1) {
    return dateString;
  }

  var date = (0, _dateFns.parseISO)(dateString);
  var minutes = (0, _dateFns.getMinutes)(date);
  var leftOver = minutes % timeStep;

  if (leftOver !== 0) {
    return serialize((0, _dateFns.setMinutes)(date, minutes - leftOver));
  }

  return serialize(date);
}

var DateTimeInput = /*#__PURE__*/_react.default.forwardRef(function DateTimeInput(props, forwardedRef) {
  var type = props.type,
      onChange = props.onChange,
      rest = _objectWithoutProperties(props, _excluded);

  var title = type.title,
      description = type.description,
      placeholder = type.placeholder;

  var _parseOptions = parseOptions(type.options),
      dateFormat = _parseOptions.dateFormat,
      timeFormat = _parseOptions.timeFormat,
      timeStep = _parseOptions.timeStep;

  var handleChange = (0, _react.useCallback)(nextDate => {
    var date = nextDate;

    if (date !== null && timeStep > 1) {
      date = enforceTimeStep(date, timeStep);
    }

    onChange(_PatchEvent.default.from([date === null ? (0, _PatchEvent.unset)() : (0, _PatchEvent.set)(date)]));
  }, [onChange, timeStep]);

  var formatInputValue = _react.default.useCallback(date => (0, _legacyDateFormat.format)(date, "".concat(dateFormat, " ").concat(timeFormat)), [dateFormat, timeFormat]);

  var parseInputValue = _react.default.useCallback(inputValue => (0, _legacyDateFormat.parse)(inputValue, "".concat(dateFormat, " ").concat(timeFormat)), [dateFormat, timeFormat]);

  return /*#__PURE__*/_react.default.createElement(_CommonDateTimeInput.CommonDateTimeInput, _extends({}, rest, {
    onChange: handleChange,
    ref: forwardedRef,
    selectTime: true,
    timeStep: timeStep,
    title: title,
    description: description,
    placeholder: placeholder,
    serialize: serialize,
    deserialize: deserialize,
    formatInputValue: formatInputValue,
    parseInputValue: parseInputValue
  }));
});

exports.DateTimeInput = DateTimeInput;