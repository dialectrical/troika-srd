"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConditionalField = void 0;

var _react = _interopRequireWildcard(require("react"));

var _hooks = require("@sanity/base/hooks");

var _withDocument = _interopRequireDefault(require("../../utils/withDocument"));

var _excluded = ["role"],
    _excluded2 = ["hidden"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function isThenable(value) {
  return typeof (value === null || value === void 0 ? void 0 : value.then) === 'function';
}

function omitDeprecatedRole(user) {
  var role = user.role,
      rest = _objectWithoutProperties(user, _excluded);

  return rest;
}

function useCheckCondition(hidden, _ref) {
  var document = _ref.document,
      parent = _ref.parent,
      value = _ref.value,
      currentUser = _ref.currentUser;
  var didWarn = (0, _react.useRef)(false);
  return (0, _react.useMemo)(() => {
    var result = false;

    try {
      result = hidden({
        document,
        parent,
        value,
        currentUser
      });
    } catch (err) {
      console.error("An error occurred while checking if field should be hidden: ".concat(err.message));
      return false;
    }

    if (isThenable(result) && !didWarn.current) {
      console.warn('The hidden option is either a promise or a promise returning function. Async callbacks for `hidden` option is not currently supported.');
      return false;
    }

    return result;
  }, [hidden, document, parent, value, currentUser]);
}

var ConditionalField = _ref2 => {
  var hidden = _ref2.hidden,
      rest = _objectWithoutProperties(_ref2, _excluded2);

  return typeof hidden === 'function' ? /*#__PURE__*/_react.default.createElement(ConditionalFieldWithDocument, _extends({}, rest, {
    hidden: hidden
  })) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, hidden === true ? null : rest.children);
};

exports.ConditionalField = ConditionalField;
var ConditionalFieldWithDocument = (0, _withDocument.default)( /*#__PURE__*/(0, _react.forwardRef)(function ConditionalFieldWithDocument(props, ref
/* ignore ref as there's no place to put it */
) {
  var document = props.document,
      parent = props.parent,
      value = props.value,
      hidden = props.hidden,
      children = props.children;

  var _useCurrentUser = (0, _hooks.useCurrentUser)(),
      currentUser = _useCurrentUser.value;

  var shouldHide = useCheckCondition(hidden, {
    currentUser: omitDeprecatedRole(currentUser),
    document,
    parent,
    value
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, shouldHide ? null : children);
}));