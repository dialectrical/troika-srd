"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReferenceInput = void 0;

var _react = _interopRequireWildcard(require("react"));

var _types = require("@sanity/types");

var _icons = require("@sanity/icons");

var _rxjs = require("rxjs");

var _autoId = require("@reach/auto-id");

var _operators = require("rxjs/operators");

var _ui = require("@sanity/ui");

var _components = require("@sanity/base/components");

var _changeIndicators = require("@sanity/base/change-indicators");

var _reactRx = require("react-rx");

var _PatchEvent = _interopRequireWildcard(require("../../PatchEvent"));

var _Preview = _interopRequireDefault(require("../../Preview"));

var _Alert = require("../../components/Alert");

var _Details = require("../../components/Details");

var _empty = require("../../utils/empty");

var _useDidUpdate = require("../../hooks/useDidUpdate");

var _usePreviewSnapshot = require("./usePreviewSnapshot");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var INITIAL_SEARCH_STATE = {
  hits: [],
  isLoading: false
};

function getMemberTypeFor(typeName, ownerType) {
  return ownerType.to.find(ofType => {
    var _ofType$type;

    return ((_ofType$type = ofType.type) === null || _ofType$type === void 0 ? void 0 : _ofType$type.name) === typeName;
  });
}

var NO_FILTER = () => true;

function nonNullable(v) {
  return v !== null;
}

var ReferenceInput = /*#__PURE__*/(0, _react.forwardRef)(function ReferenceInput(props, forwardedRef) {
  var _preview$snapshot, _preview$snapshot$_in, _preview$snapshot3, _preview$snapshot4, _preview$snapshot5;

  var type = props.type,
      value = props.value,
      level = props.level,
      markers = props.markers,
      readOnly = props.readOnly,
      onSearch = props.onSearch,
      onChange = props.onChange,
      presence = props.presence,
      compareValue = props.compareValue,
      _props$focusPath = props.focusPath,
      focusPath = _props$focusPath === void 0 ? _empty.EMPTY_ARRAY : _props$focusPath,
      onFocus = props.onFocus,
      onBlur = props.onBlur,
      getPreviewSnapshot = props.getPreviewSnapshot;
  var handleChange = (0, _react.useCallback)(id => {
    var events = id === '' ? [(0, _PatchEvent.unset)()] : [(0, _PatchEvent.setIfMissing)({
      _type: type.name,
      _ref: id
    }), type.weak === true ? (0, _PatchEvent.set)(true, ['_weak']) : (0, _PatchEvent.unset)(['_weak']), (0, _PatchEvent.set)(id, ['_ref'])];
    onChange(_PatchEvent.default.from(events));
  }, [onChange, type]);
  var preview = (0, _usePreviewSnapshot.usePreviewSnapshot)(value, getPreviewSnapshot);
  var weakIs = value !== null && value !== void 0 && value._weak ? 'weak' : 'strong';
  var weakShouldBe = type.weak === true ? 'weak' : 'strong';
  var hasInsufficientPermissions = ((_preview$snapshot = preview.snapshot) === null || _preview$snapshot === void 0 ? void 0 : (_preview$snapshot$_in = _preview$snapshot._internalMeta) === null || _preview$snapshot$_in === void 0 ? void 0 : _preview$snapshot$_in.type) === 'insufficient_permissions';
  var isMissing = !hasInsufficientPermissions && !!(value !== null && value !== void 0 && value._ref) && !preview.isLoading && preview.snapshot === null;
  var hasRef = value && value._ref;
  var handleFixStrengthMismatch = (0, _react.useCallback)(() => {
    onChange(_PatchEvent.default.from(type.weak === true ? (0, _PatchEvent.set)(true, ['_weak']) : (0, _PatchEvent.unset)(['_weak'])));
  }, [onChange, type]);

  var _useToast = (0, _ui.useToast)(),
      push = _useToast.push;

  var _useState = (0, _react.useState)(INITIAL_SEARCH_STATE),
      _useState2 = _slicedToArray(_useState, 2),
      searchState = _useState2[0],
      setSearchState = _useState2[1];

  var errors = (0, _react.useMemo)(() => markers.filter(_types.isValidationErrorMarker), [markers]);
  var handleFocus = (0, _react.useCallback)(() => {
    if (onFocus) {
      onFocus(['_ref']);
    }
  }, [onFocus]);
  var handleQueryChange = (0, _reactRx.useObservableCallback)(inputValue$ => {
    return inputValue$.pipe((0, _operators.distinctUntilChanged)(), (0, _operators.filter)(nonNullable), (0, _operators.switchMap)(searchString => (0, _rxjs.concat)((0, _rxjs.of)({
      isLoading: true
    }), onSearch(searchString).pipe((0, _operators.map)(hits => ({
      hits
    })), (0, _operators.catchError)(error => {
      push({
        title: 'Reference search failed',
        description: error.message,
        status: 'error',
        id: "reference-search-fail-".concat(inputId)
      });
      return (0, _rxjs.of)({
        hits: []
      });
    })), (0, _rxjs.of)({
      isLoading: false
    }))), (0, _operators.scan)((prevState, nextState) => _objectSpread(_objectSpread({}, prevState), nextState), INITIAL_SEARCH_STATE), (0, _operators.tap)(setSearchState));
  }, []);
  var handleOpenButtonClick = (0, _react.useCallback)(() => {
    handleQueryChange('');
  }, [handleQueryChange]);
  var renderValue = (0, _react.useCallback)(autocompleteValue => {
    var _preview$snapshot2;

    if (autocompleteValue === '') {
      return '';
    }

    if (hasInsufficientPermissions) {
      return '<insufficient permissions>';
    }

    if (isMissing) {
      return '<nonexistent document>';
    }

    return preview.isLoading ? 'Loadingâ€¦' : ((_preview$snapshot2 = preview.snapshot) === null || _preview$snapshot2 === void 0 ? void 0 : _preview$snapshot2.title) || 'Untitled';
  }, [isMissing, hasInsufficientPermissions, preview]);
  var inputId = (0, _autoId.useId)();
  var ref = (0, _ui.useForwardedRef)(forwardedRef);
  (0, _useDidUpdate.useDidUpdate)(focusPath[0], (prev, current) => {
    if (prev !== '_ref' && current === '_ref') {
      var _ref$current;

      (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus();
    }
  });
  var renderOption = (0, _react.useCallback)(option => {
    var memberType = getMemberTypeFor(option.hit._type, type);
    return /*#__PURE__*/_react.default.createElement(_ui.Card, {
      as: "button"
    }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
      paddingX: 3,
      paddingY: 2
    }, memberType ? /*#__PURE__*/_react.default.createElement(_Preview.default, {
      type: memberType,
      value: option.hit,
      layout: "default"
    }) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Reference search returned a document type that is not a valid member")));
  }, [type]);
  var placeholder = preview.isLoading ? 'Loadingâ€¦' : 'Type to searchâ€¦';
  return /*#__PURE__*/_react.default.createElement(_components.FormField, {
    __unstable_markers: markers,
    __unstable_presence: presence,
    __unstable_changeIndicator: false,
    inputId: inputId,
    title: type.title,
    level: level,
    description: type.description
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 3
  }, hasInsufficientPermissions && /*#__PURE__*/_react.default.createElement(_Alert.Alert, {
    title: "Insufficient permissions to access this reference",
    status: "warning"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p",
    muted: true,
    size: 1
  }, "You don't have access to the referenced document. Please contact an admin for access or remove this reference.")), hasRef && !isMissing && weakIs !== weakShouldBe && /*#__PURE__*/_react.default.createElement(_Alert.Alert, {
    title: "Reference strength mismatch",
    status: "warning",
    suffix: /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      onClick: handleFixStrengthMismatch,
      text: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Convert to ", weakShouldBe, " reference"),
      tone: "caution"
    }))
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p",
    muted: true,
    size: 1
  }, "This reference is ", /*#__PURE__*/_react.default.createElement("em", null, weakIs), ", but according to the current schema it should be", ' ', /*#__PURE__*/_react.default.createElement("em", null, weakShouldBe, ".")), /*#__PURE__*/_react.default.createElement(_Details.Details, {
    marginTop: 4,
    title: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Details")
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p",
    muted: true,
    size: 1
  }, type.weak ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "This reference is currently marked as a ", /*#__PURE__*/_react.default.createElement("em", null, "strong reference"), ". It will not be possible to delete the \"", (_preview$snapshot3 = preview.snapshot) === null || _preview$snapshot3 === void 0 ? void 0 : _preview$snapshot3.title, "\"-document without first removing this reference.") : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "This reference is currently marked as a ", /*#__PURE__*/_react.default.createElement("em", null, "weak reference"), ". This makes it possible to delete the \"", (_preview$snapshot4 = preview.snapshot) === null || _preview$snapshot4 === void 0 ? void 0 : _preview$snapshot4.title, "\"-document without first deleting this reference, leaving this field referencing a nonexisting document."))))), value && isMissing && !hasInsufficientPermissions && /*#__PURE__*/_react.default.createElement(_Alert.Alert, {
    title: "Nonexistent document reference",
    status: "warning"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p",
    muted: true,
    size: 1
  }, "This field is currently referencing a document that doesn't exist (ID:", ' ', /*#__PURE__*/_react.default.createElement("code", null, value._ref), "). You can either remove the reference or replace it with an existing document.")), /*#__PURE__*/_react.default.createElement(_changeIndicators.ChangeIndicatorWithProvidedFullPath, {
    path: [],
    hasFocus: focusPath[0] === '_ref',
    value: value === null || value === void 0 ? void 0 : value._ref,
    compareValue: compareValue === null || compareValue === void 0 ? void 0 : compareValue._ref
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      lineHeight: 0
    }
  }, /*#__PURE__*/_react.default.createElement(_ui.Autocomplete, {
    loading: searchState.isLoading,
    ref: ref,
    id: inputId || '',
    options: searchState.hits.map(hit => ({
      value: hit._id,
      hit: hit
    })),
    onFocus: handleFocus,
    onBlur: onBlur,
    radius: 1,
    readOnly: readOnly,
    value: value === null || value === void 0 ? void 0 : value._ref,
    placeholder: readOnly ? '' : placeholder,
    customValidity: errors && errors.length > 0 ? errors[0].item.message : '',
    onQueryChange: handleQueryChange,
    onChange: handleChange,
    filterOption: NO_FILTER,
    renderOption: renderOption,
    renderValue: renderValue,
    openButton: {
      onClick: handleOpenButtonClick
    },
    prefix: /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 1
    }, /*#__PURE__*/_react.default.createElement(_components.IntentButton, {
      disabled: !preview.snapshot,
      icon: _icons.LinkIcon,
      title: preview.snapshot ? "Open ".concat((_preview$snapshot5 = preview.snapshot) === null || _preview$snapshot5 === void 0 ? void 0 : _preview$snapshot5.title) : 'Loadingâ€¦',
      intent: "edit",
      mode: "bleed",
      padding: 2,
      params: preview.snapshot ? {
        id: preview.snapshot._id,
        type: preview.snapshot._type
      } : _empty.EMPTY_OBJECT
    }))
  })))));
});
exports.ReferenceInput = ReferenceInput;