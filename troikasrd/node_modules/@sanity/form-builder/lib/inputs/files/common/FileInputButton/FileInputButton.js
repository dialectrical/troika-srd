"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileInputButton = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactIs = require("react-is");

var _autoId = require("@reach/auto-id");

var _ui = require("@sanity/ui");

var _styles = require("./styles");

var _excluded = ["icon", "id", "accept", "capture", "fontSize", "multiple", "onSelect", "padding", "space", "textAlign", "text"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var FileInputButton = /*#__PURE__*/_react.default.forwardRef(function FileInputButton(props, forwardedRef) {
  var icon = props.icon,
      idProp = props.id,
      accept = props.accept,
      capture = props.capture,
      fontSize = props.fontSize,
      multiple = props.multiple,
      onSelect = props.onSelect,
      _props$padding = props.padding,
      padding = _props$padding === void 0 ? 3 : _props$padding,
      _props$space = props.space,
      space = _props$space === void 0 ? 3 : _props$space,
      textAlign = props.textAlign,
      text = props.text,
      rest = _objectWithoutProperties(props, _excluded);

  var id = (0, _autoId.useId)(idProp);
  var theme = (0, _ui.useTheme)();

  var handleChange = _react.default.useCallback(event => {
    if (onSelect && event.target.files) {
      onSelect(Array.from(event.target.files));
    }
  }, [onSelect]);

  var content = /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    justify: "center",
    padding: padding
  }, icon && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginRight: text ? space : undefined
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: fontSize
  }, /*#__PURE__*/(0, _react.isValidElement)(icon) && icon, (0, _reactIs.isValidElementType)(icon) && /*#__PURE__*/(0, _react.createElement)(icon))), text && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    align: textAlign,
    size: fontSize,
    textOverflow: "ellipsis",
    weight: theme.sanity.button.textWeight
  }, text));

  return /*#__PURE__*/_react.default.createElement(_styles.FileButton, _extends({}, rest, {
    htmlFor: id,
    padding: 0
  }), content, /*#__PURE__*/_react.default.createElement("input", {
    accept: accept,
    capture: capture,
    id: id,
    multiple: multiple,
    onChange: handleChange,
    ref: forwardedRef,
    type: "file",
    value: ""
  }));
});

exports.FileInputButton = FileInputButton;