import React from 'react';
import { Observable, Subscription } from 'rxjs';
declare type Props = {
    documentId: string;
    materialize: (arg0: string) => Observable<Record<string, any>>;
    children: (arg0: any) => null | React.ReactNode;
};
declare type State = {
    materialized: Record<string, any> | null;
};
export default class WithMaterializedDocument extends React.Component<Props, State> {
    state: {
        materialized: any;
    };
    subscription: Subscription | null;
    componentDidMount(): void;
    UNSAFE_componentWillReceiveProps(nextProps: Props): void;
    componentWillUnmount(): void;
    unsubscribe(): void;
    setDocId(docId: string): void;
    render(): React.ReactNode;
}
export {};
//# sourceMappingURL=WithMaterializedDocument.d.ts.map