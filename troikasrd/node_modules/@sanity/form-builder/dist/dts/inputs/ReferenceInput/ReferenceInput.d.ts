import React from 'react';
import { Marker, Path, Reference, ReferenceSchemaType } from '@sanity/types';
import { Observable } from 'rxjs';
import { FormFieldPresence } from '@sanity/base/presence';
import PatchEvent from '../../PatchEvent';
declare type PreviewSnapshot = {
    _id: string;
    _type: string;
    title: string;
    description: string;
};
declare type SearchFunction = (query: string) => Observable<SearchHit[]>;
export declare type Props = {
    value?: Reference;
    compareValue?: Reference;
    type: ReferenceSchemaType;
    markers: Marker[];
    focusPath: Path;
    readOnly?: boolean;
    onSearch: SearchFunction;
    onFocus?: (path: Path) => void;
    onBlur?: () => void;
    getPreviewSnapshot: (reference: Reference) => Observable<PreviewSnapshot | null>;
    onChange: (event: PatchEvent) => void;
    level: number;
    presence: FormFieldPresence[];
};
declare type SearchHit = {
    _id: string;
    _type: string;
};
export declare const ReferenceInput: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLInputElement>>;
export {};
//# sourceMappingURL=ReferenceInput.d.ts.map