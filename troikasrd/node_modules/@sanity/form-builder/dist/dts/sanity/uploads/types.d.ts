import { Observable } from 'rxjs';
import { AssetSourceSpec, SchemaType, AssetMetadataType } from '@sanity/types';
import type { Patch } from '../../patch/types';
export declare type UploadEvent = {
    type: 'uploadEvent';
    patches: Patch[] | null;
};
export declare type ResolvedUploader = {
    uploader: Uploader;
    type: SchemaType;
};
export declare type UploadOptions = {
    metadata?: AssetMetadataType[];
    storeOriginalFilename?: boolean;
    label?: string;
    title?: string;
    description?: string;
    creditLine?: string;
    source?: AssetSourceSpec;
};
export declare type UploaderDef = {
    type: string;
    accepts: string;
    upload: (file: File, type: SchemaType) => Observable<UploadEvent>;
};
export declare type Uploader = {
    type: string;
    accepts: string;
    upload: (file: File, type: SchemaType, options?: UploadOptions) => Observable<UploadEvent>;
    priority: number;
};
export interface FileLike {
    type: string;
    name?: string;
}
export declare type UploaderResolver = (type: SchemaType, file: FileLike) => Uploader | null;
//# sourceMappingURL=types.d.ts.map