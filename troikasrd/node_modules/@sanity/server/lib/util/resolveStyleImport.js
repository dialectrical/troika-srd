"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getStyleResolver;

var _assign2 = _interopRequireDefault(require("lodash/assign"));

var _resolver = require("@sanity/resolver");

var _resolve = _interopRequireDefault(require("resolve"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function resolveStyleImport(moduleId, opts) {
  var id = moduleId.replace(/^\.\/(part|all:)/, '$1');

  if (!isSanityPart(id)) {
    return _resolve.default.sync(id, opts);
  }

  var parts = (0, _resolver.resolveParts)({
    basePath: opts.root,
    sync: true
  });
  var loadAll = id.indexOf('all:') === 0;
  var partName = loadAll ? id.substr(4) : id;
  var part = parts.implementations[partName];

  if (!part) {
    throw new Error("No implementers of part '".concat(partName, "'"));
  }

  var paths = part.map(implementer => implementer.path);
  return loadAll ? paths.reverse() : paths[0];
}

function isSanityPart(part) {
  return /^(all:)?part:[@A-Za-z0-9_-]+\/[A-Za-z0-9_/-]+/.test(part);
}

function getStyleResolver(opts) {
  return function resolveStyleProxy(moduleId, basedir, styleOptions) {
    return resolveStyleImport(moduleId, (0, _assign2.default)({
      root: opts.from,
      basedir
    }, styleOptions));
  };
}