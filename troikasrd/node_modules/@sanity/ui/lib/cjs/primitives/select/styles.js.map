{
  "version": 3,
  "sources": ["../../../../src/primitives/select/styles.ts"],
  "sourcesContent": ["import {css, CSSObject, FlattenSimpleInterpolation} from 'styled-components'\nimport {getResponsiveProp, rem, responsive, ThemeProps} from '../../styles'\nimport {\n  focusRingBorderStyle,\n  focusRingStyle,\n  responsiveInputPaddingIconRightStyle,\n  responsiveRadiusStyle,\n  ResponsiveRadiusStyleProps,\n} from '../../styles/internal'\nimport {ThemeFontSize} from '../../theme'\n\nfunction rootStyle(): FlattenSimpleInterpolation {\n  return css`\n    position: relative;\n    width: stretch;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `\n}\n\nfunction inputBaseStyle(props: ThemeProps): FlattenSimpleInterpolation {\n  const {theme} = props\n  const font = theme.sanity.fonts.text\n\n  return css`\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    border: 0;\n    font-family: ${font.family};\n    color: inherit;\n    width: 100%;\n    outline: none;\n    margin: 0;\n\n    &:disabled {\n      opacity: 1;\n    }\n  `\n}\n\nfunction inputColorStyle(props: ThemeProps) {\n  const {theme} = props\n  const {focusRing, input} = theme.sanity\n  const color = theme.sanity.color.input\n\n  return css`\n    /* enabled */\n    background-color: ${color.default.enabled.bg};\n    color: ${color.default.enabled.fg};\n    box-shadow: ${focusRingBorderStyle({\n      color: color.default.enabled.border,\n      width: input.border.width,\n    })};\n\n    /* hovered */\n    @media (hover: hover) {\n      &:not(:disabled):hover {\n        background-color: ${color.default.hovered.bg};\n        color: ${color.default.hovered.fg};\n        box-shadow: ${focusRingBorderStyle({\n          color: color.default.hovered.border,\n          width: input.border.width,\n        })};\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus {\n      box-shadow: ${focusRingStyle({\n        border: {width: input.border.width, color: color.default.enabled.border},\n        focusRing,\n      })};\n    }\n\n    /* read-only */\n    &[data-read-only] {\n      background-color: ${color.default.readOnly.bg};\n      color: ${color.default.readOnly.fg};\n      box-shadow: ${focusRingBorderStyle({\n        color: color.default.readOnly.border,\n        width: input.border.width,\n      })};\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled {\n      background-color: ${color.default.disabled.bg};\n      color: ${color.default.disabled.fg};\n      box-shadow: ${focusRingBorderStyle({\n        color: color.default.disabled.border,\n        width: input.border.width,\n      })};\n    }\n  `\n}\n\nfunction textSize(size: ThemeFontSize) {\n  return {fontSize: rem(size.fontSize), lineHeight: rem(size.lineHeight)}\n}\n\nfunction inputTextSizeStyle(props: {$fontSize?: number | number[]} & ThemeProps) {\n  const {theme, $fontSize} = props\n  const {sizes} = theme.sanity.fonts.text\n\n  return responsive(theme.sanity.media, getResponsiveProp($fontSize), (sizeIndex) =>\n    textSize(sizes[sizeIndex] || sizes[2])\n  )\n}\n\nfunction inputStyle(): Array<\n  | ((props: ResponsiveRadiusStyleProps & ThemeProps) => CSSObject[])\n  | ((props: ThemeProps) => FlattenSimpleInterpolation)\n> {\n  return [\n    responsiveRadiusStyle,\n    inputBaseStyle,\n    inputColorStyle,\n    inputTextSizeStyle,\n    responsiveInputPaddingIconRightStyle,\n  ]\n}\n\nfunction iconBoxStyle(props: ThemeProps): FlattenSimpleInterpolation {\n  const {theme} = props\n  const color = theme.sanity.color.input\n\n  return css`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    /* enabled */\n    --card-fg-color: ${color.default.enabled.fg};\n\n    /* hover */\n    @media (hover: hover) {\n      select:not(disabled):not(:read-only):hover + && {\n        --card-fg-color: ${color.default.hovered.fg};\n      }\n    }\n\n    /* disabled */\n    select:disabled + && {\n      --card-fg-color: ${color.default.disabled.fg};\n    }\n\n    /* read-only */\n    select[data-read-only] + && {\n      --card-fg-color: ${color.default.readOnly.fg};\n    }\n  `\n}\n\nexport const selectStyle = {\n  root: rootStyle,\n  input: inputStyle,\n  iconBox: iconBoxStyle,\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,+BAAyD;AACzD,oBAA6D;AAC7D,sBAMO;AAGP,qBAAiD;AAC/C,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUT,wBAAwB,OAA+C;AACrE,QAAM,EAAC,UAAS;AAChB,QAAM,OAAO,MAAM,OAAO,MAAM;AAEhC,SAAO;AAAA;AAAA;AAAA;AAAA,mBAIU,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYxB,yBAAyB,OAAmB;AAC1C,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,WAAW,UAAS,MAAM;AACjC,QAAM,QAAQ,MAAM,OAAO,MAAM;AAEjC,SAAO;AAAA;AAAA,wBAEe,MAAM,QAAQ,QAAQ;AAAA,aACjC,MAAM,QAAQ,QAAQ;AAAA,kBACjB,0CAAqB;AAAA,IACjC,OAAO,MAAM,QAAQ,QAAQ;AAAA,IAC7B,OAAO,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAME,MAAM,QAAQ,QAAQ;AAAA,iBACjC,MAAM,QAAQ,QAAQ;AAAA,sBACjB,0CAAqB;AAAA,IACjC,OAAO,MAAM,QAAQ,QAAQ;AAAA,IAC7B,OAAO,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOV,oCAAe;AAAA,IAC3B,QAAQ,EAAC,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,QAAQ,QAAQ;AAAA,IACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMkB,MAAM,QAAQ,SAAS;AAAA,eAClC,MAAM,QAAQ,SAAS;AAAA,oBAClB,0CAAqB;AAAA,IACjC,OAAO,MAAM,QAAQ,SAAS;AAAA,IAC9B,OAAO,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMF,MAAM,QAAQ,SAAS;AAAA,eAClC,MAAM,QAAQ,SAAS;AAAA,oBAClB,0CAAqB;AAAA,IACjC,OAAO,MAAM,QAAQ,SAAS;AAAA,IAC9B,OAAO,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAM5B,kBAAkB,MAAqB;AACrC,SAAO,EAAC,UAAU,uBAAI,KAAK,WAAW,YAAY,uBAAI,KAAK;AAAA;AAG7D,4BAA4B,OAAqD;AAC/E,QAAM,EAAC,OAAO,cAAa;AAC3B,QAAM,EAAC,UAAS,MAAM,OAAO,MAAM;AAEnC,SAAO,8BAAW,MAAM,OAAO,OAAO,qCAAkB,YAAY,CAAC,cACnE,SAAS,MAAM,cAAc,MAAM;AAAA;AAIvC,sBAGE;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIJ,sBAAsB,OAA+C;AACnE,QAAM,EAAC,UAAS;AAChB,QAAM,QAAQ,MAAM,OAAO,MAAM;AAEjC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOc,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAKlB,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAMxB,MAAM,QAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,yBAKvB,MAAM,QAAQ,SAAS;AAAA;AAAA;AAAA;AAKzC,MAAM,cAAc;AAAA,EACzB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,SAAS;AAAA;",
  "names": []
}
