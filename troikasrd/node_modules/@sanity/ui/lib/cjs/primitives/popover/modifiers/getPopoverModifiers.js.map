{
  "version": 3,
  "sources": ["../../../../../src/primitives/popover/modifiers/getPopoverModifiers.ts"],
  "sourcesContent": ["import maxSizeModifier from 'popper-max-size-modifier'\nimport {Modifier} from 'react-popper'\nimport {PopoverModifiersProps} from './types'\n\n/*\n\nThe order of popper phases:\n\n- beforeRead\n- read\n- afterRead\n- beforeMain\n- main\n- afterMain\n- beforeWrite\n- write\n- afterWrite\n\n*/\n\nexport function getPopoverModifiers(props: PopoverModifiersProps): Modifier<any, any>[] {\n  const {\n    allowedAutoPlacements,\n    arrow,\n    arrowElement,\n    boundaryElement,\n    constrainSize,\n    distance,\n    fallbackPlacements,\n    margins,\n    matchReferenceWidth,\n    open,\n    preventOverflow,\n    skidding,\n    tether,\n    tetherOffset,\n  } = props\n\n  // NOTE: For later viewers:\n  // Prior to adding this change, the popover would get `maxWidth: 0` the 2nd time it\n  // was opened, when used with `constrainSize`. I was looking for a way to \"reset\"\n  // the size of the popover as measured by Popper.js, and this seems to be a workaround.\n  if (!open) {\n    return []\n  }\n\n  const detectOverflowOptions = {\n    altAxis: true,\n    boundary: boundaryElement || undefined,\n    padding: 8,\n    tether,\n    tetherOffset,\n  }\n\n  return [\n    constrainSize && {\n      ...maxSizeModifier,\n      options: detectOverflowOptions,\n    },\n    constrainSize && {\n      name: 'applyMaxSize',\n      enabled: true,\n      phase: 'beforeWrite',\n      requires: ['maxSize'],\n      fn({state}: any) {\n        const {width, height} = state.modifiersData.maxSize\n\n        state.styles.popper = {\n          ...state.styles.popper,\n          maxWidth: `${width}px`,\n          maxHeight: `${height}px`,\n        }\n      },\n    },\n    arrow && {\n      name: 'arrow',\n      options: {\n        element: arrowElement,\n        padding: 4,\n      },\n    },\n    (constrainSize || preventOverflow) && {\n      name: 'preventOverflow',\n      options: detectOverflowOptions,\n    },\n    {\n      name: 'offset',\n      options: {\n        offset: [skidding, distance],\n      },\n    },\n    margins && {\n      name: 'margins',\n      enabled: true,\n      phase: 'beforeRead',\n      fn: ({state}: any) => {\n        const {rects} = state\n\n        if (rects.reference) {\n          rects.reference.x += margins[3]\n          rects.reference.y += margins[1]\n          rects.reference.width -= margins[1] + margins[3]\n          rects.reference.height -= margins[0] + margins[2]\n        }\n      },\n    },\n    {\n      name: 'flip',\n      options: {\n        allowedAutoPlacements,\n        boundary: boundaryElement || undefined,\n        fallbackPlacements,\n        padding: 8,\n      },\n    },\n    matchReferenceWidth && {\n      name: 'matchWidth',\n      enabled: true,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn({state}: any) {\n        const {width} = state.rects.reference\n\n        state.styles.popper.width = `${width}px`\n      },\n      effect: ({state}: any) => {\n        const refElement = state.elements.reference\n\n        if (refElement instanceof HTMLElement) {\n          state.elements.popper.style.width = `${\n            refElement.offsetWidth - (margins ? margins[1] + margins[3] : 0)\n          }px`\n        }\n      },\n    },\n  ].filter(Boolean) as Modifier<any, any>[]\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,sCAA4B;AAoBrB,6BAA6B,OAAoD;AACtF,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MACE;AAMJ,MAAI,CAAC,MAAM;AACT,WAAO;AAAA;AAGT,QAAM,wBAAwB;AAAA,IAC5B,SAAS;AAAA,IACT,UAAU,mBAAmB;AAAA,IAC7B,SAAS;AAAA,IACT;AAAA,IACA;AAAA;AAGF,SAAO;AAAA,IACL,iBAAiB,iCACZ,0CADY;AAAA,MAEf,SAAS;AAAA;AAAA,IAEX,iBAAiB;AAAA,MACf,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MACP,UAAU,CAAC;AAAA,MACX,GAAG,EAAC,SAAa;AACf,cAAM,EAAC,OAAO,WAAU,MAAM,cAAc;AAE5C,cAAM,OAAO,SAAS,iCACjB,MAAM,OAAO,SADI;AAAA,UAEpB,UAAU,GAAG;AAAA,UACb,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA,IAIpB,SAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA;AAAA;AAAA,IAGZ,kBAAiB,oBAAoB;AAAA,MACpC,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,IAEX;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,QACP,QAAQ,CAAC,UAAU;AAAA;AAAA;AAAA,IAGvB,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MACP,IAAI,CAAC,EAAC,YAAgB;AACpB,cAAM,EAAC,UAAS;AAEhB,YAAI,MAAM,WAAW;AACnB,gBAAM,UAAU,KAAK,QAAQ;AAC7B,gBAAM,UAAU,KAAK,QAAQ;AAC7B,gBAAM,UAAU,SAAS,QAAQ,KAAK,QAAQ;AAC9C,gBAAM,UAAU,UAAU,QAAQ,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,IAIrD;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,QACA,UAAU,mBAAmB;AAAA,QAC7B;AAAA,QACA,SAAS;AAAA;AAAA;AAAA,IAGb,uBAAuB;AAAA,MACrB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MACP,UAAU,CAAC;AAAA,MACX,GAAG,EAAC,SAAa;AACf,cAAM,EAAC,UAAS,MAAM,MAAM;AAE5B,cAAM,OAAO,OAAO,QAAQ,GAAG;AAAA;AAAA,MAEjC,QAAQ,CAAC,EAAC,YAAgB;AACxB,cAAM,aAAa,MAAM,SAAS;AAElC,YAAI,sBAAsB,aAAa;AACrC,gBAAM,SAAS,OAAO,MAAM,QAAQ,GAClC,WAAW,cAAe,WAAU,QAAQ,KAAK,QAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,IAKtE,OAAO;AAAA;",
  "names": []
}
