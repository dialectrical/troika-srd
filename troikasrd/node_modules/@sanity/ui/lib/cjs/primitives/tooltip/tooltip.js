var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  Tooltip: () => Tooltip
});
var import_react = __toModule(require("react"));
var import_react_popper = __toModule(require("react-popper"));
var import_styled_components = __toModule(require("styled-components"));
var import_hooks = __toModule(require("../../hooks"));
var import_theme = __toModule(require("../../theme"));
var import_utils = __toModule(require("../../utils"));
var import_card = __toModule(require("../card"));
var import_tooltipArrow = __toModule(require("./tooltipArrow"));
const Root = (0, import_styled_components.default)(import_utils.Layer)`
  pointer-events: none;
`;
const Tooltip = (0, import_react.forwardRef)(function Tooltip2(props, ref) {
  var _a;
  const boundaryElementContext = (0, import_utils.useBoundaryElement)();
  const theme = (0, import_theme.useTheme)();
  const _b = props, {
    allowedAutoPlacements,
    boundaryElement = boundaryElementContext == null ? void 0 : boundaryElementContext.element,
    children,
    content,
    disabled,
    fallbackPlacements,
    placement = "bottom",
    portal,
    zOffset = (_a = theme.sanity.layer) == null ? void 0 : _a.tooltip.zOffset
  } = _b, restProps = __objRest(_b, [
    "allowedAutoPlacements",
    "boundaryElement",
    "children",
    "content",
    "disabled",
    "fallbackPlacements",
    "placement",
    "portal",
    "zOffset"
  ]);
  const forwardedRef = (0, import_hooks.useForwardedRef)(ref);
  const [referenceElement, setReferenceElement] = (0, import_react.useState)(null);
  const [popperElement, setPopperElement] = (0, import_react.useState)(null);
  const [arrowElement, setArrowElement] = (0, import_react.useState)(null);
  const popper = (0, import_react_popper.usePopper)(referenceElement, popperElement, {
    placement,
    modifiers: [
      {
        name: "arrow",
        options: {
          element: arrowElement,
          padding: 4
        }
      },
      {
        name: "preventOverflow",
        options: {
          altAxis: true,
          boundary: boundaryElement || void 0,
          padding: 4
        }
      },
      {
        name: "offset",
        options: { offset: [0, 3] }
      },
      {
        name: "flip",
        options: {
          allowedAutoPlacements,
          fallbackPlacements
        }
      }
    ]
  });
  const { forceUpdate } = popper;
  const [isOpen, setIsOpen] = (0, import_react.useState)(false);
  const handleBlur = (0, import_react.useCallback)(() => setIsOpen(false), []);
  const handleFocus = (0, import_react.useCallback)(() => setIsOpen(true), []);
  const handleMouseEnter = (0, import_react.useCallback)(() => setIsOpen(true), []);
  const handleMouseLeave = (0, import_react.useCallback)(() => setIsOpen(false), []);
  (0, import_react.useEffect)(() => {
    if (forceUpdate)
      forceUpdate();
  }, [forceUpdate, content]);
  (0, import_react.useEffect)(() => {
    if (disabled)
      setIsOpen(false);
  }, [disabled]);
  (0, import_react.useEffect)(() => {
    if (!content)
      setIsOpen(false);
  }, [content]);
  const setRef = (el) => {
    setPopperElement(el);
    forwardedRef.current = el;
  };
  if (!children)
    return /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null);
  if (disabled)
    return children;
  const referenceProps = {
    onBlur: handleBlur,
    onFocus: handleFocus,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    ref: setReferenceElement
  };
  const referenceNode = (0, import_react.cloneElement)(children, referenceProps);
  const popperNode = /* @__PURE__ */ import_react.default.createElement(Root, __spreadProps(__spreadValues(__spreadValues({
    "data-ui": "Tooltip"
  }, restProps), popper.attributes.popper), {
    ref: setRef,
    style: popper.styles.popper,
    zOffset
  }), /* @__PURE__ */ import_react.default.createElement(import_card.Card, {
    radius: 2,
    shadow: 3
  }, content, /* @__PURE__ */ import_react.default.createElement(import_tooltipArrow.TooltipArrow, {
    ref: setArrowElement,
    style: popper.styles.arrow
  })));
  return /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, referenceNode, isOpen && /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, portal && /* @__PURE__ */ import_react.default.createElement(import_utils.Portal, null, popperNode), !portal && popperNode));
});
