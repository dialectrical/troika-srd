{
  "version": 3,
  "sources": ["../../../../src/primitives/avatar/avatar.tsx"],
  "sourcesContent": ["import {useId} from '@reach/auto-id'\nimport React, {forwardRef, useCallback, useEffect, useState} from 'react'\nimport ReactIs from 'react-is'\nimport styled from 'styled-components'\nimport {useResponsiveProp} from '../../hooks'\nimport {ThemeColorSpotKey, useTheme} from '../../theme'\nimport {AvatarPosition, AvatarSize, AvatarStatus} from '../../types'\nimport {Text} from '../text'\nimport {avatarStyle, responsiveAvatarSizeStyle} from './styles'\n\n/**\n * @public\n */\nexport interface AvatarProps {\n  animateArrowFrom?: AvatarPosition\n  arrowPosition?: AvatarPosition\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  color?: ThemeColorSpotKey\n  initials?: string\n  onImageLoadError?: (event: Error) => void\n  size?: AvatarSize | AvatarSize[]\n  src?: string\n  /**\n   * The status of the entity this Avatar represents.\n   * @alpha\n   */\n  status?: AvatarStatus\n  title?: string\n}\n\nconst Root = styled.div<{$color: string; $size: AvatarSize[]}>(\n  responsiveAvatarSizeStyle,\n  avatarStyle.root\n)\n\nconst Arrow = styled.div(avatarStyle.arrow)\n\nconst BgStroke = styled.ellipse(avatarStyle.bgStroke)\n\nconst Stroke = styled.ellipse(avatarStyle.stroke)\n\nconst Initials = styled.div(avatarStyle.initials)\n\n/**\n * @public\n */\nexport const Avatar = forwardRef(function Avatar(\n  props: AvatarProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    as: asProp,\n    color: colorKey = 'gray',\n    src,\n    title,\n    initials,\n    onImageLoadError,\n    arrowPosition: arrowPositionProp,\n    animateArrowFrom,\n    status = 'online',\n    size: sizeProp,\n    ...restProps\n  } = props\n  const as = ReactIs.isValidElementType(asProp) ? asProp : 'div'\n  const size: AvatarSize[] = useResponsiveProp(sizeProp, [0])\n  const theme = useTheme()\n  const color = theme.sanity.color.spot[colorKey] || theme.sanity.color.spot.gray\n\n  // @todo: remove this\n  const avatarSize = theme.sanity.avatar.sizes[size[0]] || theme.sanity.avatar.sizes[0]\n  const _sizeRem = avatarSize.size\n  const _radius = _sizeRem / 2\n\n  const elementId = useId() || ''\n  const [arrowPosition, setArrowPosition] = useState<AvatarPosition | undefined>(\n    animateArrowFrom || arrowPositionProp || 'inside'\n  )\n\n  const [imageFailed, setImageFailed] = useState<boolean>(false)\n\n  const imageId = `avatar-image-${elementId}`\n\n  useEffect(() => {\n    if (arrowPosition === arrowPositionProp) return undefined\n\n    // Start animation in the next frame\n    const raf = requestAnimationFrame(() => setArrowPosition(arrowPositionProp))\n\n    return () => cancelAnimationFrame(raf)\n  }, [arrowPosition, arrowPositionProp])\n\n  useEffect(() => {\n    if (src) setImageFailed(false)\n  }, [src])\n\n  const handleImageError = useCallback(() => {\n    setImageFailed(true)\n\n    if (onImageLoadError) {\n      onImageLoadError(new Error('Avatar: the image failed to load'))\n    }\n  }, [onImageLoadError])\n\n  return (\n    <Root\n      as={as}\n      data-as={typeof as === 'string' ? as : undefined}\n      data-ui=\"Avatar\"\n      {...restProps}\n      $size={size}\n      $color={color}\n      aria-label={title}\n      data-arrow-position={arrowPosition}\n      data-status={status}\n      ref={ref}\n      title={title}\n    >\n      <Arrow>\n        <svg width=\"11\" height=\"7\" viewBox=\"0 0 11 7\" fill=\"none\">\n          <path\n            d=\"M6.67948 1.50115L11 7L0 7L4.32052 1.50115C4.92109 0.736796 6.07891 0.736795 6.67948 1.50115Z\"\n            fill={color}\n          />\n        </svg>\n      </Arrow>\n\n      {!imageFailed && src && (\n        <svg viewBox={`0 0 ${_sizeRem} ${_sizeRem}`} fill=\"none\">\n          <defs>\n            <pattern id={imageId} patternContentUnits=\"objectBoundingBox\" width=\"1\" height=\"1\">\n              <image href={src} width=\"1\" height=\"1\" onError={handleImageError} />\n            </pattern>\n          </defs>\n\n          <circle cx={_radius} cy={_radius} r={_radius} fill={`url(#${imageId})`} />\n          <BgStroke\n            cx={_radius}\n            cy={_radius}\n            rx={_radius}\n            ry={_radius}\n            vectorEffect=\"non-scaling-stroke\"\n          />\n          <Stroke\n            cx={_radius}\n            cy={_radius}\n            rx={_radius}\n            ry={_radius}\n            stroke={color}\n            vectorEffect=\"non-scaling-stroke\"\n          />\n        </svg>\n      )}\n\n      {(imageFailed || !src) && initials && (\n        <>\n          <Initials>\n            <Text as=\"span\" size={size.map((s) => (s === 0 ? 0 : s + 1))}>\n              <strong>{initials}</strong>\n            </Text>\n          </Initials>\n        </>\n      )}\n    </Root>\n  )\n})\n"],
  "mappings": "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",
  "names": []
}
