var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  AvatarCounter: () => AvatarCounter
});
var import_react = __toModule(require("react"));
var import_styled_components = __toModule(require("styled-components"));
var import_constants = __toModule(require("../../constants"));
var import_hooks = __toModule(require("../../hooks"));
var import_styles = __toModule(require("../../styles"));
var import_text = __toModule(require("../text"));
function responsiveAvatarCounterSizeStyle(props) {
  const { theme } = props;
  const { avatar, media } = theme.sanity;
  return (0, import_styles.responsive)(media, props.$size, (size) => {
    const avatarSize = avatar.sizes[size];
    if (!avatarSize)
      return import_constants.EMPTY_RECORD;
    return {
      borderRadius: (0, import_styles.rem)(avatarSize.size / 2),
      minWidth: (0, import_styles.rem)(avatarSize.size),
      height: (0, import_styles.rem)(avatarSize.size)
    };
  });
}
function avatarCounterBaseStyle(props) {
  const { theme } = props;
  return import_styled_components.css`
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    user-select: none;
    color: inherit;
    color: var(--card-fg-color);
    background: var(--card-bg-color);
    box-shadow: 0 0 0 1px var(--card-bg-color), inset 0 0 0 1.5px var(--card-hairline-hard-color);
    padding: 0 ${(0, import_styles.rem)(theme.sanity.space[2])};

    &:not([hidden]) {
      display: flex;
    }
  `;
}
const Root = import_styled_components.default.div(responsiveAvatarCounterSizeStyle, avatarCounterBaseStyle);
const AvatarCounter = (0, import_react.forwardRef)(function AvatarCounter2(props, ref) {
  const { count, size: sizeProp = 0, tone } = props;
  const size = (0, import_hooks.useResponsiveProp)(sizeProp, [0]);
  return /* @__PURE__ */ import_react.default.createElement(Root, {
    $size: size,
    "data-tone": tone,
    ref
  }, /* @__PURE__ */ import_react.default.createElement(import_text.Text, {
    as: "span",
    size: size.map((s) => s === 0 ? 0 : s + 1)
  }, /* @__PURE__ */ import_react.default.createElement("strong", null, count)));
});
