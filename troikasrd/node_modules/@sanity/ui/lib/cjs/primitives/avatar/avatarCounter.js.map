{
  "version": 3,
  "sources": ["../../../../src/primitives/avatar/avatarCounter.tsx"],
  "sourcesContent": ["import React, {forwardRef} from 'react'\nimport styled, {css} from 'styled-components'\nimport {EMPTY_RECORD} from '../../constants'\nimport {useResponsiveProp} from '../../hooks'\nimport {rem, responsive, ThemeProps} from '../../styles'\nimport {AvatarSize} from '../../types'\nimport {Text} from '../text'\n\nfunction responsiveAvatarCounterSizeStyle(props: {$size: AvatarSize[]} & ThemeProps) {\n  const {theme} = props\n  const {avatar, media} = theme.sanity\n\n  return responsive(media, props.$size, (size) => {\n    const avatarSize = avatar.sizes[size]\n\n    if (!avatarSize) return EMPTY_RECORD\n\n    return {\n      borderRadius: rem(avatarSize.size / 2),\n      minWidth: rem(avatarSize.size),\n      height: rem(avatarSize.size),\n    }\n  })\n}\n\nfunction avatarCounterBaseStyle(props: ThemeProps) {\n  const {theme} = props\n\n  return css`\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    user-select: none;\n    color: inherit;\n    color: var(--card-fg-color);\n    background: var(--card-bg-color);\n    box-shadow: 0 0 0 1px var(--card-bg-color), inset 0 0 0 1.5px var(--card-hairline-hard-color);\n    padding: 0 ${rem(theme.sanity.space[2])};\n\n    &:not([hidden]) {\n      display: flex;\n    }\n  `\n}\n\nconst Root = styled.div<{$size: AvatarSize[]}>(\n  responsiveAvatarCounterSizeStyle,\n  avatarCounterBaseStyle\n)\n\n/**\n * @public\n */\nexport interface AvatarCounterProps {\n  count: number\n  size?: AvatarSize | AvatarSize[]\n  tone?: 'navbar'\n}\n\n/**\n * @public\n */\nexport const AvatarCounter = forwardRef(function AvatarCounter(\n  props: AvatarCounterProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const {count, size: sizeProp = 0, tone} = props\n  const size: AvatarSize[] = useResponsiveProp(sizeProp, [0])\n\n  return (\n    <Root $size={size} data-tone={tone} ref={ref}>\n      <Text as=\"span\" size={size.map((s) => (s === 0 ? 0 : s + 1))}>\n        <strong>{count}</strong>\n      </Text>\n    </Root>\n  )\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAChC,+BAA0B;AAC1B,uBAA2B;AAC3B,mBAAgC;AAChC,oBAA0C;AAE1C,kBAAmB;AAEnB,0CAA0C,OAA2C;AACnF,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,QAAQ,UAAS,MAAM;AAE9B,SAAO,8BAAW,OAAO,MAAM,OAAO,CAAC,SAAS;AAC9C,UAAM,aAAa,OAAO,MAAM;AAEhC,QAAI,CAAC;AAAY,aAAO;AAExB,WAAO;AAAA,MACL,cAAc,uBAAI,WAAW,OAAO;AAAA,MACpC,UAAU,uBAAI,WAAW;AAAA,MACzB,QAAQ,uBAAI,WAAW;AAAA;AAAA;AAAA;AAK7B,gCAAgC,OAAmB;AACjD,QAAM,EAAC,UAAS;AAEhB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBASQ,uBAAI,MAAM,OAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQxC,MAAM,OAAO,iCAAO,IAClB,kCACA;AAeK,MAAM,gBAAgB,6BAAW,wBACtC,OACA,KACA;AACA,QAAM,EAAC,OAAO,MAAM,WAAW,GAAG,SAAQ;AAC1C,QAAM,OAAqB,oCAAkB,UAAU,CAAC;AAExD,SACE,mDAAC,MAAD;AAAA,IAAM,OAAO;AAAA,IAAM,aAAW;AAAA,IAAM;AAAA,KAClC,mDAAC,kBAAD;AAAA,IAAM,IAAG;AAAA,IAAO,MAAM,KAAK,IAAI,CAAC,MAAO,MAAM,IAAI,IAAI,IAAI;AAAA,KACvD,mDAAC,UAAD,MAAS;AAAA;",
  "names": []
}
