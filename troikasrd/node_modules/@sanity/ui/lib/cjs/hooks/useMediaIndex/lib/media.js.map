{
  "version": 3,
  "sources": ["../../../../../src/hooks/useMediaIndex/lib/media.ts"],
  "sourcesContent": ["/**\n * @internal\n */\nexport interface _MediaManager {\n  getCurrentIndex: () => number\n  subscribe: (subscriber: (index: number) => void) => () => void\n}\n\nconst MEDIA_MANAGER_CACHE = new WeakMap<number[], _MediaManager>()\n\nfunction _getMediaQuery(media: number[], index: number) {\n  if (index === 0) {\n    return `screen and (max-width: ${media[index] - 1}px)`\n  }\n\n  if (index === media.length) {\n    return `screen and (min-width: ${media[index - 1]}px)`\n  }\n\n  return `screen and (min-width: ${media[index - 1]}px) and (max-width: ${media[index] - 1}px)`\n}\n\nfunction _createMediaManager(media: number[]): _MediaManager {\n  const mediaLen = media.length\n  const sizes: {mq: MediaQueryList; index: number}[] = []\n\n  if (typeof window !== 'undefined') {\n    for (let index = mediaLen; index > -1; index -= 1) {\n      const mediaQuery = _getMediaQuery(media, index)\n\n      sizes.push({index, mq: window.matchMedia(mediaQuery)})\n    }\n  }\n\n  const getCurrentIndex = () => {\n    for (const {index, mq} of sizes) {\n      if (mq.matches) return index\n    }\n\n    return 0\n  }\n\n  const subscribe = (subscriber: (index: number) => void) => {\n    const disposeFns: (() => void)[] = []\n\n    for (const {index, mq} of sizes) {\n      const handleChange = () => {\n        if (mq.matches) subscriber(index)\n      }\n\n      if (mq.addEventListener) {\n        mq.addEventListener('change', handleChange)\n      } else {\n        mq.addListener(handleChange)\n      }\n\n      disposeFns.push(() => {\n        if (mq.removeEventListener) {\n          mq.removeEventListener('change', handleChange)\n        } else {\n          mq.removeListener(handleChange)\n        }\n      })\n    }\n\n    return () => {\n      for (const disposeFn of disposeFns) {\n        disposeFn()\n      }\n    }\n  }\n\n  return {getCurrentIndex, subscribe}\n}\n\n/**\n * @internal\n */\nexport function _getMediaManager(media: number[]): _MediaManager {\n  let manager = MEDIA_MANAGER_CACHE.get(media)\n\n  if (!manager) {\n    manager = _createMediaManager(media)\n    MEDIA_MANAGER_CACHE.set(media, manager)\n  }\n\n  return manager\n}\n"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAQA,MAAM,sBAAsB,IAAI;AAEhC,wBAAwB,OAAiB,OAAe;AACtD,MAAI,UAAU,GAAG;AACf,WAAO,0BAA0B,MAAM,SAAS;AAAA;AAGlD,MAAI,UAAU,MAAM,QAAQ;AAC1B,WAAO,0BAA0B,MAAM,QAAQ;AAAA;AAGjD,SAAO,0BAA0B,MAAM,QAAQ,yBAAyB,MAAM,SAAS;AAAA;AAGzF,6BAA6B,OAAgC;AAC3D,QAAM,WAAW,MAAM;AACvB,QAAM,QAA+C;AAErD,MAAI,OAAO,WAAW,aAAa;AACjC,aAAS,QAAQ,UAAU,QAAQ,IAAI,SAAS,GAAG;AACjD,YAAM,aAAa,eAAe,OAAO;AAEzC,YAAM,KAAK,EAAC,OAAO,IAAI,OAAO,WAAW;AAAA;AAAA;AAI7C,QAAM,kBAAkB,MAAM;AAC5B,eAAW,EAAC,OAAO,QAAO,OAAO;AAC/B,UAAI,GAAG;AAAS,eAAO;AAAA;AAGzB,WAAO;AAAA;AAGT,QAAM,YAAY,CAAC,eAAwC;AACzD,UAAM,aAA6B;AAEnC,eAAW,EAAC,OAAO,QAAO,OAAO;AAC/B,YAAM,eAAe,MAAM;AACzB,YAAI,GAAG;AAAS,qBAAW;AAAA;AAG7B,UAAI,GAAG,kBAAkB;AACvB,WAAG,iBAAiB,UAAU;AAAA,aACzB;AACL,WAAG,YAAY;AAAA;AAGjB,iBAAW,KAAK,MAAM;AACpB,YAAI,GAAG,qBAAqB;AAC1B,aAAG,oBAAoB,UAAU;AAAA,eAC5B;AACL,aAAG,eAAe;AAAA;AAAA;AAAA;AAKxB,WAAO,MAAM;AACX,iBAAW,aAAa,YAAY;AAClC;AAAA;AAAA;AAAA;AAKN,SAAO,EAAC,iBAAiB;AAAA;AAMpB,0BAA0B,OAAgC;AAC/D,MAAI,UAAU,oBAAoB,IAAI;AAEtC,MAAI,CAAC,SAAS;AACZ,cAAU,oBAAoB;AAC9B,wBAAoB,IAAI,OAAO;AAAA;AAGjC,SAAO;AAAA;",
  "names": []
}
