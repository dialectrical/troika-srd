{
  "version": 3,
  "sources": ["../../../src/hooks/useForwardedRef.ts"],
  "sourcesContent": ["import React, {useRef} from 'react'\nimport {useIsomorphicEffect} from './useIsomorphicEffect'\n\n/**\n * @beta\n */\nexport function useForwardedRef<T>(ref: React.ForwardedRef<T>): React.MutableRefObject<T | null> {\n  const innerRef = useRef<T | null>(null)\n\n  useIsomorphicEffect(() => {\n    if (!ref) return\n\n    if (typeof ref === 'function') {\n      ref(innerRef.current)\n    } else {\n      ref.current = innerRef.current\n    }\n  })\n\n  return innerRef\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAA4B;AAC5B,iCAAkC;AAK3B,yBAA4B,KAA8D;AAC/F,QAAM,WAAW,yBAAiB;AAElC,sDAAoB,MAAM;AACxB,QAAI,CAAC;AAAK;AAEV,QAAI,OAAO,QAAQ,YAAY;AAC7B,UAAI,SAAS;AAAA,WACR;AACL,UAAI,UAAU,SAAS;AAAA;AAAA;AAI3B,SAAO;AAAA;",
  "names": []
}
