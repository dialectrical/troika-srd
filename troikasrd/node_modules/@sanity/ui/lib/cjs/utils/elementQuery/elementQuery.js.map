{
  "version": 3,
  "sources": ["../../../../src/utils/elementQuery/elementQuery.tsx"],
  "sourcesContent": ["import React, {forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useForwardedRef} from '../../hooks'\nimport {useTheme} from '../../theme'\nimport {ResizeObserver} from '../resizeObserver'\nimport {findMaxBreakpoints, findMinBreakpoints} from './helpers'\n\n/**\n * DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface MediaQueryProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  media?: number[]\n}\n\n/**\n * DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const ElementQuery = forwardRef(function ElementQuery(\n  props: MediaQueryProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'media'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const theme = useTheme()\n  const {children, media = theme.sanity.media, ...restProps} = props\n  const [width, setWidth] = useState(() => window.innerWidth)\n  const forwardedRef = useForwardedRef(ref)\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (!element) return\n\n    const handleResizeEntries: ResizeObserverCallback = (entries) => {\n      setWidth(entries[0].contentRect.width)\n    }\n\n    const ro = new ResizeObserver(handleResizeEntries)\n\n    ro.observe(element)\n\n    return () => ro.disconnect()\n  }, [element])\n\n  const max = useMemo(() => findMaxBreakpoints(media, width), [media, width])\n  const min = useMemo(() => findMinBreakpoints(media, width), [media, width])\n\n  const setRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      forwardedRef.current = el\n      setElement(el)\n    },\n    [forwardedRef]\n  )\n\n  return (\n    <div\n      data-ui=\"ElementQuery\"\n      {...restProps}\n      data-eq-max={max.length ? max.join(' ') : undefined}\n      data-eq-min={min.length ? min.join(' ') : undefined}\n      ref={setRef}\n    >\n      {children}\n    </div>\n  )\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAA2E;AAC3E,mBAA8B;AAC9B,mBAAuB;AACvB,4BAA6B;AAC7B,qBAAqD;AAe9C,MAAM,eAAe,6BAAW,uBACrC,OACA,KACA;AACA,QAAM,QAAQ;AACd,QAA6D,YAAtD,YAAU,QAAQ,MAAM,OAAO,UAAuB,IAAb,sBAAa,IAAb,CAAzC,YAAU;AACjB,QAAM,CAAC,OAAO,YAAY,2BAAS,MAAM,OAAO;AAChD,QAAM,eAAe,kCAAgB;AACrC,QAAM,CAAC,SAAS,cAAc,2BAAgC;AAE9D,8BAAU,MAAM;AACd,QAAI,CAAC;AAAS;AAEd,UAAM,sBAA8C,CAAC,YAAY;AAC/D,eAAS,QAAQ,GAAG,YAAY;AAAA;AAGlC,UAAM,KAAK,IAAI,qCAAe;AAE9B,OAAG,QAAQ;AAEX,WAAO,MAAM,GAAG;AAAA,KACf,CAAC;AAEJ,QAAM,MAAM,0BAAQ,MAAM,uCAAmB,OAAO,QAAQ,CAAC,OAAO;AACpE,QAAM,MAAM,0BAAQ,MAAM,uCAAmB,OAAO,QAAQ,CAAC,OAAO;AAEpE,QAAM,SAAS,8BACb,CAAC,OAA8B;AAC7B,iBAAa,UAAU;AACvB,eAAW;AAAA,KAEb,CAAC;AAGH,SACE,mDAAC,OAAD;AAAA,IACE,WAAQ;AAAA,KACJ,YAFN;AAAA,IAGE,eAAa,IAAI,SAAS,IAAI,KAAK,OAAO;AAAA,IAC1C,eAAa,IAAI,SAAS,IAAI,KAAK,OAAO;AAAA,IAC1C,KAAK;AAAA,MAEJ;AAAA;",
  "names": []
}
