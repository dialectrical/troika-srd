var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  Dialog: () => Dialog
});
var import_icons = __toModule(require("@sanity/icons"));
var import_react = __toModule(require("react"));
var import_styled_components = __toModule(require("styled-components"));
var import_helpers = __toModule(require("../../helpers"));
var import_hooks = __toModule(require("../../hooks"));
var import_primitives = __toModule(require("../../primitives"));
var import_internal = __toModule(require("../../styles/internal"));
var import_theme = __toModule(require("../../theme"));
var import_utils = __toModule(require("../../utils"));
var import_styles = __toModule(require("./styles"));
var import_useDialog = __toModule(require("./useDialog"));
const Root = (0, import_styled_components.default)(import_utils.Layer)(import_internal.responsivePaddingStyle, import_styles.dialogStyle, import_styles.responsiveDialogPositionStyle);
const DialogContainer = (0, import_styled_components.default)(import_primitives.Container)`
  &:not([hidden]) {
    display: flex;
  }
  width: 100%;
  height: 100%;
  flex-direction: column;
  align-items: center;
  justify-content: center;
`;
const DialogCardRoot = (0, import_styled_components.default)(import_primitives.Card)`
  &:not([hidden]) {
    display: flex;
  }
  width: 100%;
  min-height: 0;
  max-height: 100%;
  overflow: hidden;
`;
const DialogLayout = (0, import_styled_components.default)(import_primitives.Flex)`
  flex: 1;
  min-height: 0;
  width: 100%;
`;
const DialogHeader = (0, import_styled_components.default)(import_primitives.Card)`
  position: relative;
  z-index: 2;

  &:after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    bottom: -1px;
    border-bottom: 1px solid var(--card-hairline-soft-color);
  }
`;
const DialogContent = (0, import_styled_components.default)(import_primitives.Box)`
  position: relative;
  z-index: 1;
  overflow: auto;
  outline: none;
`;
const DialogFooter = (0, import_styled_components.default)(import_primitives.Box)`
  position: relative;
  z-index: 3;
  border-top: 1px solid var(--card-hairline-soft-color);
`;
const DialogCard = (0, import_react.forwardRef)(function DialogCard2(props, ref) {
  const {
    __unstable_autoFocus: autoFocus,
    __unstable_hideCloseButton: hideCloseButton,
    children,
    contentRef,
    footer,
    header,
    id,
    onClickOutside,
    onClose,
    radius,
    scheme,
    shadow,
    width
  } = props;
  const [rootElement, setRootElement] = (0, import_react.useState)(null);
  const localContentRef = (0, import_react.useRef)(null);
  const layer = (0, import_utils.useLayer)();
  const { isTopLayer } = layer;
  const labelId = `${id}_label`;
  const showCloseButton = Boolean(onClose) && hideCloseButton === false;
  const showHeader = Boolean(header) || showCloseButton;
  (0, import_react.useEffect)(() => {
    if (!autoFocus)
      return;
    if (localContentRef.current) {
      (0, import_helpers.focusFirstDescendant)(localContentRef.current);
    }
  }, [autoFocus]);
  (0, import_hooks.useGlobalKeyDown)((0, import_react.useCallback)((event) => {
    if (!isTopLayer || !onClose)
      return;
    if (event.key === "Escape") {
      event.preventDefault();
      event.stopPropagation();
      onClose();
    }
  }, [isTopLayer, onClose]));
  (0, import_hooks.useClickOutside)((0, import_react.useCallback)(() => {
    if (!isTopLayer || !onClickOutside)
      return;
    onClickOutside();
  }, [isTopLayer, onClickOutside]), [rootElement]);
  const setRef = (0, import_react.useCallback)((el) => {
    setRootElement(el);
    if (typeof ref === "function")
      ref(el);
    else if (ref)
      ref.current = el;
  }, [ref]);
  const setContentRef = (0, import_react.useCallback)((el) => {
    localContentRef.current = el;
    if (typeof contentRef === "function")
      contentRef(el);
    else if (contentRef)
      contentRef.current = el;
  }, [contentRef]);
  return /* @__PURE__ */ import_react.default.createElement(DialogContainer, {
    "data-ui": "DialogCard",
    width
  }, /* @__PURE__ */ import_react.default.createElement(DialogCardRoot, {
    radius,
    ref: setRef,
    scheme,
    shadow
  }, /* @__PURE__ */ import_react.default.createElement(DialogLayout, {
    direction: "column"
  }, showHeader && /* @__PURE__ */ import_react.default.createElement(DialogHeader, null, /* @__PURE__ */ import_react.default.createElement(import_primitives.Flex, null, /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, {
    flex: 1,
    padding: 4
  }, header && /* @__PURE__ */ import_react.default.createElement(import_primitives.Text, {
    id: labelId,
    weight: "semibold"
  }, header)), showCloseButton && /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, {
    padding: 2
  }, /* @__PURE__ */ import_react.default.createElement(import_primitives.Button, {
    "aria-label": "Close dialog",
    disabled: !onClose,
    icon: import_icons.CloseIcon,
    mode: "bleed",
    onClick: onClose,
    padding: 3
  })))), /* @__PURE__ */ import_react.default.createElement(DialogContent, {
    flex: 1,
    ref: setContentRef,
    tabIndex: -1
  }, children), footer && /* @__PURE__ */ import_react.default.createElement(DialogFooter, null, footer))));
});
const Dialog = (0, import_react.forwardRef)(function Dialog2(props, ref) {
  var _a;
  const dialog = (0, import_useDialog.useDialog)();
  const theme = (0, import_theme.useTheme)();
  const _b = props, {
    __unstable_autoFocus: autoFocus = true,
    __unstable_hideCloseButton: hideCloseButton = false,
    cardRadius = 3,
    cardShadow = 4,
    children,
    contentRef,
    footer,
    header,
    id,
    onClickOutside,
    onClose,
    padding = 4,
    position = dialog.position || "fixed",
    scheme,
    width = 0,
    zOffset = dialog.zOffset || ((_a = theme.sanity.layer) == null ? void 0 : _a.dialog.zOffset)
  } = _b, restProps = __objRest(_b, [
    "__unstable_autoFocus",
    "__unstable_hideCloseButton",
    "cardRadius",
    "cardShadow",
    "children",
    "contentRef",
    "footer",
    "header",
    "id",
    "onClickOutside",
    "onClose",
    "padding",
    "position",
    "scheme",
    "width",
    "zOffset"
  ]);
  const preDivRef = (0, import_react.useRef)(null);
  const postDivRef = (0, import_react.useRef)(null);
  const cardRef = (0, import_react.useRef)(null);
  const handleFocus = (0, import_react.useCallback)((event) => {
    const target = event.target;
    const cardElement = cardRef.current;
    if (!cardElement) {
      return;
    }
    if (target === preDivRef.current) {
      (0, import_helpers.focusLastDescendant)(cardElement);
      return;
    }
    if (target === postDivRef.current) {
      (0, import_helpers.focusFirstDescendant)(cardElement);
      return;
    }
  }, []);
  const labelId = `${id}_label`;
  return /* @__PURE__ */ import_react.default.createElement(import_utils.Portal, null, /* @__PURE__ */ import_react.default.createElement(Root, __spreadProps(__spreadValues({}, restProps), {
    $padding: padding,
    $position: position,
    "aria-labelledby": labelId,
    "aria-modal": true,
    "data-ui": "Dialog",
    id,
    onFocus: handleFocus,
    ref,
    role: "dialog",
    zOffset
  }), /* @__PURE__ */ import_react.default.createElement("div", {
    ref: preDivRef,
    tabIndex: 0
  }), /* @__PURE__ */ import_react.default.createElement(DialogCard, {
    __unstable_autoFocus: autoFocus,
    __unstable_hideCloseButton: hideCloseButton,
    contentRef,
    footer,
    header,
    id,
    onClickOutside,
    onClose,
    radius: cardRadius,
    ref: cardRef,
    scheme,
    shadow: cardShadow,
    width
  }, children), /* @__PURE__ */ import_react.default.createElement("div", {
    ref: postDivRef,
    tabIndex: 0
  })));
});
