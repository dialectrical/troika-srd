{
  "version": 3,
  "sources": ["../../../../src/components/dialog/dialog.tsx"],
  "sourcesContent": ["import {CloseIcon} from '@sanity/icons'\nimport React, {forwardRef, useCallback, useEffect, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {focusFirstDescendant, focusLastDescendant} from '../../helpers'\nimport {useClickOutside, useGlobalKeyDown} from '../../hooks'\nimport {Box, Button, Card, Container, Flex, Text} from '../../primitives'\nimport {ResponsivePaddingProps, ResponsiveWidthProps} from '../../primitives/types'\nimport {responsivePaddingStyle, ResponsivePaddingStyleProps} from '../../styles/internal'\nimport {ThemeColorSchemeKey, useTheme} from '../../theme'\nimport {DialogPosition} from '../../types'\nimport {Layer, Portal, useLayer} from '../../utils'\nimport {\n  dialogStyle,\n  responsiveDialogPositionStyle,\n  ResponsiveDialogPositionStyleProps,\n} from './styles'\nimport {useDialog} from './useDialog'\n\n/**\n * @public\n */\nexport interface DialogProps extends ResponsivePaddingProps, ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus?: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton?: boolean\n  cardRadius?: number | number[]\n  cardShadow?: number | number[]\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer?: React.ReactNode\n  header?: React.ReactNode\n  id: string\n  onClickOutside?: () => void\n  onClose?: () => void\n  position?: DialogPosition | DialogPosition[]\n  scheme?: ThemeColorSchemeKey\n  zOffset?: number | number[]\n}\n\ninterface DialogCardProps extends ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton: boolean\n  children: React.ReactNode\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer: React.ReactNode\n  header: React.ReactNode\n  id: string\n  onClickOutside?: () => void\n  onClose?: () => void\n  radius: number | number[]\n  scheme?: ThemeColorSchemeKey\n  shadow: number | number[]\n}\n\nconst Root = styled(Layer)<ResponsiveDialogPositionStyleProps & ResponsivePaddingStyleProps>(\n  responsivePaddingStyle,\n  dialogStyle,\n  responsiveDialogPositionStyle\n)\n\nconst DialogContainer = styled(Container)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst DialogCardRoot = styled(Card)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  min-height: 0;\n  max-height: 100%;\n  overflow: hidden;\n`\n\nconst DialogLayout = styled(Flex)`\n  flex: 1;\n  min-height: 0;\n  width: 100%;\n`\n\nconst DialogHeader = styled(Card)`\n  position: relative;\n  z-index: 2;\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-hairline-soft-color);\n  }\n`\n\nconst DialogContent = styled(Box)`\n  position: relative;\n  z-index: 1;\n  overflow: auto;\n  outline: none;\n`\n\nconst DialogFooter = styled(Box)`\n  position: relative;\n  z-index: 3;\n  border-top: 1px solid var(--card-hairline-soft-color);\n`\n\nconst DialogCard = forwardRef(function DialogCard(props: DialogCardProps, ref) {\n  const {\n    __unstable_autoFocus: autoFocus,\n    __unstable_hideCloseButton: hideCloseButton,\n    children,\n    contentRef,\n    footer,\n    header,\n    id,\n    onClickOutside,\n    onClose,\n    radius,\n    scheme,\n    shadow,\n    width,\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const localContentRef = useRef<HTMLDivElement | null>(null)\n  const layer = useLayer()\n  const {isTopLayer} = layer\n  const labelId = `${id}_label`\n  const showCloseButton = Boolean(onClose) && hideCloseButton === false\n  const showHeader = Boolean(header) || showCloseButton\n\n  useEffect(() => {\n    if (!autoFocus) return\n\n    // On mount: focus the first interactive element in the contents\n    if (localContentRef.current) {\n      focusFirstDescendant(localContentRef.current)\n    }\n  }, [autoFocus])\n\n  useGlobalKeyDown(\n    useCallback(\n      (event: KeyboardEvent) => {\n        if (!isTopLayer || !onClose) return\n\n        if (event.key === 'Escape') {\n          event.preventDefault()\n          event.stopPropagation()\n          onClose()\n        }\n      },\n      [isTopLayer, onClose]\n    )\n  )\n\n  useClickOutside(\n    useCallback(() => {\n      if (!isTopLayer || !onClickOutside) return\n\n      onClickOutside()\n    }, [isTopLayer, onClickOutside]),\n    [rootElement]\n  )\n\n  const setRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      setRootElement(el)\n      if (typeof ref === 'function') ref(el)\n      else if (ref) ref.current = el\n    },\n    [ref]\n  )\n\n  const setContentRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      localContentRef.current = el\n      if (typeof contentRef === 'function') contentRef(el)\n      else if (contentRef) contentRef.current = el\n    },\n    [contentRef]\n  )\n\n  return (\n    <DialogContainer data-ui=\"DialogCard\" width={width}>\n      <DialogCardRoot radius={radius} ref={setRef} scheme={scheme} shadow={shadow}>\n        <DialogLayout direction=\"column\">\n          {showHeader && (\n            <DialogHeader>\n              <Flex>\n                <Box flex={1} padding={4}>\n                  {header && (\n                    <Text id={labelId} weight=\"semibold\">\n                      {header}\n                    </Text>\n                  )}\n                </Box>\n                {showCloseButton && (\n                  <Box padding={2}>\n                    <Button\n                      aria-label=\"Close dialog\"\n                      disabled={!onClose}\n                      icon={CloseIcon}\n                      mode=\"bleed\"\n                      onClick={onClose}\n                      padding={3}\n                    />\n                  </Box>\n                )}\n              </Flex>\n            </DialogHeader>\n          )}\n\n          <DialogContent flex={1} ref={setContentRef} tabIndex={-1}>\n            {children}\n          </DialogContent>\n\n          {footer && <DialogFooter>{footer}</DialogFooter>}\n        </DialogLayout>\n      </DialogCardRoot>\n    </DialogContainer>\n  )\n})\n\n/**\n * @public\n */\nexport const Dialog = forwardRef(function Dialog(\n  props: DialogProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'id' | 'width'>,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const dialog = useDialog()\n  const theme = useTheme()\n  const {\n    __unstable_autoFocus: autoFocus = true,\n    __unstable_hideCloseButton: hideCloseButton = false,\n    cardRadius = 3,\n    cardShadow = 4,\n    children,\n    contentRef,\n    footer,\n    header,\n    id,\n    onClickOutside,\n    onClose,\n    padding = 4,\n    position = dialog.position || 'fixed',\n    scheme,\n    width = 0,\n    zOffset = dialog.zOffset || theme.sanity.layer?.dialog.zOffset,\n    ...restProps\n  } = props\n  const preDivRef = useRef<HTMLDivElement | null>(null)\n  const postDivRef = useRef<HTMLDivElement | null>(null)\n  const cardRef = useRef<HTMLDivElement | null>(null)\n\n  const handleFocus = useCallback((event: React.FocusEvent<HTMLDivElement>) => {\n    const target = event.target\n    const cardElement = cardRef.current\n\n    if (!cardElement) {\n      return\n    }\n\n    if (target === preDivRef.current) {\n      focusLastDescendant(cardElement)\n\n      return\n    }\n\n    if (target === postDivRef.current) {\n      focusFirstDescendant(cardElement)\n\n      return\n    }\n  }, [])\n\n  const labelId = `${id}_label`\n\n  return (\n    <Portal>\n      <Root\n        {...restProps}\n        $padding={padding}\n        $position={position}\n        aria-labelledby={labelId}\n        aria-modal\n        data-ui=\"Dialog\"\n        id={id}\n        onFocus={handleFocus}\n        ref={ref}\n        role=\"dialog\"\n        zOffset={zOffset}\n      >\n        <div ref={preDivRef} tabIndex={0} />\n        <DialogCard\n          __unstable_autoFocus={autoFocus}\n          __unstable_hideCloseButton={hideCloseButton}\n          contentRef={contentRef}\n          footer={footer}\n          header={header}\n          id={id}\n          onClickOutside={onClickOutside}\n          onClose={onClose}\n          radius={cardRadius}\n          ref={cardRef}\n          scheme={scheme}\n          shadow={cardShadow}\n          width={width}\n        >\n          {children}\n        </DialogCard>\n        <div ref={postDivRef} tabIndex={0} />\n      </Root>\n    </Portal>\n  )\n})\n"],
  "mappings": "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",
  "names": []
}
