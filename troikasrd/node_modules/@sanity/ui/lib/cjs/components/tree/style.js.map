{
  "version": 3,
  "sources": ["../../../../src/components/tree/style.ts"],
  "sourcesContent": ["import {css, FlattenSimpleInterpolation} from 'styled-components'\nimport {rem, ThemeProps} from '../../styles'\nimport {_colorVarsStyle} from '../../styles/colorVars'\n\nexport function treeItemRootStyle(): FlattenSimpleInterpolation {\n  return css`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `\n}\n\nexport function treeItemRootColorStyle(props: ThemeProps): FlattenSimpleInterpolation {\n  const {theme} = props\n  const $tone = 'default'\n  const {base, muted, selectable} = theme.sanity.color\n  // @todo: remove use of `muted` here\n  const tone = selectable ? selectable[$tone] || selectable.default : muted[$tone] || muted.default\n\n  return css`\n    /* <div role=\"none\"><a data-ui=\"TreeItem__box\" role=\"treeitem\" tabIndex=\"0\"></div> */\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${_colorVarsStyle(base, tone.enabled)}\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${_colorVarsStyle(base, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${_colorVarsStyle(base, tone.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${_colorVarsStyle(base, tone.selected)}\n        }\n      }\n    }\n\n    /* <div role=\"treeitem\" tabIndex=\"0\"><div data-ui=\"TreeItem__box\"></div> */\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${_colorVarsStyle(base, tone.enabled)}\n\n        background-color: var(--card-bg-color);\n        color: var(--card-fg-color);\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${_colorVarsStyle(base, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${_colorVarsStyle(base, tone.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${_colorVarsStyle(base, tone.selected)}\n        }\n      }\n    }\n  `\n}\n\nexport interface TreeItemBoxStyleProps {\n  $level: number\n}\n\nexport function treeItemBoxStyle(\n  props: TreeItemBoxStyleProps & ThemeProps\n): FlattenSimpleInterpolation {\n  const {$level, theme} = props\n  const {space} = theme.sanity\n\n  return css`\n    padding-left: ${rem(space[2] * $level)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA8C;AAC9C,oBAA8B;AAC9B,uBAA8B;AAEvB,6BAAyD;AAC9D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BF,gCAAgC,OAA+C;AACpF,QAAM,EAAC,UAAS;AAChB,QAAM,QAAQ;AACd,QAAM,EAAC,MAAM,OAAO,eAAc,MAAM,OAAO;AAE/C,QAAM,OAAO,aAAa,WAAW,UAAU,WAAW,UAAU,MAAM,UAAU,MAAM;AAE1F,SAAO;AAAA;AAAA;AAAA;AAAA,UAIC,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAO3B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKzB,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,YAI3B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQ7B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAO3B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKzB,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,YAI3B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAWhC,0BACL,OAC4B;AAC5B,QAAM,EAAC,QAAQ,UAAS;AACxB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO;AAAA,oBACW,uBAAI,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
