var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  MenuGroup: () => MenuGroup
});
var import_icons = __toModule(require("@sanity/icons"));
var import_react = __toModule(require("react"));
var import_styled_components = __toModule(require("styled-components"));
var import_primitives = __toModule(require("../../primitives"));
var import_selectable = __toModule(require("../../primitives/_selectable"));
var import_menu = __toModule(require("./menu"));
var import_useMenu = __toModule(require("./useMenu"));
const MOUSE_LEAVE_TIMEOUT = 1e3;
const TextContainer = import_styled_components.default.span`
  &:not([hidden]) {
    display: flex;
  }

  & > div:first-child {
    flex: 1;
    min-width: 0;
  }
`;
function MenuGroup(props) {
  const _a = props, {
    as = "button",
    children,
    fontSize,
    onClick,
    padding = 3,
    popover = {},
    radius = 2,
    text,
    tone = "default"
  } = _a, restProps = __objRest(_a, [
    "as",
    "children",
    "fontSize",
    "onClick",
    "padding",
    "popover",
    "radius",
    "text",
    "tone"
  ]);
  const [open, setOpen] = (0, import_react.useState)(false);
  const {
    activeElement,
    mount,
    onClickOutside,
    onEscape,
    onItemClick,
    onMouseEnter,
    onMouseLeave,
    registerElement
  } = (0, import_useMenu.useMenu)();
  const [rootElement, setRootElement] = (0, import_react.useState)(null);
  const mouseLeaveTimeoutRef = (0, import_react.useRef)(null);
  const shouldFocusRef = (0, import_react.useRef)(null);
  const active = Boolean(activeElement) && activeElement === rootElement;
  (0, import_react.useEffect)(() => mount(rootElement), [mount, rootElement]);
  const handleMouseEnter = (0, import_react.useCallback)((event) => {
    if (mouseLeaveTimeoutRef.current) {
      clearTimeout(mouseLeaveTimeoutRef.current);
      mouseLeaveTimeoutRef.current = null;
    }
    onMouseEnter(event);
    setOpen(true);
  }, [onMouseEnter]);
  const handleMouseLeave = (0, import_react.useCallback)((event) => {
    onMouseLeave(event);
    mouseLeaveTimeoutRef.current = setTimeout(() => {
      setOpen(false);
    }, MOUSE_LEAVE_TIMEOUT);
  }, [onMouseLeave]);
  const handleMenuKeyDown = (0, import_react.useCallback)((event) => {
    if (event.key === "ArrowLeft") {
      event.stopPropagation();
      setOpen(false);
      requestAnimationFrame(() => {
        rootElement == null ? void 0 : rootElement.focus();
      });
    }
  }, [rootElement]);
  const handleMenuMouseEnter = (0, import_react.useCallback)(() => {
    if (mouseLeaveTimeoutRef.current) {
      clearTimeout(mouseLeaveTimeoutRef.current);
      mouseLeaveTimeoutRef.current = null;
    }
  }, []);
  const handleMenuMouseLeave = (0, import_react.useCallback)(() => {
    mouseLeaveTimeoutRef.current = setTimeout(() => {
      setOpen(false);
    }, MOUSE_LEAVE_TIMEOUT);
  }, []);
  const handleClick = (0, import_react.useCallback)((event) => {
    if (onClick)
      onClick(event);
    shouldFocusRef.current = "first";
    setOpen(true);
    requestAnimationFrame(() => {
      shouldFocusRef.current = null;
    });
  }, [onClick]);
  const handleItemClick = (0, import_react.useCallback)(() => {
    setOpen(false);
    if (onItemClick)
      onItemClick();
  }, [onItemClick]);
  (0, import_react.useEffect)(() => {
    return () => {
      if (mouseLeaveTimeoutRef.current !== null) {
        clearTimeout(mouseLeaveTimeoutRef.current);
        mouseLeaveTimeoutRef.current = null;
      }
    };
  }, []);
  const content = /* @__PURE__ */ import_react.default.createElement(import_menu.Menu, {
    onClickOutside,
    onEscape,
    onItemClick: handleItemClick,
    onKeyDown: handleMenuKeyDown,
    onMouseEnter: handleMenuMouseEnter,
    onMouseLeave: handleMenuMouseLeave,
    registerElement,
    shouldFocus: shouldFocusRef.current
  }, children);
  const handleKeyDown = (0, import_react.useCallback)((event) => {
    const target = event.currentTarget;
    if (document.activeElement !== target) {
      return;
    }
    if (event.key === "ArrowRight") {
      shouldFocusRef.current = "first";
      setOpen(true);
      requestAnimationFrame(() => {
        shouldFocusRef.current = null;
      });
      return;
    }
  }, []);
  return /* @__PURE__ */ import_react.default.createElement(import_primitives.Popover, __spreadProps(__spreadValues({}, popover), {
    content,
    "data-ui": "MenuGroup__popover",
    open
  }), /* @__PURE__ */ import_react.default.createElement(import_selectable.Selectable, __spreadProps(__spreadValues({
    "data-as": as,
    "data-ui": "MenuGroup",
    forwardedAs: as
  }, restProps), {
    "aria-pressed": as === "button" ? !active && open : void 0,
    "data-pressed": as !== "button" ? !active && open : void 0,
    "data-selected": active ? "" : void 0,
    $radius: radius,
    $tone: tone,
    onClick: handleClick,
    onKeyDown: handleKeyDown,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    ref: setRootElement,
    tabIndex: -1,
    type: as === "button" ? "button" : void 0
  }), /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, {
    padding
  }, /* @__PURE__ */ import_react.default.createElement(TextContainer, null, /* @__PURE__ */ import_react.default.createElement(import_primitives.Text, {
    size: fontSize
  }, text), /* @__PURE__ */ import_react.default.createElement(import_primitives.Text, {
    size: fontSize
  }, /* @__PURE__ */ import_react.default.createElement(import_icons.ChevronRightIcon, null))))));
}
