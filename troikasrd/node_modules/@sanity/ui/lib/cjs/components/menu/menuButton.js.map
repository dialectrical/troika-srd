{
  "version": 3,
  "sources": ["../../../../src/components/menu/menuButton.tsx"],
  "sourcesContent": ["import React, {cloneElement, forwardRef, useCallback, useMemo, useState} from 'react'\nimport {isElement} from 'react-is'\nimport {Popover, PopoverProps} from '../../primitives'\nimport {ThemeColorSchemeKey} from '../../theme'\nimport {Placement} from '../../types'\nimport {MenuProps} from './menu'\n\n/**\n * @public\n */\nexport interface MenuButtonProps {\n  /**\n   * @deprecated Use `popover={{boundaryElement: ...}}` instead.\n   */\n  boundaryElement?: HTMLElement\n  button: React.ReactElement\n  id: string\n  menu?: React.ReactElement\n  /**\n   * @deprecated Use `popover={{placement: ...}}` instead.\n   */\n  placement?: Placement\n  popover?: Omit<PopoverProps, 'content' | 'open'>\n  /**\n   * @deprecated Use `popover={{scheme: ...}}` instead.\n   */\n  popoverScheme?: ThemeColorSchemeKey\n  /**\n   * @deprecated Use `popover={{radius: ...}}` instead.\n   */\n  popoverRadius?: number | number[]\n  /**\n   * Do not use in production.\n   * @beta\n   *\n   * @deprecated Use `popover={{portal: ...}}` instead.\n   */\n  portal?: boolean\n  /**\n   * @deprecated Use `popover={{preventOverflow: ...}}` instead.\n   */\n  preventOverflow?: boolean\n}\n\n/**\n * @public\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement | null>\n) {\n  const {\n    boundaryElement,\n    button: buttonProp,\n    id,\n    menu: menuProp,\n    placement,\n    popoverScheme,\n    portal,\n    popover,\n    popoverRadius,\n    preventOverflow,\n  } = props\n  const [open, setOpen] = useState(false)\n  const [shouldFocus, setShouldFocus] = useState<'first' | 'last' | null>(null)\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n  const [menuElements, setChildMenuElements] = useState<HTMLElement[]>([])\n\n  const handleButtonClick = useCallback(() => {\n    setOpen((v) => !v)\n    setShouldFocus(null)\n  }, [])\n\n  const handleButtonKeyDown = useCallback((event: React.KeyboardEvent<HTMLButtonElement>) => {\n    // On `ArrowDown`, `Enter` and `Space`\n    // - Opens menu and moves focus to first menuitem\n    if (event.key === 'ArrowDown' || event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('first')\n\n      return\n    }\n\n    // On `ArrowUp`\n    // - \tOpens menu and moves focus to last menuitem\n    if (event.key === 'ArrowUp') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('last')\n\n      return\n    }\n  }, [])\n\n  const handleMenuClickOutside = useCallback(\n    (event: MouseEvent) => {\n      const target = event.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (buttonElement && (target === buttonElement || buttonElement.contains(target))) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [buttonElement, menuElements]\n  )\n\n  const handleMenuEscape = useCallback(() => {\n    setOpen(false)\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement])\n\n  const handleBlur = useCallback(\n    (event: React.FocusEvent<HTMLButtonElement>) => {\n      const target = event.relatedTarget\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (el === target || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [menuElements]\n  )\n\n  const handleItemClick = useCallback(() => {\n    setOpen(false)\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement])\n\n  const registerElement = useCallback((el: HTMLElement) => {\n    setChildMenuElements((els) => els.concat([el]))\n\n    return () => {\n      setChildMenuElements((els) => {\n        return els.filter((_el) => _el !== el)\n      })\n    }\n  }, [])\n\n  const menuProps: MenuProps = useMemo(\n    () => ({\n      'aria-labelledby': id,\n      onBlurCapture: handleBlur,\n      onClickOutside: handleMenuClickOutside,\n      onEscape: handleMenuEscape,\n      onItemClick: handleItemClick,\n      originElement: buttonElement,\n      registerElement,\n      shouldFocus,\n    }),\n    [\n      buttonElement,\n      handleMenuClickOutside,\n      handleMenuEscape,\n      handleItemClick,\n      id,\n      handleBlur,\n      registerElement,\n      shouldFocus,\n    ]\n  )\n\n  const menu = isElement(menuProp) ? cloneElement(menuProp, menuProps) : null\n\n  const setButtonRef = useCallback(\n    (el: HTMLButtonElement | null) => {\n      if (typeof ref === 'function') {\n        ref(el)\n      } else if (ref) {\n        ref.current = el\n      }\n\n      setButtonElement(el)\n    },\n    [ref]\n  )\n\n  const button = useMemo(\n    () =>\n      isElement(buttonProp)\n        ? cloneElement(buttonProp, {\n            'data-ui': 'MenuButton',\n            id,\n            onClick: handleButtonClick,\n            onKeyDown: handleButtonKeyDown,\n            'aria-haspopup': true,\n            'aria-expanded': open,\n            ref: setButtonRef,\n            selected: open,\n          })\n        : null,\n    [buttonProp, handleButtonClick, handleButtonKeyDown, id, open, setButtonRef]\n  )\n\n  const popoverProps: PopoverProps = useMemo(() => {\n    return {\n      boundaryElement,\n      placement,\n      portal,\n      radius: popoverRadius,\n      overflow: preventOverflow,\n      scheme: popoverScheme,\n      ...(popover || {}),\n    }\n  }, [boundaryElement, placement, popover, popoverRadius, portal, preventOverflow, popoverScheme])\n\n  return (\n    <Popover {...popoverProps} content={menu} data-ui=\"MenuButton__popover\" open={open}>\n      {button || <></>}\n    </Popover>\n  )\n})\n"],
  "mappings": "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",
  "names": []
}
