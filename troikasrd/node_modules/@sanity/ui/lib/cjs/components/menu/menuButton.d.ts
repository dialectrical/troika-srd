import React from 'react';
import { PopoverProps } from '../../primitives';
import { ThemeColorSchemeKey } from '../../theme';
import { Placement } from '../../types';
/**
 * @public
 */
export interface MenuButtonProps {
    /**
     * @deprecated Use `popover={{boundaryElement: ...}}` instead.
     */
    boundaryElement?: HTMLElement;
    button: React.ReactElement;
    id: string;
    menu?: React.ReactElement;
    /**
     * @deprecated Use `popover={{placement: ...}}` instead.
     */
    placement?: Placement;
    popover?: Omit<PopoverProps, 'content' | 'open'>;
    /**
     * @deprecated Use `popover={{scheme: ...}}` instead.
     */
    popoverScheme?: ThemeColorSchemeKey;
    /**
     * @deprecated Use `popover={{radius: ...}}` instead.
     */
    popoverRadius?: number | number[];
    /**
     * Do not use in production.
     * @beta
     *
     * @deprecated Use `popover={{portal: ...}}` instead.
     */
    portal?: boolean;
    /**
     * @deprecated Use `popover={{preventOverflow: ...}}` instead.
     */
    preventOverflow?: boolean;
}
/**
 * @public
 */
export declare const MenuButton: React.ForwardRefExoticComponent<MenuButtonProps & React.RefAttributes<HTMLButtonElement | null>>;
//# sourceMappingURL=menuButton.d.ts.map