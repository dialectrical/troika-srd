var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  MenuItem: () => MenuItem
});
var import_react = __toModule(require("react"));
var import_react_is = __toModule(require("react-is"));
var import_hooks = __toModule(require("../../hooks"));
var import_primitives = __toModule(require("../../primitives"));
var import_selectable = __toModule(require("../../primitives/_selectable"));
var import_hotkeys = __toModule(require("../hotkeys"));
var import_useMenu = __toModule(require("./useMenu"));
const MenuItem = (0, import_react.forwardRef)(function MenuItem2(props, forwardedRef) {
  const _a = props, {
    as = "button",
    children,
    disabled,
    fontSize = 2,
    hotkeys,
    icon,
    iconRight,
    onClick,
    padding = 3,
    paddingX,
    paddingY,
    paddingTop,
    paddingRight,
    paddingBottom,
    paddingLeft,
    pressed,
    radius = 2,
    selected: selectedProp,
    space = 3,
    text,
    tone = "default"
  } = _a, restProps = __objRest(_a, [
    "as",
    "children",
    "disabled",
    "fontSize",
    "hotkeys",
    "icon",
    "iconRight",
    "onClick",
    "padding",
    "paddingX",
    "paddingY",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "pressed",
    "radius",
    "selected",
    "space",
    "text",
    "tone"
  ]);
  const { activeElement, mount, onItemClick, onMouseEnter, onMouseLeave } = (0, import_useMenu.useMenu)();
  const [rootElement, setRootElement] = (0, import_react.useState)(null);
  const selected = Boolean(activeElement) && rootElement === activeElement;
  (0, import_react.useEffect)(() => mount(rootElement, selectedProp), [mount, rootElement, selectedProp]);
  const ref = (0, import_hooks.useForwardedRef)(forwardedRef);
  const handleClick = (0, import_react.useCallback)((event) => {
    if (disabled)
      return;
    if (onClick)
      onClick(event);
    if (onItemClick)
      onItemClick();
  }, [disabled, onClick, onItemClick]);
  const paddingProps = (0, import_react.useMemo)(() => ({
    padding,
    paddingX,
    paddingY,
    paddingTop,
    paddingRight,
    paddingBottom,
    paddingLeft
  }), [padding, paddingX, paddingY, paddingTop, paddingRight, paddingBottom, paddingLeft]);
  const setRef = (0, import_react.useCallback)((el) => {
    ref.current = el;
    setRootElement(el);
  }, [ref]);
  return /* @__PURE__ */ import_react.default.createElement(import_selectable.Selectable, __spreadProps(__spreadValues({
    "data-as": as,
    "data-ui": "MenuItem",
    forwardedAs: as
  }, restProps), {
    "aria-pressed": as === "button" && pressed,
    "data-pressed": as !== "button" && pressed ? "" : void 0,
    "data-selected": selected ? "" : void 0,
    $radius: radius,
    $tone: tone,
    disabled,
    onClick: handleClick,
    onMouseEnter,
    onMouseLeave,
    padding: 0,
    ref: setRef,
    role: "menuitem",
    tabIndex: -1,
    type: as === "button" ? "button" : void 0
  }), (icon || text || iconRight) && /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, __spreadValues({
    as: "span"
  }, paddingProps), /* @__PURE__ */ import_react.default.createElement(import_primitives.Flex, {
    as: "span"
  }, icon && /* @__PURE__ */ import_react.default.createElement(import_primitives.Text, {
    size: fontSize
  }, (0, import_react.isValidElement)(icon) && icon, (0, import_react_is.isValidElementType)(icon) && (0, import_react.createElement)(icon)), text && /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, {
    flex: 1,
    marginLeft: icon ? space : void 0,
    marginRight: iconRight ? space : void 0
  }, /* @__PURE__ */ import_react.default.createElement(import_primitives.Text, {
    size: fontSize,
    textOverflow: "ellipsis"
  }, text)), hotkeys && /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, {
    marginLeft: space,
    style: { marginTop: -4, marginBottom: -4 }
  }, /* @__PURE__ */ import_react.default.createElement(import_hotkeys.Hotkeys, {
    fontSize,
    keys: hotkeys
  })), iconRight && /* @__PURE__ */ import_react.default.createElement(import_primitives.Text, {
    size: fontSize
  }, (0, import_react.isValidElement)(iconRight) && iconRight, (0, import_react_is.isValidElementType)(iconRight) && (0, import_react.createElement)(iconRight)))), children && /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, __spreadValues({
    as: "span"
  }, paddingProps), children));
});
