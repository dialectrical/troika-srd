var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  ToastProvider: () => ToastProvider
});
var import_framer_motion = __toModule(require("framer-motion"));
var import_react = __toModule(require("react"));
var import_styled_components = __toModule(require("styled-components"));
var import_primitives = __toModule(require("../../primitives"));
var import_utils = __toModule(require("../../utils"));
var import_toast = __toModule(require("./toast"));
var import_toastContext = __toModule(require("./toastContext"));
const Root = (0, import_styled_components.default)(import_utils.Layer)`
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
`;
const ToastContainer = import_styled_components.default.div`
  box-sizing: border-box;
  position: absolute;
  right: 0;
  bottom: 0;
  max-width: 420px;
  width: 100%;
`;
let toastId = 0;
function ToastProvider(props) {
  const { children, padding = 4, paddingX, paddingY, zOffset } = props;
  const [state, setState] = (0, import_react.useState)({ toasts: [] });
  const toastsRef = (0, import_react.useRef)({});
  const push = (0, import_react.useCallback)((params) => {
    const id = params.id || String(toastId++);
    const duration = params.duration || 5e3;
    const dismiss = () => {
      var _a;
      const timeoutId = (_a = toastsRef.current[id]) == null ? void 0 : _a.timeoutId;
      setState((prevState) => {
        const idx = prevState.toasts.findIndex((t) => t.id === id);
        if (idx > -1) {
          const toasts = prevState.toasts.slice(0);
          toasts.splice(idx, 1);
          return __spreadProps(__spreadValues({}, prevState), { toasts });
        }
        return prevState;
      });
      if (timeoutId !== void 0) {
        clearTimeout(timeoutId);
        delete toastsRef.current[id];
      }
    };
    setState((prevState) => {
      return __spreadProps(__spreadValues({}, prevState), {
        toasts: prevState.toasts.filter((t) => t.id !== id).concat([
          {
            dismiss,
            id,
            params: __spreadProps(__spreadValues({}, params), { duration })
          }
        ])
      });
    });
    if (toastsRef.current[id]) {
      clearTimeout(toastsRef.current[id].timeoutId);
      delete toastsRef.current[id];
    }
    toastsRef.current[id] = { timeoutId: setTimeout(dismiss, duration) };
    return id;
  }, []);
  (0, import_react.useEffect)(() => () => {
    for (const { timeoutId } of Object.values(toastsRef.current)) {
      clearTimeout(timeoutId);
    }
    toastsRef.current = {};
  }, []);
  const value = (0, import_react.useMemo)(() => ({ version: 0, push }), [push]);
  return /* @__PURE__ */ import_react.default.createElement(import_toastContext.ToastContext.Provider, {
    value
  }, children, /* @__PURE__ */ import_react.default.createElement(Root, {
    "data-ui": "ToastProvider",
    zOffset
  }, /* @__PURE__ */ import_react.default.createElement(ToastContainer, null, /* @__PURE__ */ import_react.default.createElement(import_primitives.Box, {
    padding,
    paddingX,
    paddingY
  }, /* @__PURE__ */ import_react.default.createElement(import_framer_motion.AnimatePresence, {
    initial: false
  }, state.toasts.map(({ dismiss, id, params }) => /* @__PURE__ */ import_react.default.createElement(import_framer_motion.motion.div, {
    animate: { opacity: 1, y: 0, scale: 1 },
    exit: { opacity: 0, scale: 0.5, transition: { duration: 0.2 } },
    initial: { opacity: 0, y: 32, scale: 0.25 },
    key: id,
    layout: "position",
    transition: { type: "spring", damping: 30, stiffness: 400 }
  }, /* @__PURE__ */ import_react.default.createElement(import_toast.Toast, {
    closable: params.closable,
    description: params.description,
    onClose: dismiss,
    status: params.status,
    title: params.title
  }))))))));
}
