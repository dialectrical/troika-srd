{
  "version": 3,
  "sources": ["../../../../src/components/toast/toast.tsx"],
  "sourcesContent": ["import {CloseIcon} from '@sanity/icons'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {Box, Button, Card, Flex, Stack, Text} from '../../primitives'\nimport {ThemeColorToneKey} from '../../theme'\n\n/**\n * @public\n */\nexport interface ToastProps {\n  closable?: boolean\n  description?: React.ReactNode\n  onClose?: () => void\n  title?: React.ReactNode\n  status?: 'error' | 'warning' | 'success' | 'info'\n}\n\nconst STATUS_CARD_TONE: {[key: string]: ThemeColorToneKey} = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'primary',\n}\n\nconst ROLES = {\n  error: 'alert',\n  warning: 'alert',\n  success: 'status',\n  info: 'status',\n}\n\nconst Root = styled(Card)`\n  pointer-events: all;\n`\n\nconst TextBox = styled(Flex)`\n  overflow-x: auto;\n`\n\n/**\n * @public\n */\nexport function Toast(\n  props: ToastProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'title'>\n): React.ReactElement {\n  const {closable, description, onClose, title, status, ...restProps} = props\n  const cardTone = status ? STATUS_CARD_TONE[status] : 'default'\n  const role = status ? ROLES[status] : 'status'\n\n  return (\n    <Root\n      data-ui=\"Toast\"\n      role={role}\n      {...restProps}\n      marginTop={3}\n      radius={2}\n      shadow={2}\n      tone={cardTone}\n    >\n      <Flex align=\"flex-start\">\n        <TextBox flex={1} padding={3}>\n          <Stack space={3}>\n            {title && <Text weight=\"semibold\">{title}</Text>}\n            {description && (\n              <Text muted size={1}>\n                {description}\n              </Text>\n            )}\n          </Stack>\n        </TextBox>\n\n        {closable && (\n          <Box padding={1}>\n            <Button\n              as=\"button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              padding={2}\n              onClick={onClose}\n              style={{verticalAlign: 'top'}}\n            />\n          </Box>\n        )}\n      </Flex>\n    </Root>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAwB;AACxB,mBAAkB;AAClB,+BAAmB;AACnB,wBAAmD;AAcnD,MAAM,mBAAuD;AAAA,EAC3D,OAAO;AAAA,EACP,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AAAA;AAGR,MAAM,QAAQ;AAAA,EACZ,OAAO;AAAA,EACP,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AAAA;AAGR,MAAM,OAAO,sCAAO;AAAA;AAAA;AAIpB,MAAM,UAAU,sCAAO;AAAA;AAAA;AAOhB,eACL,OACoB;AACpB,QAAsE,YAA/D,YAAU,aAAa,SAAS,OAAO,WAAwB,IAAb,sBAAa,IAAb,CAAlD,YAAU,eAAa,WAAS,SAAO;AAC9C,QAAM,WAAW,SAAS,iBAAiB,UAAU;AACrD,QAAM,OAAO,SAAS,MAAM,UAAU;AAEtC,SACE,mDAAC,MAAD;AAAA,IACE,WAAQ;AAAA,IACR;AAAA,KACI,YAHN;AAAA,IAIE,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,MAEN,mDAAC,wBAAD;AAAA,IAAM,OAAM;AAAA,KACV,mDAAC,SAAD;AAAA,IAAS,MAAM;AAAA,IAAG,SAAS;AAAA,KACzB,mDAAC,yBAAD;AAAA,IAAO,OAAO;AAAA,KACX,SAAS,mDAAC,wBAAD;AAAA,IAAM,QAAO;AAAA,KAAY,QAClC,eACC,mDAAC,wBAAD;AAAA,IAAM,OAAK;AAAA,IAAC,MAAM;AAAA,KACf,gBAMR,YACC,mDAAC,uBAAD;AAAA,IAAK,SAAS;AAAA,KACZ,mDAAC,0BAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAM;AAAA,IACN,MAAK;AAAA,IACL,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO,EAAC,eAAe;AAAA;AAAA;",
  "names": []
}
