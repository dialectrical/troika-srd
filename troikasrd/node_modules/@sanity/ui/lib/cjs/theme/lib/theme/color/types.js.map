{
  "version": 3,
  "sources": ["../../../../../../src/theme/lib/theme/color/types.ts"],
  "sourcesContent": ["import {ThemeColorBase} from './base'\nimport {ThemeColorButton} from './button'\nimport {ThemeColorCard} from './card'\nimport {ThemeColorInput} from './input'\nimport {ThemeColorMuted} from './muted'\nimport {ThemeColorSelectable} from './selectable'\nimport {ThemeColorSolid} from './solid'\nimport {ThemeColorSpot} from './spot'\nimport {ThemeColorSyntax} from './syntax'\n\n/**\n * @public\n */\nexport type ThemeColorSchemeKey = 'dark' | 'light'\n\n/**\n * @public\n */\nexport type ThemeColorName =\n  | 'default'\n  | 'transparent'\n  | 'primary'\n  | 'positive'\n  | 'caution'\n  | 'critical'\n\n/**\n * @public\n */\nexport type ThemeColorToneKey =\n  | 'default'\n  | 'transparent'\n  | 'primary'\n  | 'positive'\n  | 'caution'\n  | 'critical'\n\n/**\n * @public\n */\nexport interface ThemeColor {\n  dark: boolean\n  base: ThemeColorBase\n  button: ThemeColorButton\n  card: ThemeColorCard\n  input: ThemeColorInput\n  selectable?: ThemeColorSelectable\n  spot: ThemeColorSpot\n  syntax: ThemeColorSyntax\n  solid: ThemeColorSolid\n  muted: ThemeColorMuted\n}\n\n/**\n * @public\n */\nexport interface ThemeColorScheme {\n  default: ThemeColor\n  transparent: ThemeColor\n  primary: ThemeColor\n  positive: ThemeColor\n  caution: ThemeColor\n  critical: ThemeColor\n}\n\n/**\n * @public\n */\nexport interface ThemeColorSchemes {\n  dark: ThemeColorScheme\n  light: ThemeColorScheme\n}\n"],
  "mappings": ";;AAAA;",
  "names": []
}
