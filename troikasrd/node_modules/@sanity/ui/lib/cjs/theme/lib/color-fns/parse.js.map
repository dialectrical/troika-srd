{
  "version": 3,
  "sources": ["../../../../../src/theme/lib/color-fns/parse.ts"],
  "sourcesContent": ["import {hexToRgb, hslToRgb} from './convert'\nimport {HSL, RGB} from './types'\n\nconst HEX_CHARS = '0123456789ABCDEFabcdef'\n\nconst HSL_RE = /hsl\\(\\s*(\\d+)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*\\)/i\n\nfunction isHexChars(str: string) {\n  for (const c of str) {\n    if (HEX_CHARS.indexOf(c) === -1) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction isHex(str: string) {\n  if (str[0] !== '#') return false\n\n  // Accept both #000 and #000000\n  if (!(str.length === 4 || str.length === 7)) return false\n\n  return isHexChars(str.slice(1))\n}\n\nfunction parseHsl(str: string): HSL {\n  const res = HSL_RE.exec(str)\n\n  if (!res) {\n    throw new Error(`parseHsl: string is not a HSL color: \"${str}\"`)\n  }\n\n  return {h: parseInt(res[1]), s: parseFloat(res[3]), l: parseFloat(res[5])}\n}\n\n/**\n * @internal\n */\nexport function parseColor(color: unknown): RGB {\n  if (!color) return {r: 0, g: 0, b: 0}\n\n  if (typeof color !== 'string') {\n    throw new Error('parseColor: expected a string')\n  }\n\n  if (isHex(color)) {\n    return hexToRgb(color)\n  }\n\n  if (color.startsWith('hsl(')) {\n    return hslToRgb(parseHsl(color))\n  }\n\n  throw new Error(`parseColor: unexpected color format: \"${color}\"`)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,qBAAiC;AAGjC,MAAM,YAAY;AAElB,MAAM,SAAS;AAEf,oBAAoB,KAAa;AAC/B,aAAW,KAAK,KAAK;AACnB,QAAI,UAAU,QAAQ,OAAO,IAAI;AAC/B,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAGT,eAAe,KAAa;AAC1B,MAAI,IAAI,OAAO;AAAK,WAAO;AAG3B,MAAI,CAAE,KAAI,WAAW,KAAK,IAAI,WAAW;AAAI,WAAO;AAEpD,SAAO,WAAW,IAAI,MAAM;AAAA;AAG9B,kBAAkB,KAAkB;AAClC,QAAM,MAAM,OAAO,KAAK;AAExB,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM,yCAAyC;AAAA;AAG3D,SAAO,EAAC,GAAG,SAAS,IAAI,KAAK,GAAG,WAAW,IAAI,KAAK,GAAG,WAAW,IAAI;AAAA;AAMjE,oBAAoB,OAAqB;AAC9C,MAAI,CAAC;AAAO,WAAO,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG;AAEnC,MAAI,OAAO,UAAU,UAAU;AAC7B,UAAM,IAAI,MAAM;AAAA;AAGlB,MAAI,MAAM,QAAQ;AAChB,WAAO,6BAAS;AAAA;AAGlB,MAAI,MAAM,WAAW,SAAS;AAC5B,WAAO,6BAAS,SAAS;AAAA;AAG3B,QAAM,IAAI,MAAM,yCAAyC;AAAA;",
  "names": []
}
