{
  "version": 3,
  "sources": ["../../../../src/styles/flex/flexStyle.ts"],
  "sourcesContent": ["import {CSSObject} from 'styled-components'\nimport {getResponsiveProp, rem, responsive} from '../helpers'\nimport {ThemeProps} from '../types'\nimport {ResponsiveFlexStyleProps} from './types'\n\nconst BASE_STYLE: CSSObject = {\n  '&&:not([hidden])': {\n    display: 'flex',\n  },\n}\n\nexport function responsiveFlexStyle(): Array<\n  CSSObject | ((props: ResponsiveFlexStyleProps & ThemeProps) => CSSObject[])\n> {\n  return [\n    BASE_STYLE,\n    responsiveFlexAlignStyle,\n    responsiveFlexGapStyle,\n    responsiveFlexWrapStyle,\n    responsiveFlexJustifyStyle,\n    responsiveFlexDirectionStyle,\n  ]\n}\n\nexport function responsiveFlexAlignStyle(\n  props: ResponsiveFlexStyleProps & ThemeProps\n): CSSObject[] {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$align), (align) => {\n    return {alignItems: align}\n  })\n}\n\nfunction responsiveFlexGapStyle(props: ResponsiveFlexStyleProps & ThemeProps) {\n  const {theme} = props\n  const {media, space} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$gap), (gap) => ({\n    gap: gap ? rem(space[gap]) : undefined,\n  }))\n}\n\nexport function responsiveFlexWrapStyle(props: ResponsiveFlexStyleProps & ThemeProps): CSSObject[] {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$wrap), (wrap) => {\n    return {flexWrap: wrap}\n  })\n}\n\nexport function responsiveFlexJustifyStyle(\n  props: ResponsiveFlexStyleProps & ThemeProps\n): CSSObject[] {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$justify), (justify) => {\n    return {justifyContent: justify}\n  })\n}\n\nexport function responsiveFlexDirectionStyle(\n  props: ResponsiveFlexStyleProps & ThemeProps\n): CSSObject[] {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$direction), (direction) => {\n    return {flexDirection: direction}\n  })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qBAAiD;AAIjD,MAAM,aAAwB;AAAA,EAC5B,oBAAoB;AAAA,IAClB,SAAS;AAAA;AAAA;AAIN,+BAEL;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIG,kCACL,OACa;AACb,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,+BAAW,OAAO,sCAAkB,MAAM,SAAS,CAAC,UAAU;AACnE,WAAO,EAAC,YAAY;AAAA;AAAA;AAIxB,gCAAgC,OAA8C;AAC5E,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,OAAO,UAAS,MAAM;AAE7B,SAAO,+BAAW,OAAO,sCAAkB,MAAM,OAAO,CAAC,QAAS;AAAA,IAChE,KAAK,MAAM,wBAAI,MAAM,QAAQ;AAAA;AAAA;AAI1B,iCAAiC,OAA2D;AACjG,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,+BAAW,OAAO,sCAAkB,MAAM,QAAQ,CAAC,SAAS;AACjE,WAAO,EAAC,UAAU;AAAA;AAAA;AAIf,oCACL,OACa;AACb,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,+BAAW,OAAO,sCAAkB,MAAM,WAAW,CAAC,YAAY;AACvE,WAAO,EAAC,gBAAgB;AAAA;AAAA;AAIrB,sCACL,OACa;AACb,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,+BAAW,OAAO,sCAAkB,MAAM,aAAa,CAAC,cAAc;AAC3E,WAAO,EAAC,eAAe;AAAA;AAAA;",
  "names": []
}
