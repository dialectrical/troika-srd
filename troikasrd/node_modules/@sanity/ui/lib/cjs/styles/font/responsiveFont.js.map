{
  "version": 3,
  "sources": ["../../../../src/styles/font/responsiveFont.ts"],
  "sourcesContent": ["import {CSSObject} from 'styled-components'\nimport {ThemeFontSize, ThemeFontKey} from '../../theme'\nimport {getResponsiveProp, rem, responsive} from '../helpers'\nimport {ThemeProps} from '../types'\nimport {ResponsiveFontStyleProps} from './types'\n\n/**\n * A utility function getting responsive font styles.\n * @internal\n */\nexport function responsiveFont(\n  fontKey: ThemeFontKey,\n  props: ResponsiveFontStyleProps & ThemeProps\n): CSSObject[] {\n  const {$size, $weight, theme} = props\n  const {fonts, media} = theme.sanity\n  const {family, sizes, weights} = fonts[fontKey]\n  const fontWeight = ($weight && weights[$weight]) || weights.regular\n\n  // @todo: make this configurable\n  const defaultSize = sizes[2]\n\n  const base = {\n    position: 'relative',\n    fontFamily: family,\n    fontWeight,\n    padding: '1px 0',\n    margin: 0,\n\n    // '&:before': {\n    //   content: '',\n    //   display: 'block',\n    //   height: 0,\n    // },\n\n    // '&:after': {\n    //   content: '',\n    //   display: 'block',\n    //   height: 0,\n    // },\n\n    '&:not([hidden])': {\n      display: 'block',\n    },\n  } as CSSObject\n\n  const resp = responsive(media, getResponsiveProp($size), (sizeIndex) =>\n    fontSize(sizes[sizeIndex] || defaultSize)\n  )\n\n  return [base, ...resp]\n}\n\nexport function fontSize(size: ThemeFontSize): CSSObject {\n  const negHeight = size.ascenderHeight + size.descenderHeight\n  const capHeight = size.lineHeight - negHeight\n\n  return {\n    fontSize: rem(size.fontSize),\n    lineHeight: rem(size.lineHeight),\n    letterSpacing: rem(size.letterSpacing),\n    transform: `translateY(${rem(size.descenderHeight)})`,\n\n    '&:before': {\n      marginTop: `calc(${rem(0 - negHeight)} - 1px)`,\n    },\n\n    '&:after': {\n      marginBottom: '-1px',\n    },\n\n    '& [data-sanity-icon]': {\n      fontSize: rem(size.iconSize),\n      margin: rem((capHeight - size.iconSize) / 2),\n    },\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAiD;AAQ1C,wBACL,SACA,OACa;AACb,QAAM,EAAC,OAAO,SAAS,UAAS;AAChC,QAAM,EAAC,OAAO,UAAS,MAAM;AAC7B,QAAM,EAAC,QAAQ,OAAO,YAAW,MAAM;AACvC,QAAM,aAAc,WAAW,QAAQ,YAAa,QAAQ;AAG5D,QAAM,cAAc,MAAM;AAE1B,QAAM,OAAO;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,IACT,QAAQ;AAAA,IAcR,mBAAmB;AAAA,MACjB,SAAS;AAAA;AAAA;AAIb,QAAM,OAAO,+BAAW,OAAO,sCAAkB,QAAQ,CAAC,cACxD,SAAS,MAAM,cAAc;AAG/B,SAAO,CAAC,MAAM,GAAG;AAAA;AAGZ,kBAAkB,MAAgC;AACvD,QAAM,YAAY,KAAK,iBAAiB,KAAK;AAC7C,QAAM,YAAY,KAAK,aAAa;AAEpC,SAAO;AAAA,IACL,UAAU,wBAAI,KAAK;AAAA,IACnB,YAAY,wBAAI,KAAK;AAAA,IACrB,eAAe,wBAAI,KAAK;AAAA,IACxB,WAAW,cAAc,wBAAI,KAAK;AAAA,IAElC,YAAY;AAAA,MACV,WAAW,QAAQ,wBAAI,IAAI;AAAA;AAAA,IAG7B,WAAW;AAAA,MACT,cAAc;AAAA;AAAA,IAGhB,wBAAwB;AAAA,MACtB,UAAU,wBAAI,KAAK;AAAA,MACnB,QAAQ,wBAAK,aAAY,KAAK,YAAY;AAAA;AAAA;AAAA;",
  "names": []
}
