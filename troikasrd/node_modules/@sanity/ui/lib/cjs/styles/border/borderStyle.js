var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  responsiveBorderStyle: () => responsiveBorderStyle
});
var import_helpers = __toModule(require("../helpers"));
const BORDER_VALUE = "1px solid var(--card-border-color)";
function responsiveBorderStyle() {
  return [border, borderTop, borderRight, borderBottom, borderLeft];
}
function border(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$border), (value) => value ? { "&&": { border: BORDER_VALUE } } : { "&&": { border: 0 } });
}
function borderTop(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$borderTop), (value) => value ? { "&&": { borderTop: BORDER_VALUE } } : { "&&": { borderTop: 0 } });
}
function borderRight(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$borderRight), (value) => value ? { "&&": { borderRight: BORDER_VALUE } } : { "&&": { borderRight: 0 } });
}
function borderBottom(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$borderBottom), (value) => value ? { "&&": { borderBottom: BORDER_VALUE } } : { "&&": { borderBottom: 0 } });
}
function borderLeft(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$borderLeft), (value) => value ? { "&&": { borderLeft: BORDER_VALUE } } : { "&&": { borderLeft: 0 } });
}
