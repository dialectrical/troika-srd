var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  boxStyle: () => boxStyle,
  responsiveBoxStyle: () => responsiveBoxStyle
});
var import_helpers = __toModule(require("../helpers"));
const BASE_STYLE = {
  '&[data-as="ul"],&[data-as="ol"]': {
    listStyle: "none"
  }
};
const BOX_SIZING = {
  content: "content-box",
  border: "border-box"
};
const BOX_HEIGHT = {
  stretch: "stretch",
  fill: "100%"
};
function boxStyle() {
  return BASE_STYLE;
}
function responsiveBoxStyle() {
  return [
    responsiveBoxSizingStyle,
    responsiveBoxHeightStyle,
    responsiveBoxOverflowStyle,
    responsiveBoxDisplayStyle
  ];
}
function responsiveBoxDisplayStyle(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$display), (display) => ({
    "&:not([hidden])": { display }
  }));
}
function responsiveBoxSizingStyle(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$sizing), (sizing) => ({
    boxSizing: BOX_SIZING[sizing]
  }));
}
function responsiveBoxHeightStyle(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$height), (height) => ({
    height: BOX_HEIGHT[height]
  }));
}
function responsiveBoxOverflowStyle(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return (0, import_helpers.responsive)(media, (0, import_helpers.getResponsiveProp)(props.$overflow), (overflow) => ({
    overflow
  }));
}
