{
  "version": 3,
  "sources": ["../../../../src/utils/portal/portalProvider.tsx"],
  "sourcesContent": ["import React, {useMemo} from 'react'\nimport {PortalContext} from './portalContext'\nimport {PortalContextValue} from './types'\n\n/**\n * @public\n */\nexport interface PortalProviderProps {\n  /**\n   * @deprecated Use `<BoundaryElementProvider element={...} />` instead\n   */\n  boundaryElement?: HTMLElement | null\n  children: React.ReactNode\n  element: HTMLElement | null\n}\n\nconst __BROWSER__ = typeof window !== 'undefined'\n\n/**\n * @public\n */\nexport function PortalProvider(props: PortalProviderProps): React.ReactElement {\n  const {boundaryElement, children, element} = props\n\n  const value: PortalContextValue = useMemo(() => {\n    return {\n      version: 0.0,\n      boundaryElement: boundaryElement || null,\n      element: element || (__BROWSER__ && document.body) || null,\n    }\n  }, [boundaryElement, element])\n\n  return <PortalContext.Provider value={value}>{children}</PortalContext.Provider>\n}\n"],
  "mappings": "AAAA;AACA;AAeA,MAAM,cAAc,OAAO,WAAW;AAK/B,wBAAwB,OAAgD;AAC7E,QAAM,EAAC,iBAAiB,UAAU,YAAW;AAE7C,QAAM,QAA4B,QAAQ,MAAM;AAC9C,WAAO;AAAA,MACL,SAAS;AAAA,MACT,iBAAiB,mBAAmB;AAAA,MACpC,SAAS,WAAY,eAAe,SAAS,QAAS;AAAA;AAAA,KAEvD,CAAC,iBAAiB;AAErB,SAAO,oCAAC,cAAc,UAAf;AAAA,IAAwB;AAAA,KAAe;AAAA;",
  "names": []
}
