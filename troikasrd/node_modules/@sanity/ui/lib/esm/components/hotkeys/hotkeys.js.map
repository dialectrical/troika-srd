{
  "version": 3,
  "sources": ["../../../../src/components/hotkeys/hotkeys.tsx"],
  "sourcesContent": ["import React, {forwardRef} from 'react'\nimport styled from 'styled-components'\nimport {Inline, KBD} from '../../primitives'\n\n/**\n * @public\n */\nexport interface HotkeysProps {\n  fontSize?: number | number[]\n  padding?: number | number[]\n  radius?: number | number[]\n  space?: number | number[]\n  keys?: string[]\n}\n\nconst Root = styled.kbd`\n  &:not([hidden]) {\n    display: block;\n  }\n  font: inherit;\n`\n\nconst Key = styled(KBD)`\n  &:not([hidden]) {\n    display: block;\n  }\n`\n\n/**\n * @public\n */\nexport const Hotkeys = forwardRef(function Hotkeys(\n  props: HotkeysProps & Omit<React.HTMLProps<HTMLElement>, 'as' | 'ref' | 'size'>,\n  ref: React.Ref<HTMLElement>\n) {\n  const {fontSize, keys, padding, radius, space = 1, ...restProps} = props\n\n  if (!keys || keys.length === 0) {\n    return <></>\n  }\n\n  return (\n    <Root data-ui=\"Hotkeys\" {...restProps} ref={ref}>\n      <Inline as=\"span\" space={space}>\n        {keys.map((key, i) => (\n          <Key fontSize={fontSize} key={i} padding={padding} radius={radius}>\n            {key}\n          </Key>\n        ))}\n      </Inline>\n    </Root>\n  )\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAaA,MAAM,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpB,MAAM,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AASZ,MAAM,UAAU,WAAW,kBAChC,OACA,KACA;AACA,QAAmE,YAA5D,YAAU,MAAM,SAAS,QAAQ,QAAQ,MAAmB,IAAb,sBAAa,IAAb,CAA/C,YAAU,QAAM,WAAS,UAAQ;AAExC,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WAAO;AAAA;AAGT,SACE,oCAAC,MAAD;AAAA,IAAM,WAAQ;AAAA,KAAc,YAA5B;AAAA,IAAuC;AAAA,MACrC,oCAAC,QAAD;AAAA,IAAQ,IAAG;AAAA,IAAO;AAAA,KACf,KAAK,IAAI,CAAC,KAAK,MACd,oCAAC,KAAD;AAAA,IAAK;AAAA,IAAoB,KAAK;AAAA,IAAG;AAAA,IAAkB;AAAA,KAChD;AAAA;",
  "names": []
}
