{
  "version": 3,
  "sources": ["../../../../src/components/menu/menu.tsx"],
  "sourcesContent": ["import React, {forwardRef, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {useClickOutside, useGlobalKeyDown} from '../../hooks'\nimport {Box, Stack} from '../../primitives'\nimport {ResponsivePaddingProps} from '../../primitives/types'\nimport {useLayer} from '../../utils'\nimport {_getFocusableElements, _sortElements} from './helpers'\nimport {MenuContext, MenuContextValue} from './menuContext'\n\n/**\n * @public\n */\nexport interface MenuProps extends ResponsivePaddingProps {\n  /**\n   * @deprecated Use `shouldFocus=\"first\"` instead.\n   */\n  focusFirst?: boolean\n  /**\n   * @deprecated Use `shouldFocus=\"last\"` instead.\n   */\n  focusLast?: boolean\n  onClickOutside?: (event: MouseEvent) => void\n  onEscape?: () => void\n  onItemClick?: () => void\n  onItemSelect?: (index: number) => void\n  originElement?: HTMLElement | null\n  registerElement?: (el: HTMLElement) => () => void\n  shouldFocus?: 'first' | 'last' | null\n  space?: number | number[]\n}\n\nconst Root = styled(Box)`\n  outline: none;\n  overflow: auto;\n`\n\n/**\n * @public\n */\nexport const Menu = forwardRef(function Menu(\n  props: MenuProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'role' | 'tabIndex'>,\n  ref\n) {\n  const {\n    children,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusFirst,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusLast,\n    onClickOutside,\n    onEscape,\n    onItemClick,\n    onItemSelect,\n    onKeyDown,\n    originElement,\n    padding = 1,\n    registerElement,\n    shouldFocus = (props.focusFirst && 'first') || (props.focusLast && 'last') || null,\n    space = 1,\n    ...restProps\n  } = props\n\n  const {isTopLayer} = useLayer()\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const elementsRef = useRef<HTMLElement[]>([])\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const activeIndexRef = useRef(activeIndex)\n  const activeElement = elementsRef.current[activeIndex] || null\n  const activeElementRef = useRef<HTMLElement | null>(activeElement)\n  const mounted = Boolean(rootElement)\n\n  const setRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      setRootElement(el)\n      if (typeof ref === 'function') ref(el)\n      else if (ref) ref.current = el\n    },\n    [ref]\n  )\n\n  const mount = useCallback(\n    (element: HTMLElement | null, selected?: boolean): (() => void) => {\n      if (!element) return () => undefined\n\n      if (elementsRef.current.indexOf(element) === -1) {\n        elementsRef.current.push(element)\n        _sortElements(rootElement, elementsRef.current)\n      }\n\n      if (selected) {\n        const selectedIndex = elementsRef.current.indexOf(element)\n\n        setActiveIndex(selectedIndex)\n        activeIndexRef.current = selectedIndex\n      }\n\n      return () => {\n        const idx = elementsRef.current.indexOf(element)\n\n        if (idx > -1) {\n          elementsRef.current.splice(idx, 1)\n        }\n      }\n    },\n    [rootElement]\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      // Move focus to the element that opened the menu before handling the `Tab` press\n      if (event.key === 'Tab') {\n        if (originElement) {\n          originElement.focus()\n        }\n\n        return\n      }\n\n      // Move focus to the first focusable menuitem\n      if (event.key === 'Home') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        const focusableElements = _getFocusableElements(elementsRef.current)\n        const el = focusableElements[0]\n\n        if (!el) return\n\n        const currentIndex = elementsRef.current.indexOf(el)\n\n        setActiveIndex(currentIndex)\n        activeIndexRef.current = currentIndex\n\n        return\n      }\n\n      // Move focus to the last focusable menuitem\n      if (event.key === 'End') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        const focusableElements = _getFocusableElements(elementsRef.current)\n        const el = focusableElements[focusableElements.length - 1]\n\n        if (!el) return\n\n        const currentIndex = elementsRef.current.indexOf(el)\n\n        setActiveIndex(currentIndex)\n        activeIndexRef.current = currentIndex\n\n        return\n      }\n\n      if (event.key === 'ArrowUp') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        const focusableElements = _getFocusableElements(elementsRef.current)\n        const focusableLen = focusableElements.length\n\n        if (focusableLen === 0) return\n\n        const focusedElement = elementsRef.current[activeIndex]\n\n        let focusedIndex = focusableElements.indexOf(focusedElement)\n\n        focusedIndex = (focusedIndex - 1 + focusableLen) % focusableLen\n\n        const el = focusableElements[focusedIndex]\n        const currentIndex = elementsRef.current.indexOf(el)\n\n        setActiveIndex(currentIndex)\n        activeIndexRef.current = currentIndex\n\n        return\n      }\n\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        const focusableElements = _getFocusableElements(elementsRef.current)\n        const focusableLen = focusableElements.length\n\n        if (focusableLen === 0) return\n\n        const focusedElement = elementsRef.current[activeIndex]\n\n        let focusedIndex = focusableElements.indexOf(focusedElement)\n\n        focusedIndex = (focusedIndex + 1) % focusableLen\n\n        const el = focusableElements[focusedIndex]\n        const currentIndex = elementsRef.current.indexOf(el)\n\n        setActiveIndex(currentIndex)\n        activeIndexRef.current = currentIndex\n\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [activeIndex, onKeyDown, originElement]\n  )\n\n  const handleItemMouseEnter = useCallback((event: React.MouseEvent<HTMLElement>) => {\n    const element = event.currentTarget\n    const currentIndex = elementsRef.current.indexOf(element)\n\n    setActiveIndex(currentIndex)\n    activeIndexRef.current = currentIndex\n  }, [])\n\n  const handleItemMouseLeave = useCallback(() => {\n    rootElement?.focus()\n    setActiveIndex(-1)\n    activeIndexRef.current = -1\n  }, [rootElement])\n\n  // Trigger `onItemSelect` when active index changes\n  useEffect(() => {\n    if (onItemSelect) onItemSelect(activeIndex)\n  }, [activeIndex, onItemSelect])\n\n  useEffect(() => {\n    activeElementRef.current = activeElement\n  }, [activeElement])\n\n  // Set focus on the currently active element\n  useEffect(() => {\n    if (!mounted) return\n\n    const rafId = window.requestAnimationFrame(() => {\n      const _activeIndex = activeIndexRef.current\n\n      if (_activeIndex === -1) {\n        if (shouldFocus === 'first') {\n          const focusableElements = _getFocusableElements(elementsRef.current)\n          const el = focusableElements[0]\n\n          if (el) {\n            const currentIndex = elementsRef.current.indexOf(el)\n\n            setActiveIndex(currentIndex)\n            activeIndexRef.current = currentIndex\n          }\n        }\n\n        if (shouldFocus === 'last') {\n          const focusableElements = _getFocusableElements(elementsRef.current)\n          const el = focusableElements[focusableElements.length - 1]\n\n          if (el) {\n            const currentIndex = elementsRef.current.indexOf(el)\n\n            setActiveIndex(currentIndex)\n            activeIndexRef.current = currentIndex\n          }\n        }\n\n        return\n      }\n\n      const element = elementsRef.current[_activeIndex] || null\n\n      element?.focus()\n    })\n\n    return () => {\n      window.cancelAnimationFrame(rafId)\n    }\n  }, [activeIndex, mounted, shouldFocus])\n\n  useClickOutside(\n    useCallback(\n      (event) => isTopLayer && onClickOutside && onClickOutside(event),\n      [isTopLayer, onClickOutside]\n    ),\n    [rootElement]\n  )\n\n  useGlobalKeyDown(\n    useCallback(\n      (event) => {\n        if (!isTopLayer) return\n\n        if (event.key === 'Escape') {\n          event.stopPropagation()\n          if (onEscape) onEscape()\n        }\n      },\n      [isTopLayer, onEscape]\n    )\n  )\n\n  useEffect(() => {\n    if (!rootElement || !registerElement) return\n\n    return registerElement(rootElement)\n  }, [registerElement, rootElement])\n\n  const value: MenuContextValue = useMemo(\n    () => ({\n      version: 0.0,\n      activeElement,\n      activeIndex,\n      mount,\n      onClickOutside,\n      onEscape,\n      onMouseEnter: handleItemMouseEnter,\n      onMouseLeave: handleItemMouseLeave,\n      onItemClick,\n      registerElement,\n    }),\n    [\n      activeElement,\n      activeIndex,\n      mount,\n      handleItemMouseEnter,\n      handleItemMouseLeave,\n      onClickOutside,\n      onEscape,\n      onItemClick,\n      registerElement,\n    ]\n  )\n\n  return (\n    <MenuContext.Provider value={value}>\n      <Root\n        data-ui=\"Menu\"\n        {...restProps}\n        onKeyDown={handleKeyDown}\n        padding={padding}\n        ref={setRef}\n        role=\"menu\"\n        tabIndex={-1}\n      >\n        <Stack space={space}>{children}</Stack>\n      </Root>\n    </MenuContext.Provider>\n  )\n})\n"],
  "mappings": "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",
  "names": []
}
