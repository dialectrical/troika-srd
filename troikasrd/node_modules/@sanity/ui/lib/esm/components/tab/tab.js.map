{
  "version": 3,
  "sources": ["../../../../src/components/tab/tab.tsx"],
  "sourcesContent": ["import React, {forwardRef, useCallback, useEffect, useRef} from 'react'\nimport {useForwardedRef} from '../../hooks'\nimport {Button} from '../../primitives'\nimport {ButtonTone} from '../../types'\n\n/**\n * @public\n */\nexport interface TabProps {\n  /**\n   * The `id` of the correlating `TabPanel` component.\n   */\n  'aria-controls': string\n  id: string\n  icon?: React.ComponentType | React.ReactNode\n  focused?: boolean\n  fontSize?: number | number[]\n  label?: React.ReactNode\n  padding?: number | number[]\n  selected?: boolean\n  tone?: ButtonTone\n}\n\n/**\n * @public\n */\nexport const Tab = forwardRef(function Tab(\n  props: TabProps &\n    Omit<React.HTMLProps<HTMLButtonElement>, 'aria-controls' | 'as' | 'id' | 'type'>,\n  forwardedRef: React.ForwardedRef<HTMLButtonElement>\n) {\n  const {\n    icon,\n    id,\n    focused,\n    fontSize,\n    label,\n    onClick,\n    onFocus,\n    padding = 2,\n    selected,\n    ...restProps\n  } = props\n  const elementRef = useRef<HTMLButtonElement | null>(null)\n  const focusedRef = useRef(false)\n\n  const handleBlur = useCallback(() => {\n    focusedRef.current = false\n  }, [])\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLButtonElement>) => {\n      focusedRef.current = true\n      if (onFocus) onFocus(event)\n    },\n    [onFocus]\n  )\n\n  const ref = useForwardedRef(forwardedRef)\n\n  useEffect(() => {\n    if (focused && !focusedRef.current) {\n      if (elementRef.current) elementRef.current.focus()\n      focusedRef.current = true\n    }\n  }, [focused])\n\n  const setRef = (el: HTMLButtonElement | null) => {\n    elementRef.current = el\n    ref.current = el\n  }\n\n  return (\n    <Button\n      data-ui=\"Tab\"\n      {...restProps}\n      aria-selected={selected ? 'true' : 'false'}\n      fontSize={fontSize}\n      icon={icon}\n      id={id}\n      mode=\"bleed\"\n      onClick={onClick}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      padding={padding}\n      ref={setRef}\n      role=\"tab\"\n      selected={selected}\n      tabIndex={selected ? 0 : -1}\n      text={label}\n      type=\"button\"\n    />\n  )\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAwBO,MAAM,MAAM,WAAW,cAC5B,OAEA,cACA;AACA,QAWI,YAVF;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV;AAAA,MAEE,IADC,sBACD,IADC;AAAA,IATH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGF,QAAM,aAAa,OAAiC;AACpD,QAAM,aAAa,OAAO;AAE1B,QAAM,aAAa,YAAY,MAAM;AACnC,eAAW,UAAU;AAAA,KACpB;AAEH,QAAM,cAAc,YAClB,CAAC,UAA+C;AAC9C,eAAW,UAAU;AACrB,QAAI;AAAS,cAAQ;AAAA,KAEvB,CAAC;AAGH,QAAM,MAAM,gBAAgB;AAE5B,YAAU,MAAM;AACd,QAAI,WAAW,CAAC,WAAW,SAAS;AAClC,UAAI,WAAW;AAAS,mBAAW,QAAQ;AAC3C,iBAAW,UAAU;AAAA;AAAA,KAEtB,CAAC;AAEJ,QAAM,SAAS,CAAC,OAAiC;AAC/C,eAAW,UAAU;AACrB,QAAI,UAAU;AAAA;AAGhB,SACE,oCAAC,QAAD;AAAA,IACE,WAAQ;AAAA,KACJ,YAFN;AAAA,IAGE,iBAAe,WAAW,SAAS;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAK;AAAA,IACL;AAAA,IACA,QAAQ;AAAA,IACR,SAAS;AAAA,IACT;AAAA,IACA,KAAK;AAAA,IACL,MAAK;AAAA,IACL;AAAA,IACA,UAAU,WAAW,IAAI;AAAA,IACzB,MAAM;AAAA,IACN,MAAK;AAAA;AAAA;",
  "names": []
}
