{
  "version": 3,
  "sources": ["../../../../src/components/tree/helpers.ts"],
  "sourcesContent": ["import {TreeState} from './types'\n\nexport function _findPrevItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(0, idx)\n  const len = els.length\n\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _findNextItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(idx)\n  const len = itemElements.length\n\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i]) {\n      continue\n    }\n\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _focusItemElement(el: HTMLElement): void {\n  if (el.getAttribute('role') === 'treeitem') {\n    el.focus()\n  }\n\n  if (el.getAttribute('role') === 'none') {\n    const firstChild = el.firstChild\n\n    if (firstChild && firstChild instanceof HTMLElement) {\n      firstChild.focus()\n    }\n  }\n}\n"],
  "mappings": "AAEO,8BACL,OACA,cACA,gBACoB;AANtB;AAOE,QAAM,MAAM,aAAa,QAAQ;AACjC,QAAM,MAAM,aAAa,MAAM,GAAG;AAClC,QAAM,MAAM,IAAI;AAEhB,WAAS,IAAI,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG;AACpC,UAAM,UAAU,IAAI,GAAG,aAAa;AAEpC,QAAI,CAAC,SAAS;AACZ;AAAA;AAGF,UAAM,WAAW,QAAQ,MAAM;AAE/B,aAAS;AAET,UAAM,IAAc;AAEpB,QAAI,WAAW;AAEf,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AAC3C,QAAE,KAAK,SAAS;AAEhB,YAAM,IAAI,EAAE,KAAK;AAEjB,UAAI,CAAC,aAAM,OAAN,mBAAU,WAAU;AACvB,mBAAW;AACX;AAAA;AAAA;AAIJ,QAAI,UAAU;AACZ,aAAO,IAAI;AAAA;AAAA;AAIf,SAAO;AAAA;AAGF,8BACL,OACA,cACA,gBACoB;AAjDtB;AAkDE,QAAM,MAAM,aAAa,QAAQ;AACjC,QAAM,MAAM,aAAa,MAAM;AAC/B,QAAM,MAAM,aAAa;AAEzB,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,QAAI,CAAC,IAAI,IAAI;AACX;AAAA;AAGF,UAAM,UAAU,IAAI,GAAG,aAAa;AAEpC,QAAI,CAAC,SAAS;AACZ;AAAA;AAGF,UAAM,WAAW,QAAQ,MAAM;AAE/B,aAAS;AAET,UAAM,IAAc;AAEpB,QAAI,WAAW;AAEf,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AAC3C,QAAE,KAAK,SAAS;AAEhB,YAAM,IAAI,EAAE,KAAK;AAEjB,UAAI,CAAC,aAAM,OAAN,mBAAU,WAAU;AACvB,mBAAW;AACX;AAAA;AAAA;AAIJ,QAAI,UAAU;AACZ,aAAO,IAAI;AAAA;AAAA;AAIf,SAAO;AAAA;AAGF,2BAA2B,IAAuB;AACvD,MAAI,GAAG,aAAa,YAAY,YAAY;AAC1C,OAAG;AAAA;AAGL,MAAI,GAAG,aAAa,YAAY,QAAQ;AACtC,UAAM,aAAa,GAAG;AAEtB,QAAI,cAAc,sBAAsB,aAAa;AACnD,iBAAW;AAAA;AAAA;AAAA;",
  "names": []
}
