var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
import React, { forwardRef } from "react";
import styled from "styled-components";
import { useForwardedRef, useCustomValidity } from "../../hooks";
import { radioBaseStyle, inputElementStyle } from "./styles";
const Root = styled.div(radioBaseStyle);
const Input = styled.input(inputElementStyle);
const Radio = forwardRef(function Radio2(props, forwardedRef) {
  const _a = props, { className, disabled, style, customValidity, readOnly } = _a, restProps = __objRest(_a, ["className", "disabled", "style", "customValidity", "readOnly"]);
  const ref = useForwardedRef(forwardedRef);
  useCustomValidity(ref, customValidity);
  return /* @__PURE__ */ React.createElement(Root, {
    className,
    "data-ui": "Radio",
    style
  }, /* @__PURE__ */ React.createElement(Input, __spreadProps(__spreadValues({
    "data-read-only": !disabled && readOnly ? "" : void 0
  }, restProps), {
    disabled: disabled || readOnly,
    readOnly,
    ref,
    type: "radio"
  })), /* @__PURE__ */ React.createElement("span", null));
});
export {
  Radio
};
