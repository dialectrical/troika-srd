{
  "version": 3,
  "sources": ["../../../../src/primitives/card/styles.ts"],
  "sourcesContent": ["import {css, FlattenSimpleInterpolation} from 'styled-components'\nimport {ThemeProps} from '../../styles'\nimport {_colorVarsStyle} from '../../styles/colorVars'\nimport {focusRingBorderStyle, focusRingStyle} from '../../styles/focusRing'\nimport {CardStyleProps} from './types'\n\nexport function cardStyle(\n  props: CardStyleProps & ThemeProps\n): Array<FlattenSimpleInterpolation | (() => FlattenSimpleInterpolation)> {\n  return [cardBaseStyle(props), cardColorStyle(props)]\n}\n\nexport function cardBaseStyle(props: CardStyleProps & ThemeProps): FlattenSimpleInterpolation {\n  const {$checkered, theme} = props\n  const space = theme.sanity.space\n\n  return css`\n    ${$checkered &&\n    css`\n      background-size: ${space[3]}px ${space[3]}px;\n      background-position: 50% 50%;\n      background-image: var(--card-bg-image);\n    `}\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      outline: none;\n      text-decoration: none;\n    }\n\n    /* &:is(pre) */\n    &[data-as='pre'] {\n      font: inherit;\n    }\n  `\n}\n\nexport function cardColorStyle(props: CardStyleProps & ThemeProps): FlattenSimpleInterpolation {\n  const {$checkered, $focusRing, theme} = props\n  const {focusRing} = theme.sanity\n  const {base, card} = theme.sanity.color\n  const border = {width: 0, color: 'var(--card-border-color)'}\n\n  return css`\n    ${_colorVarsStyle(base, card.enabled, $checkered)}\n\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      --card-focus-ring-box-shadow: none;\n\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &:disabled {\n        ${_colorVarsStyle(base, card.disabled, $checkered)}\n      }\n\n      &:not(:disabled) {\n        &[data-pressed],\n        &[aria-pressed='true'] {\n          ${_colorVarsStyle(base, card.pressed, $checkered)}\n        }\n\n        &[data-selected],\n        [aria-selected='true'] > & {\n          ${_colorVarsStyle(base, card.selected, $checkered)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([aria-pressed='true']):not([data-selected]) {\n            &:hover {\n              ${_colorVarsStyle(base, card.hovered, $checkered)}\n            }\n\n            &:active {\n              ${_colorVarsStyle(base, card.pressed, $checkered)}\n            }\n          }\n        }\n\n        &:focus {\n          --card-focus-ring-box-shadow: ${$focusRing\n            ? focusRingStyle({base, border, focusRing})\n            : undefined};\n        }\n\n        &:focus:not(:focus-visible) {\n          --card-focus-ring-box-shadow: ${$focusRing ? focusRingBorderStyle(border) : undefined};\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &[data-disabled] {\n        ${_colorVarsStyle(base, card.disabled, $checkered)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${_colorVarsStyle(base, card.pressed, $checkered)}\n        }\n\n        &[data-selected],\n        [aria-selected='true'] > & {\n          ${_colorVarsStyle(base, card.selected, $checkered)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &:hover {\n              ${_colorVarsStyle(base, card.hovered, $checkered)}\n            }\n\n            &:active {\n              ${_colorVarsStyle(base, card.pressed, $checkered)}\n            }\n          }\n        }\n\n        &:focus {\n          --card-focus-ring-box-shadow: ${$focusRing\n            ? focusRingStyle({base, border, focusRing})\n            : undefined};\n        }\n\n        &:focus:not(:focus-visible) {\n          --card-focus-ring-box-shadow: ${$focusRing ? focusRingBorderStyle(border) : undefined};\n        }\n      }\n    }\n\n    ${theme.sanity.styles?.card?.root}\n  `\n}\n"],
  "mappings": "AAAA;AAEA;AACA;AAGO,mBACL,OACwE;AACxE,SAAO,CAAC,cAAc,QAAQ,eAAe;AAAA;AAGxC,uBAAuB,OAAgE;AAC5F,QAAM,EAAC,YAAY,UAAS;AAC5B,QAAM,QAAQ,MAAM,OAAO;AAE3B,SAAO;AAAA,MACH,cACF;AAAA,yBACqB,MAAM,QAAQ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BtC,wBAAwB,OAAgE;AA/C/F;AAgDE,QAAM,EAAC,YAAY,YAAY,UAAS;AACxC,QAAM,EAAC,cAAa,MAAM;AAC1B,QAAM,EAAC,MAAM,SAAQ,MAAM,OAAO;AAClC,QAAM,SAAS,EAAC,OAAO,GAAG,OAAO;AAEjC,SAAO;AAAA,MACH,gBAAgB,MAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYhC,gBAAgB,MAAM,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMnC,gBAAgB,MAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,YAKpC,gBAAgB,MAAM,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMjC,gBAAgB,MAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA,gBAIpC,gBAAgB,MAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAMV,aAC5B,eAAe,EAAC,MAAM,QAAQ,eAC9B;AAAA;AAAA;AAAA;AAAA,0CAI4B,aAAa,qBAAqB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAU5E,gBAAgB,MAAM,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,YAKnC,gBAAgB,MAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,YAKpC,gBAAgB,MAAM,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMjC,gBAAgB,MAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA,gBAIpC,gBAAgB,MAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAMV,aAC5B,eAAe,EAAC,MAAM,QAAQ,eAC9B;AAAA;AAAA;AAAA;AAAA,0CAI4B,aAAa,qBAAqB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAKhF,kBAAM,OAAO,WAAb,mBAAqB,SAArB,mBAA2B;AAAA;AAAA;",
  "names": []
}
