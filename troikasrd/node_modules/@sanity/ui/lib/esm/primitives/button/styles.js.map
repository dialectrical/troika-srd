{
  "version": 3,
  "sources": ["../../../../src/primitives/button/styles.ts"],
  "sourcesContent": ["import {css, CSSObject, FlattenSimpleInterpolation} from 'styled-components'\nimport {ThemeProps} from '../../styles'\nimport {_colorVarsStyle} from '../../styles/colorVars'\nimport {focusRingBorderStyle, focusRingStyle} from '../../styles/internal'\nimport {ButtonMode, ButtonTone} from '../../types'\n\n/**\n * @internal\n */\nexport function buttonBaseStyles(): FlattenSimpleInterpolation {\n  return css`\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    display: inline-flex;\n    align-items: center;\n    font: inherit;\n    border: 0;\n    outline: none;\n    user-select: none;\n    text-decoration: none;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    white-space: nowrap;\n    text-align: left;\n    position: relative;\n\n    & > span {\n      display: block;\n      flex: 1;\n      min-width: 0;\n      border-radius: inherit;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n  `\n}\n\nconst buttonTheme = {border: {width: 1}}\n\n/**\n * @internal\n */\nexport function buttonColorStyles(\n  props: {$mode: ButtonMode; $tone: ButtonTone} & ThemeProps\n): CSSObject[] {\n  const {$mode, theme} = props\n  const {focusRing} = theme.sanity\n  const base = theme.sanity.color.base\n  const mode = theme.sanity.color.button[$mode] || theme.sanity.color.button.default\n  const color = mode[props.$tone] || mode.default\n  const border = {width: buttonTheme.border.width, color: 'var(--card-border-color)'}\n\n  return [\n    _colorVarsStyle(base, color.enabled),\n    {\n      backgroundColor: 'var(--card-bg-color)',\n      color: 'var(--card-fg-color)',\n      boxShadow: focusRingBorderStyle(border),\n      '&:disabled, &[data-disabled=\"true\"]': _colorVarsStyle(base, color.disabled),\n      \"&:not([data-disabled='true'])\": {\n        '&:focus': {\n          boxShadow: focusRingStyle({base, border, focusRing}),\n        },\n        '&:focus:not(:focus-visible)': {\n          boxShadow: focusRingBorderStyle(border),\n        },\n        '@media (hover: hover)': {\n          '&:hover': _colorVarsStyle(base, color.hovered),\n          '&:active': _colorVarsStyle(base, color.pressed),\n        },\n        '&[data-selected]': _colorVarsStyle(base, color.pressed),\n      },\n    },\n    theme.sanity.styles?.button?.root,\n  ].filter(Boolean) as CSSObject[]\n}\n"],
  "mappings": "AAAA;AAEA;AACA;AAMO,4BAAwD;AAC7D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCT,MAAM,cAAc,EAAC,QAAQ,EAAC,OAAO;AAK9B,2BACL,OACa;AAjDf;AAkDE,QAAM,EAAC,OAAO,UAAS;AACvB,QAAM,EAAC,cAAa,MAAM;AAC1B,QAAM,OAAO,MAAM,OAAO,MAAM;AAChC,QAAM,OAAO,MAAM,OAAO,MAAM,OAAO,UAAU,MAAM,OAAO,MAAM,OAAO;AAC3E,QAAM,QAAQ,KAAK,MAAM,UAAU,KAAK;AACxC,QAAM,SAAS,EAAC,OAAO,YAAY,OAAO,OAAO,OAAO;AAExD,SAAO;AAAA,IACL,gBAAgB,MAAM,MAAM;AAAA,IAC5B;AAAA,MACE,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,WAAW,qBAAqB;AAAA,MAChC,uCAAuC,gBAAgB,MAAM,MAAM;AAAA,MACnE,iCAAiC;AAAA,QAC/B,WAAW;AAAA,UACT,WAAW,eAAe,EAAC,MAAM,QAAQ;AAAA;AAAA,QAE3C,+BAA+B;AAAA,UAC7B,WAAW,qBAAqB;AAAA;AAAA,QAElC,yBAAyB;AAAA,UACvB,WAAW,gBAAgB,MAAM,MAAM;AAAA,UACvC,YAAY,gBAAgB,MAAM,MAAM;AAAA;AAAA,QAE1C,oBAAoB,gBAAgB,MAAM,MAAM;AAAA;AAAA;AAAA,IAGpD,kBAAM,OAAO,WAAb,mBAAqB,WAArB,mBAA6B;AAAA,IAC7B,OAAO;AAAA;",
  "names": []
}
