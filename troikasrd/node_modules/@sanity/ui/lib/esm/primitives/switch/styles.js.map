{
  "version": 3,
  "sources": ["../../../../src/primitives/switch/styles.ts"],
  "sourcesContent": ["import {css, FlattenSimpleInterpolation} from 'styled-components'\nimport {rem, ThemeProps} from '../../styles'\nimport {focusRingStyle} from '../../styles/internal'\n\n/* Root */\nexport function switchBaseStyles(): FlattenSimpleInterpolation {\n  return css`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `\n}\n\n/* Input */\nexport function switchInputStyles(): FlattenSimpleInterpolation {\n  // Visually hide the input element while keeping it interactive\n  return css`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `\n}\n\n/* Representation */\nexport function switchRepresentationStyles(props: ThemeProps): FlattenSimpleInterpolation {\n  const {theme} = props\n  const {focusRing, input} = theme.sanity\n  const color = theme.sanity.color.button.default\n\n  return css`\n    --switch-bg-color: ${color.default.enabled.bg};\n    --switch-fg-color: ${color.default.enabled.fg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n\n    /* Make sure it\u2019s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${focusRingStyle({focusRing})};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${color.positive.enabled.bg};\n      --switch-fg-color: ${color.positive.enabled.fg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${color.default.hovered.bg};\n        --switch-fg-color: ${color.default.hovered.fg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${color.positive.hovered.bg};\n        --switch-fg-color: ${color.positive.hovered.fg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${color.default.disabled.bg};\n      --switch-fg-color: ${color.default.disabled.fg};\n    }\n  `\n}\n\n/* Track */\nexport function switchTrackStyles(props: ThemeProps): FlattenSimpleInterpolation {\n  const {theme} = props\n  const {input} = theme.sanity\n\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n  `\n}\n\n/* Thumb */\nexport function switchThumbStyles(\n  props: {$checked?: boolean; $indeterminate?: boolean} & ThemeProps\n): FlattenSimpleInterpolation {\n  const {$indeterminate, theme} = props\n  const {input} = theme.sanity\n  const trackWidth = input.switch.width\n  const trackHeight = input.switch.height\n  const trackPadding = input.switch.padding\n  const size = trackHeight - input.switch.padding * 2\n  const checkedOffset = trackWidth - trackPadding * 2 - size\n  const indeterminateOffset = trackWidth / 2 - size / 2 - trackPadding\n  const checked = $indeterminate !== true && props.$checked === true\n\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${rem(trackPadding)};\n    top: ${rem(trackPadding)};\n    height: ${rem(size)};\n    width: ${rem(size)};\n    border-radius: ${rem(size / 2)};\n    transition-property: transform;\n    transition-duration: ${input.switch.transitionDurationMs}ms;\n    transition-timing-function: ${input.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n\n    ${checked &&\n    css`\n      transform: translate3d(${checkedOffset}px, 0, 0);\n    `}\n\n    ${$indeterminate &&\n    css`\n      transform: translate3d(${indeterminateOffset}px, 0, 0);\n    `}\n  `\n}\n"],
  "mappings": "AAAA;AACA;AACA;AAGO,4BAAwD;AAC7D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASF,6BAAyD;AAE9D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBF,oCAAoC,OAA+C;AACxF,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,WAAW,UAAS,MAAM;AACjC,QAAM,QAAQ,MAAM,OAAO,MAAM,OAAO;AAExC,SAAO;AAAA,yBACgB,MAAM,QAAQ,QAAQ;AAAA,yBACtB,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOlC,IAAI,MAAM,OAAO;AAAA,cAChB,IAAI,MAAM,OAAO;AAAA,qBACV,IAAI,MAAM,OAAO,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAoBlB,eAAe,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAQlB,MAAM,SAAS,QAAQ;AAAA,2BACvB,MAAM,SAAS,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKrB,MAAM,QAAQ,QAAQ;AAAA,6BACtB,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA,6BAItB,MAAM,SAAS,QAAQ;AAAA,6BACvB,MAAM,SAAS,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAKzB,MAAM,QAAQ,SAAS;AAAA,2BACvB,MAAM,QAAQ,SAAS;AAAA;AAAA;AAAA;AAM3C,2BAA2B,OAA+C;AAC/E,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQI,IAAI,MAAM,OAAO;AAAA,cAChB,IAAI,MAAM,OAAO;AAAA,qBACV,IAAI,MAAM,OAAO,SAAS;AAAA;AAAA;AAKxC,2BACL,OAC4B;AAC5B,QAAM,EAAC,gBAAgB,UAAS;AAChC,QAAM,EAAC,UAAS,MAAM;AACtB,QAAM,aAAa,MAAM,OAAO;AAChC,QAAM,cAAc,MAAM,OAAO;AACjC,QAAM,eAAe,MAAM,OAAO;AAClC,QAAM,OAAO,cAAc,MAAM,OAAO,UAAU;AAClD,QAAM,gBAAgB,aAAa,eAAe,IAAI;AACtD,QAAM,sBAAsB,aAAa,IAAI,OAAO,IAAI;AACxD,QAAM,UAAU,mBAAmB,QAAQ,MAAM,aAAa;AAE9D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA,YAKG,IAAI;AAAA,WACL,IAAI;AAAA,cACD,IAAI;AAAA,aACL,IAAI;AAAA,qBACI,IAAI,OAAO;AAAA;AAAA,2BAEL,MAAM,OAAO;AAAA,kCACN,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA,MAIzC,WACF;AAAA,+BAC2B;AAAA;AAAA;AAAA,MAGzB,kBACF;AAAA,+BAC2B;AAAA;AAAA;AAAA;",
  "names": []
}
