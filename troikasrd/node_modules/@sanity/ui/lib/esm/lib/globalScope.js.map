{
  "version": 3,
  "sources": ["../../../src/lib/globalScope.ts"],
  "sourcesContent": ["/**\n * Gets the global scope instance in a given environment.\n *\n * The strategy is to return the most modern, and if not, the most common:\n * - The `globalThis` variable is the modern approach to accessing the global scope\n * - The `window` variable is the global scope in a web browser\n * - The `self` variable is the global scope in workers and others\n * - The `global` variable is the global scope in Node.js\n */\nfunction getGlobalScope() {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof window !== 'undefined') return window\n  if (typeof self !== 'undefined') return self\n  if (typeof global !== 'undefined') return global\n\n  throw new Error('@sanity/ui: could not locate global scope')\n}\n\nexport const globalScope = getGlobalScope() as any\n"],
  "mappings": "AASA,0BAA0B;AACxB,MAAI,OAAO,eAAe;AAAa,WAAO;AAC9C,MAAI,OAAO,WAAW;AAAa,WAAO;AAC1C,MAAI,OAAO,SAAS;AAAa,WAAO;AACxC,MAAI,OAAO,WAAW;AAAa,WAAO;AAE1C,QAAM,IAAI,MAAM;AAAA;AAGX,MAAM,cAAc;",
  "names": []
}
