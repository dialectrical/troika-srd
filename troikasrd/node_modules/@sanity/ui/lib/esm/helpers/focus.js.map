{
  "version": 3,
  "sources": ["../../../src/helpers/focus.ts"],
  "sourcesContent": ["import {\n  isHTMLElement,\n  isHTMLAnchorElement,\n  isHTMLInputElement,\n  isHTMLButtonElement,\n  isHTMLSelectElement,\n  isHTMLTextAreaElement,\n} from './element'\n\n// export const globalFocusState = {\n//   IgnoreUtilFocusChanges: false,\n// }\n\n/**\n * @internal\n */\nexport function isFocusable(element: HTMLElement): boolean {\n  if (\n    element.tabIndex > 0 ||\n    (element.tabIndex === 0 && element.getAttribute('tabIndex') !== null)\n  ) {\n    return true\n  }\n\n  if (isHTMLAnchorElement(element)) {\n    return Boolean(element.href) && element.rel !== 'ignore'\n  }\n\n  if (isHTMLInputElement(element)) {\n    return element.type !== 'hidden' && element.type !== 'file' && !element.disabled\n  }\n\n  if (\n    isHTMLButtonElement(element) ||\n    isHTMLSelectElement(element) ||\n    isHTMLTextAreaElement(element)\n  ) {\n    return !element.disabled\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function attemptFocus(element: HTMLElement): boolean {\n  if (!isFocusable(element)) {\n    return false\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = true\n\n  try {\n    element.focus()\n  } catch (_) {\n    // ignore\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = false\n\n  return document.activeElement === element\n}\n\n/**\n * @internal\n */\nexport function focusFirstDescendant(element: HTMLElement): boolean {\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusFirstDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function focusLastDescendant(element: HTMLElement): boolean {\n  for (let i = element.childNodes.length - 1; i >= 0; i--) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusLastDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBO,qBAAqB,SAA+B;AACzD,MACE,QAAQ,WAAW,KAClB,QAAQ,aAAa,KAAK,QAAQ,aAAa,gBAAgB,MAChE;AACA,WAAO;AAAA;AAGT,MAAI,oBAAoB,UAAU;AAChC,WAAO,QAAQ,QAAQ,SAAS,QAAQ,QAAQ;AAAA;AAGlD,MAAI,mBAAmB,UAAU;AAC/B,WAAO,QAAQ,SAAS,YAAY,QAAQ,SAAS,UAAU,CAAC,QAAQ;AAAA;AAG1E,MACE,oBAAoB,YACpB,oBAAoB,YACpB,sBAAsB,UACtB;AACA,WAAO,CAAC,QAAQ;AAAA;AAGlB,SAAO;AAAA;AAMF,sBAAsB,SAA+B;AAC1D,MAAI,CAAC,YAAY,UAAU;AACzB,WAAO;AAAA;AAKT,MAAI;AACF,YAAQ;AAAA,WACD,GAAP;AAAA;AAMF,SAAO,SAAS,kBAAkB;AAAA;AAM7B,8BAA8B,SAA+B;AAClE,WAAS,IAAI,GAAG,IAAI,QAAQ,WAAW,QAAQ,KAAK;AAClD,UAAM,QAAQ,QAAQ,WAAW;AAEjC,QAAI,cAAc,UAAW,cAAa,UAAU,qBAAqB,SAAS;AAChF,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAMF,6BAA6B,SAA+B;AACjE,WAAS,IAAI,QAAQ,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK;AACvD,UAAM,QAAQ,QAAQ,WAAW;AAEjC,QAAI,cAAc,UAAW,cAAa,UAAU,oBAAoB,SAAS;AAC/E,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;",
  "names": []
}
