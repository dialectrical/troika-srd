import { getResponsiveProp, responsive } from "../helpers";
const BORDER_VALUE = "1px solid var(--card-border-color)";
function responsiveBorderStyle() {
  return [border, borderTop, borderRight, borderBottom, borderLeft];
}
function border(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return responsive(media, getResponsiveProp(props.$border), (value) => value ? { "&&": { border: BORDER_VALUE } } : { "&&": { border: 0 } });
}
function borderTop(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return responsive(media, getResponsiveProp(props.$borderTop), (value) => value ? { "&&": { borderTop: BORDER_VALUE } } : { "&&": { borderTop: 0 } });
}
function borderRight(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return responsive(media, getResponsiveProp(props.$borderRight), (value) => value ? { "&&": { borderRight: BORDER_VALUE } } : { "&&": { borderRight: 0 } });
}
function borderBottom(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return responsive(media, getResponsiveProp(props.$borderBottom), (value) => value ? { "&&": { borderBottom: BORDER_VALUE } } : { "&&": { borderBottom: 0 } });
}
function borderLeft(props) {
  const { theme } = props;
  const { media } = theme.sanity;
  return responsive(media, getResponsiveProp(props.$borderLeft), (value) => value ? { "&&": { borderLeft: BORDER_VALUE } } : { "&&": { borderLeft: 0 } });
}
export {
  responsiveBorderStyle
};
