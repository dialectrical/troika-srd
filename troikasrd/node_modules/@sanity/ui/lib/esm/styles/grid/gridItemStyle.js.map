{
  "version": 3,
  "sources": ["../../../../src/styles/grid/gridItemStyle.ts"],
  "sourcesContent": ["import {CSSObject} from 'styled-components'\nimport {getResponsiveProp, responsive} from '../helpers'\nimport {ThemeProps} from '../types'\nimport {ResponsiveGridItemStyleProps} from './types'\n\nexport function responsiveGridItemStyle(): Array<\n  (props: ResponsiveGridItemStyleProps & ThemeProps) => CSSObject[]\n> {\n  return [\n    responsiveGridItemRowStyle,\n    responsiveGridItemRowStartStyle,\n    responsiveGridItemRowEndStyle,\n    responsiveGridItemColumnStyle,\n    responsiveGridItemColumnStartStyle,\n    responsiveGridItemColumnEndStyle,\n  ]\n}\n\nconst GRID_ITEM_ROW = {\n  auto: 'auto',\n  full: '1 / -1',\n}\n\nconst GRID_ITEM_COLUMN = {\n  auto: 'auto',\n  full: '1 / -1',\n}\n\nfunction responsiveGridItemRowStyle(props: ResponsiveGridItemStyleProps & ThemeProps) {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$row), (row) => {\n    if (typeof row === 'number') {\n      return {gridRow: `span ${row} / span ${row}`}\n    }\n\n    return {gridRow: GRID_ITEM_ROW[row]}\n  })\n}\n\nfunction responsiveGridItemRowStartStyle(props: ResponsiveGridItemStyleProps & ThemeProps) {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$rowStart), (rowStart) => ({\n    gridRowStart: rowStart,\n  }))\n}\n\nfunction responsiveGridItemRowEndStyle(props: ResponsiveGridItemStyleProps & ThemeProps) {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$rowEnd), (rowEnd) => ({gridRowEnd: rowEnd}))\n}\n\nfunction responsiveGridItemColumnStyle(props: ResponsiveGridItemStyleProps & ThemeProps) {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$column), (column) => {\n    if (typeof column === 'number') {\n      return {gridColumn: `span ${column} / span ${column}`}\n    }\n\n    return {gridColumn: GRID_ITEM_COLUMN[column]}\n  })\n}\n\nfunction responsiveGridItemColumnStartStyle(props: ResponsiveGridItemStyleProps & ThemeProps) {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$columnStart), (columnStart) => ({\n    gridColumnStart: columnStart,\n  }))\n}\n\nfunction responsiveGridItemColumnEndStyle(props: ResponsiveGridItemStyleProps & ThemeProps) {\n  const {theme} = props\n  const {media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$columnEnd), (columnEnd) => ({\n    gridColumnEnd: columnEnd,\n  }))\n}\n"],
  "mappings": "AACA;AAIO,mCAEL;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIJ,MAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,MAAM;AAAA;AAGR,MAAM,mBAAmB;AAAA,EACvB,MAAM;AAAA,EACN,MAAM;AAAA;AAGR,oCAAoC,OAAkD;AACpF,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,WAAW,OAAO,kBAAkB,MAAM,OAAO,CAAC,QAAQ;AAC/D,QAAI,OAAO,QAAQ,UAAU;AAC3B,aAAO,EAAC,SAAS,QAAQ,cAAc;AAAA;AAGzC,WAAO,EAAC,SAAS,cAAc;AAAA;AAAA;AAInC,yCAAyC,OAAkD;AACzF,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,WAAW,OAAO,kBAAkB,MAAM,YAAY,CAAC,aAAc;AAAA,IAC1E,cAAc;AAAA;AAAA;AAIlB,uCAAuC,OAAkD;AACvF,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,WAAW,OAAO,kBAAkB,MAAM,UAAU,CAAC,WAAY,GAAC,YAAY;AAAA;AAGvF,uCAAuC,OAAkD;AACvF,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,WAAW,OAAO,kBAAkB,MAAM,UAAU,CAAC,WAAW;AACrE,QAAI,OAAO,WAAW,UAAU;AAC9B,aAAO,EAAC,YAAY,QAAQ,iBAAiB;AAAA;AAG/C,WAAO,EAAC,YAAY,iBAAiB;AAAA;AAAA;AAIzC,4CAA4C,OAAkD;AAC5F,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,WAAW,OAAO,kBAAkB,MAAM,eAAe,CAAC,gBAAiB;AAAA,IAChF,iBAAiB;AAAA;AAAA;AAIrB,0CAA0C,OAAkD;AAC1F,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,UAAS,MAAM;AAEtB,SAAO,WAAW,OAAO,kBAAkB,MAAM,aAAa,CAAC,cAAe;AAAA,IAC5E,eAAe;AAAA;AAAA;",
  "names": []
}
