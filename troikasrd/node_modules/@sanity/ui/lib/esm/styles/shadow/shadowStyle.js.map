{
  "version": 3,
  "sources": ["../../../../src/styles/shadow/shadowStyle.ts"],
  "sourcesContent": ["import {CSSObject} from 'styled-components'\nimport {getResponsiveProp} from '..'\nimport {EMPTY_RECORD} from '../../constants'\nimport {BoxShadow, ThemeShadow} from '../../theme'\nimport {rem, responsive} from '../helpers'\nimport {ThemeProps} from '../types'\nimport {ResponsiveShadowStyleProps} from './types'\n\nfunction toBoxShadow(shadow: BoxShadow, color: string) {\n  return `${shadow.map(rem).join(' ')} ${color}`\n}\n\nfunction shadowStyle(shadow: ThemeShadow | null): CSSObject {\n  if (!shadow) return EMPTY_RECORD\n\n  const outline = `0 0 0 ${rem(1)} var(--card-shadow-outline-color)`\n  const umbra = toBoxShadow(shadow.umbra, 'var(--card-shadow-umbra-color)')\n  const penumbra = toBoxShadow(shadow.penumbra, 'var(--card-shadow-penumbra-color)')\n  const ambient = toBoxShadow(shadow.ambient, 'var(--card-shadow-ambient-color)')\n\n  return {boxShadow: `${outline}, ${umbra}, ${penumbra}, ${ambient}`}\n}\n\nexport function responsiveShadowStyle(props: ResponsiveShadowStyleProps & ThemeProps): CSSObject[] {\n  const {theme} = props\n  const {media, shadows} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$shadow), (shadow) =>\n    shadowStyle(shadows[shadow])\n  )\n}\n"],
  "mappings": "AACA;AACA;AAEA;AAIA,qBAAqB,QAAmB,OAAe;AACrD,SAAO,GAAG,OAAO,IAAI,KAAK,KAAK,QAAQ;AAAA;AAGzC,qBAAqB,QAAuC;AAC1D,MAAI,CAAC;AAAQ,WAAO;AAEpB,QAAM,UAAU,SAAS,IAAI;AAC7B,QAAM,QAAQ,YAAY,OAAO,OAAO;AACxC,QAAM,WAAW,YAAY,OAAO,UAAU;AAC9C,QAAM,UAAU,YAAY,OAAO,SAAS;AAE5C,SAAO,EAAC,WAAW,GAAG,YAAY,UAAU,aAAa;AAAA;AAGpD,+BAA+B,OAA6D;AACjG,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,OAAO,YAAW,MAAM;AAE/B,SAAO,WAAW,OAAO,kBAAkB,MAAM,UAAU,CAAC,WAC1D,YAAY,QAAQ;AAAA;",
  "names": []
}
