import { getResponsiveProp, rem, responsive } from "../helpers";
function responsiveFont(fontKey, props) {
  const { $size, $weight, theme } = props;
  const { fonts, media } = theme.sanity;
  const { family, sizes, weights } = fonts[fontKey];
  const fontWeight = $weight && weights[$weight] || weights.regular;
  const defaultSize = sizes[2];
  const base = {
    position: "relative",
    fontFamily: family,
    fontWeight,
    padding: "1px 0",
    margin: 0,
    "&:not([hidden])": {
      display: "block"
    }
  };
  const resp = responsive(media, getResponsiveProp($size), (sizeIndex) => fontSize(sizes[sizeIndex] || defaultSize));
  return [base, ...resp];
}
function fontSize(size) {
  const negHeight = size.ascenderHeight + size.descenderHeight;
  const capHeight = size.lineHeight - negHeight;
  return {
    fontSize: rem(size.fontSize),
    lineHeight: rem(size.lineHeight),
    letterSpacing: rem(size.letterSpacing),
    transform: `translateY(${rem(size.descenderHeight)})`,
    "&:before": {
      marginTop: `calc(${rem(0 - negHeight)} - 1px)`
    },
    "&:after": {
      marginBottom: "-1px"
    },
    "& [data-sanity-icon]": {
      fontSize: rem(size.iconSize),
      margin: rem((capHeight - size.iconSize) / 2)
    }
  };
}
export {
  fontSize,
  responsiveFont
};
