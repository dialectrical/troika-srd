{
  "version": 3,
  "sources": ["../../../../src/styles/input/responsiveInputPaddingStyle.ts"],
  "sourcesContent": ["import {CSSObject} from 'styled-components'\nimport {getResponsiveProp, rem, responsive} from '../helpers'\nimport {ThemeProps} from '../types'\n\nexport interface TextInputResponsivePaddingStyleProps {\n  $fontSize?: number | number[]\n  $iconLeft?: boolean\n  $iconRight?: boolean\n  $padding?: number | number[]\n  $space?: number | number[]\n}\n\nexport function responsiveInputPaddingStyle(\n  props: TextInputResponsivePaddingStyleProps & ThemeProps\n): CSSObject[] {\n  const {$iconLeft, $iconRight, theme} = props\n  const {fonts, media, space: spaceScale} = theme.sanity\n  const padding = getResponsiveProp(props.$padding, [0])\n  const space = getResponsiveProp(props.$space, [0])\n  const size = getResponsiveProp(props.$fontSize, [0])\n  const len = Math.max(padding.length, space.length, size.length)\n  const _padding: number[] = []\n  const _space: number[] = []\n  const _size: number[] = []\n\n  for (let i = 0; i < len; i += 1) {\n    _padding[i] = padding[i] === undefined ? _padding[i - 1] : padding[i]\n    _space[i] = space[i] === undefined ? _space[i - 1] : space[i]\n    _size[i] = size[i] === undefined ? _size[i - 1] : size[i]\n  }\n\n  return responsive(media, _padding, (_, i) => {\n    const fontSize = fonts.text.sizes[_size[i]] || fonts.text.sizes[2]\n    const emSize = fontSize.lineHeight - fontSize.ascenderHeight - fontSize.descenderHeight\n    const p = spaceScale[_padding[i]]\n    const s = spaceScale[_space[i]]\n\n    const styles = {\n      paddingTop: rem(p - fontSize.ascenderHeight),\n      paddingRight: rem(p),\n      paddingBottom: rem(p - fontSize.descenderHeight),\n      paddingLeft: rem(p),\n    }\n\n    if ($iconRight) styles.paddingRight = rem(p + emSize + s)\n    if ($iconLeft) styles.paddingLeft = rem(p + emSize + s)\n\n    return styles\n  })\n}\n\nexport function responsiveInputPaddingIconsStyle(\n  props: {\n    padding?: number | number[]\n    size?: number | number[]\n    space?: number | number[]\n  } & ThemeProps\n): CSSObject[] {\n  return responsiveInputPaddingStyle({...props, $iconLeft: true, $iconRight: true})\n}\n\nexport function responsiveInputPaddingIconLeftStyle(\n  props: {\n    padding?: number | number[]\n    size?: number | number[]\n    space?: number | number[]\n  } & ThemeProps\n): CSSObject[] {\n  return responsiveInputPaddingStyle({...props, $iconLeft: true})\n}\n\nexport function responsiveInputPaddingIconRightStyle(\n  props: {\n    padding?: number | number[]\n    size?: number | number[]\n    space?: number | number[]\n  } & ThemeProps\n): CSSObject[] {\n  return responsiveInputPaddingStyle({...props, $iconRight: true})\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AACA;AAWO,qCACL,OACa;AACb,QAAM,EAAC,WAAW,YAAY,UAAS;AACvC,QAAM,EAAC,OAAO,OAAO,OAAO,eAAc,MAAM;AAChD,QAAM,UAAU,kBAAkB,MAAM,UAAU,CAAC;AACnD,QAAM,QAAQ,kBAAkB,MAAM,QAAQ,CAAC;AAC/C,QAAM,OAAO,kBAAkB,MAAM,WAAW,CAAC;AACjD,QAAM,MAAM,KAAK,IAAI,QAAQ,QAAQ,MAAM,QAAQ,KAAK;AACxD,QAAM,WAAqB;AAC3B,QAAM,SAAmB;AACzB,QAAM,QAAkB;AAExB,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAS,KAAK,QAAQ,OAAO,SAAY,SAAS,IAAI,KAAK,QAAQ;AACnE,WAAO,KAAK,MAAM,OAAO,SAAY,OAAO,IAAI,KAAK,MAAM;AAC3D,UAAM,KAAK,KAAK,OAAO,SAAY,MAAM,IAAI,KAAK,KAAK;AAAA;AAGzD,SAAO,WAAW,OAAO,UAAU,CAAC,GAAG,MAAM;AAC3C,UAAM,WAAW,MAAM,KAAK,MAAM,MAAM,OAAO,MAAM,KAAK,MAAM;AAChE,UAAM,SAAS,SAAS,aAAa,SAAS,iBAAiB,SAAS;AACxE,UAAM,IAAI,WAAW,SAAS;AAC9B,UAAM,IAAI,WAAW,OAAO;AAE5B,UAAM,SAAS;AAAA,MACb,YAAY,IAAI,IAAI,SAAS;AAAA,MAC7B,cAAc,IAAI;AAAA,MAClB,eAAe,IAAI,IAAI,SAAS;AAAA,MAChC,aAAa,IAAI;AAAA;AAGnB,QAAI;AAAY,aAAO,eAAe,IAAI,IAAI,SAAS;AACvD,QAAI;AAAW,aAAO,cAAc,IAAI,IAAI,SAAS;AAErD,WAAO;AAAA;AAAA;AAIJ,0CACL,OAKa;AACb,SAAO,4BAA4B,iCAAI,QAAJ,EAAW,WAAW,MAAM,YAAY;AAAA;AAGtE,6CACL,OAKa;AACb,SAAO,4BAA4B,iCAAI,QAAJ,EAAW,WAAW;AAAA;AAGpD,8CACL,OAKa;AACb,SAAO,4BAA4B,iCAAI,QAAJ,EAAW,YAAY;AAAA;",
  "names": []
}
