{
  "version": 3,
  "sources": ["../../../../src/styles/input/textInputStyle.ts"],
  "sourcesContent": ["import {css, CSSObject, FlattenSimpleInterpolation} from 'styled-components'\nimport {ThemeFontWeightKey} from '../../theme'\nimport {focusRingBorderStyle, focusRingStyle} from '../focusRing'\nimport {getResponsiveProp, rem, responsive} from '../helpers'\nimport {ThemeProps} from '../types'\n\n/**\n * @internal\n */\nexport interface TextInputInputStyleProps {\n  $fontSize?: number | number[]\n  $weight?: ThemeFontWeightKey\n}\n\n/**\n * @internal\n */\nexport interface TextInputRepresentationStyleProps {\n  $border?: boolean\n  $hasPrefix?: boolean\n  $hasSuffix?: boolean\n}\n\nconst ROOT_STYLE = css`\n  &:not([hidden]) {\n    display: flex;\n  }\n`\n\nexport function textInputRootStyle(): FlattenSimpleInterpolation {\n  return ROOT_STYLE\n}\n\nexport function textInputBaseStyle(\n  props: TextInputInputStyleProps & ThemeProps\n): FlattenSimpleInterpolation {\n  const {theme, $weight} = props\n  const font = theme.sanity.fonts.text\n  const color = theme.sanity.color.input\n\n  return css`\n    --input-fg-color: ${color.default.enabled.fg};\n    --input-placeholder-color: ${color.default.enabled.placeholder};\n\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${font.family};\n    font-weight: ${($weight && font.weights[$weight]) || font.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n    color: var(--input-fg-color);\n\n    /* NOTE: This is a hack to disable Chrome\u2019s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    /* enabled */\n    &:not(:invalid):not(:disabled):not(:read-only) {\n      --input-fg-color: ${color.default.enabled.fg};\n      --input-placeholder-color: ${color.default.enabled.placeholder};\n    }\n\n    /* disabled */\n    &:not(:invalid):disabled {\n      --input-fg-color: ${color.default.disabled.fg};\n      --input-placeholder-color: ${color.default.disabled.placeholder};\n    }\n\n    /* invalid */\n    &:invalid {\n      --input-fg-color: ${color.invalid.enabled.fg};\n      --input-placeholder-color: ${color.invalid.enabled.placeholder};\n    }\n\n    /* readOnly */\n    &:read-only {\n      --input-fg-color: ${color.default.readOnly.fg};\n      --input-placeholder-color: ${color.default.readOnly.placeholder};\n    }\n  `\n}\n\nexport function textInputFontSizeStyle(props: TextInputInputStyleProps & ThemeProps): CSSObject[] {\n  const {theme} = props\n  const {fonts, media} = theme.sanity\n\n  return responsive(media, getResponsiveProp(props.$fontSize, [2]), (sizeIndex) => {\n    const size = fonts.text.sizes[sizeIndex] || fonts.text.sizes[2]\n\n    return {\n      fontSize: rem(size.fontSize),\n      lineHeight: size.lineHeight / size.fontSize,\n    }\n  })\n}\n\nexport function textInputRepresentationStyle(\n  props: TextInputRepresentationStyleProps & ThemeProps\n): FlattenSimpleInterpolation {\n  const {$border, $hasPrefix, $hasSuffix, theme} = props\n  const {focusRing, input} = theme.sanity\n  const color = theme.sanity.color.input\n\n  return css`\n    --card-bg-color: ${color.default.enabled.bg};\n    --card-fg-color: ${color.default.enabled.fg};\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${$hasPrefix ? 0 : undefined};\n    border-bottom-left-radius: ${$hasPrefix ? 0 : undefined};\n    border-top-right-radius: ${$hasSuffix ? 0 : undefined};\n    border-bottom-right-radius: ${$hasSuffix ? 0 : undefined};\n\n    /* enabled */\n    *:not(:disabled) + && {\n      --input-box-shadow: ${$border\n        ? focusRingBorderStyle({color: color.default.enabled.border, width: input.border.width})\n        : undefined};\n    }\n\n    /* invalid */\n    *:not(:disabled):invalid + && {\n      --card-bg-color: ${color.invalid.enabled.bg};\n      --card-fg-color: ${color.invalid.enabled.fg};\n      --input-box-shadow: ${$border\n        ? focusRingBorderStyle({color: color.invalid.enabled.border, width: input.border.width})\n        : 'none'};\n    }\n\n    /* focused */\n    *:not(:disabled):focus + && {\n      --input-box-shadow: ${focusRingStyle({\n        border: $border\n          ? {color: color.default.enabled.border, width: input.border.width}\n          : undefined,\n        focusRing,\n      })};\n    }\n\n    /* disabled */\n    *:disabled + && {\n      --card-bg-color: ${color.default.disabled.bg};\n      --card-fg-color: ${color.default.disabled.fg};\n      --input-box-shadow: ${$border\n        ? focusRingBorderStyle({\n            color: color.default.disabled.border,\n            width: input.border.width,\n          })\n        : 'none'};\n    }\n\n    /* hovered */\n    @media (hover: hover) {\n      *:not(:disabled):not(:read-only):not(:invalid):hover + && {\n        --card-bg-color: ${color.default.hovered.bg};\n        --card-fg-color: ${color.default.hovered.fg};\n      }\n\n      *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + && {\n        --input-box-shadow: ${$border\n          ? focusRingBorderStyle({\n              color: color.default.hovered.border,\n              width: input.border.width,\n            })\n          : 'none'};\n      }\n    }\n\n    /* readOnly */\n    *:read-only + && {\n      --card-bg-color: ${color.default.readOnly.bg};\n      --card-fg-color: ${color.default.readOnly.fg};\n    }\n  `\n}\n"],
  "mappings": "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",
  "names": []
}
